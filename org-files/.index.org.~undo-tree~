(undo-tree-save-format-version . 1)
"2bf6173359953135f6b881ba482b7f24b78aea37"
[nil nil nil nil (25282 63761 503274 144000) 0 nil]
([nil nil ((336 . 337) (#("1" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . 336) (t 24996 44314 917083 43000)) nil (25282 63761 503273 274000) 0 nil])
([nil nil ((341 . 342) (#("2" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . 341)) nil (25282 63761 503272 219000) 0 nil])
([nil nil ((#("+ Sjak Smulders
" 0 1 (display "◦" fontified t) 1 16 (fontified t)) . 393) (undo-tree-id94 . -15) (undo-tree-id95 . -14) 407) nil (25282 63761 503271 459000) 0 nil])
([nil nil ((#("** For the canon track, we will use the following format:

Over the semester, you write – in a team – a “canon” in which you collect and explain insights from economics on a particular societal problem (e.g. Housing crisis, Pandemics).

To guide you in this work, the course teaches you how to “see economics everywhere” and communicate insights from economics to non-economists. You develop your skills and build up all the elements of the canon through:

+ reading the book by Tirole, Economics for the common good https://press.princeton.edu/books/hardcover/9780691175164/economics-for-the-common-good,
+ making assignments,
+ actively participating in our classes.
+ In the lectures we will:
  + have group discussions
  + develop material and practice economic analysis for your canon assignment
  + answer questions about the course resources (book and video material)
  + discuss progress and answer questions about assignments (proto-canon and canon)

A suggested workflow for the canon track is:

+ to prepare for lecture: read the Tirole book chapters associated to the upcoming lecture
+ attend lecture on campus and participate,
+ do the assignment within one week after the lecture.
+ if needed, send a question or material to j.a.smulders@uvt.nl
+ to get grades (protocanon assignment S1 and final canon) and to get feedback (assignment S2-7), stick to deadlines
" 0 1 (invisible t face org-level-2 fontified t) 1 2 (display #("○" 0 1 (face org-modern-symbol)) face org-level-2 fontified t) 2 3 (face org-level-2 fontified t) 3 57 (face org-level-2 fontified t) 57 457 (fontified t) 457 458 (display "◦" fontified t) 458 517 (fontified t) 517 603 (font-lock-multiline t htmlize-link (:uri "https://press.princeton.edu/books/hardcover/9780691175164/economics-for-the-common-good") help-echo "LINK: https://press.princeton.edu/books/hardcover/9780691175164/economics-for-the-common-good" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 603 604 (font-lock-multiline t htmlize-link (:uri "https://press.princeton.edu/books/hardcover/9780691175164/economics-for-the-common-good") help-echo "LINK: https://press.princeton.edu/books/hardcover/9780691175164/economics-for-the-common-good" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 604 606 (fontified t) 606 607 (display "◦" fontified t) 607 628 (fontified t) 628 629 (display "◦" fontified t) 629 669 (fontified t) 669 670 (display "◦" fontified t) 670 698 (fontified t) 698 699 (display "◦" fontified t) 699 725 (fontified t) 725 726 (display "◦" fontified t) 726 803 (fontified t) 803 804 (display "◦" fontified t) 804 877 (fontified t) 877 878 (display "◦" fontified t) 878 1006 (fontified t) 1006 1007 (display "◦" fontified t) 1007 1097 (fontified t) 1097 1098 (display "◦" fontified t) 1098 1141 (fontified t) 1141 1142 (display "◦" fontified t) 1142 1163 (fontified t) 1163 1196 (fontified t) 1196 1197 (display "◦" fontified t) 1197 1260 (fontified t) 1260 1261 (display "◦" fontified t) 1261 1377 (fontified t)) . 3322) (undo-tree-id88 . -1260) (undo-tree-id89 . -56) (undo-tree-id90 . -1260) (undo-tree-id91 . -56) (undo-tree-id92 . -1260) (undo-tree-id93 . -1260) 4582) nil (25282 63761 503269 605000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3322) (undo-tree-id87 . 1)) nil (25282 63761 503265 622000) 0 nil])
([nil nil ((#("\"*\" indicates that everyone has to attend this lecture (irrespective of whether you do the canon or python track).
" 0 115 (fontified t)) . 8081) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -7) 8088) nil (25282 63761 503263 640000) 0 nil])
([nil nil ((8104 . 8109) (8102 . 8104) (8101 . 8102) (8096 . 8101) (3904 . 3909) (3902 . 3904) (3901 . 3902) (3895 . 3901) (3894 . 3895) (3893 . 3894)) nil (25282 63761 503251 182000) 0 nil])
([nil nil ((3557 . 3558) (3543 . 3557) (3522 . 3543) (3502 . 3522) (#("r" 0 1 (fontified t)) . -3502) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("c" 0 1 (fontified t)) . -3503) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 3504 (3488 . 3504) (3481 . 3488) (3460 . 3481) (#("u" 0 1 (fontified t)) . -3460) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("i" 0 1 (fontified t)) . -3461) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 3462 (3456 . 3462) (3446 . 3456) (#("l" 0 1 (fontified t)) . -3446) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("e" 0 1 (fontified t)) . -3447) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 3448 (3447 . 3448) (3426 . 3447) (#("it is not clear whether the lectures will be live/online or hybrid. We have rooms booked for all lectures, so hopefully we can do things live in the classroom. But during the semester corona restrictions may force us to teach online.

If we will teach online, we use zoom and the links and passwords for these lectures will be published on Canvas.

Please keep an eye on the Canvas page where we will keep you posted on whether a lecture will be on campus or online.
" 0 467 (fontified t)) . 3426) (undo-tree-id44 . -466) (undo-tree-id45 . -466) (undo-tree-id46 . 467) (undo-tree-id47 . -467) (undo-tree-id48 . -466) (undo-tree-id49 . -466) (undo-tree-id50 . -199) (undo-tree-id51 . -199) (undo-tree-id52 . -234) (undo-tree-id53 . -199) (undo-tree-id54 . -234) (undo-tree-id55 . -250) (undo-tree-id56 . -234) (undo-tree-id57 . -250) (undo-tree-id58 . -348) (undo-tree-id59 . -250) (undo-tree-id60 . -348) (undo-tree-id61 . -364) (undo-tree-id62 . -348) (undo-tree-id63 . -364) (undo-tree-id64 . -466) (undo-tree-id65 . -364) (undo-tree-id66 . -466) (undo-tree-id67 . -466) 3892) nil (25282 63761 503243 904000) 0 nil])
([nil nil ((#("Python " 0 7 (face org-level-2 fontified t)) . 7785) (undo-tree-id96 . -6) (t 25282 63761 526529 886000)) nil (25282 63867 791439 298000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -641) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("o" 0 1 (fontified t)) . -642) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#("r" 0 1 (fontified t)) . -643) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#(" " 0 1 (fontified t)) . -644) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("s" 0 1 (fontified t)) . -645) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("t" 0 1 (fontified t)) . -646) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("u" 0 1 (fontified t)) . -647) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("d" 0 1 (fontified t)) . -648) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("e" 0 1 (fontified t)) . -649) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("n" 0 1 (fontified t)) . -650) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("t" 0 1 (fontified t)) . -651) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 652 (#("s" 0 1 (fontified t)) . -652) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#(" " 0 1 (fontified t)) . -653) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("f" 0 1 (fontified t)) . -654) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("o" 0 1 (fontified t)) . -655) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("l" 0 1 (fontified t)) . -656) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("l" 0 1 (fontified t)) . -657) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("o" 0 1 (fontified t)) . -658) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("w" 0 1 (fontified t)) . -659) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("i" 0 1 (fontified t)) . -660) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("n" 0 1 (fontified t)) . -661) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("g" 0 1 (fontified t)) . -662) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#(" " 0 1 (fontified t)) . -663) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("t" 0 1 (fontified t)) . -664) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#("h" 0 1 (fontified t)) . -665) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("e" 0 1 (fontified t)) . -666) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (#(" " 0 1 (fontified t)) . -667) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("p" 0 1 (fontified t)) . -668) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("y" 0 1 (fontified t)) . -669) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("t" 0 1 (fontified t)) . -670) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#("h" 0 1 (fontified t)) . -671) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("o" 0 1 (fontified t)) . -672) (undo-tree-id399 . -1) (undo-tree-id400 . -1) 673 (#("n" 0 1 (fontified t)) . -673) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (#(" " 0 1 (fontified t)) . -674) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#("t" 0 1 (fontified t)) . -675) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("r" 0 1 (fontified nil)) . -676) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("a" 0 1 (fontified nil)) . -677) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("c" 0 1 (fontified t)) . -678) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("k" 0 1 (fontified t)) . -679) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#(" " 0 1 (fontified t)) . -680) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("i" 0 1 (fontified t)) . -681) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("n" 0 1 (fontified t)) . -682) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#(" " 0 1 (fontified t)) . -683) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("t" 0 1 (fontified t)) . -684) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("h" 0 1 (fontified t)) . -685) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (#("i" 0 1 (fontified t)) . -686) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("s" 0 1 (fontified t)) . -687) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#(" " 0 1 (fontified t)) . -688) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (#("c" 0 1 (fontified t)) . -689) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("o" 0 1 (fontified t)) . -690) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (#("u" 0 1 (fontified t)) . -691) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("r" 0 1 (fontified t)) . -692) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("s" 0 1 (fontified t)) . -693) (undo-tree-id441 . -1) (undo-tree-id442 . -1) 694 (#("e" 0 1 (fontified t)) . -694) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#(":" 0 1 (fontified t)) . -695) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#(" " 0 1 (fontified t)) . -696) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#("W" 0 1 (fontified t)) . -697) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("e" 0 1 (fontified t)) . -698) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#(" " 0 1 (fontified t)) . -699) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("a" 0 1 (fontified t)) . -700) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("r" 0 1 (fontified t)) . -701) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("e" 0 1 (fontified t)) . -702) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#(" " 0 1 (fontified t)) . -703) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("v" 0 1 (fontified t)) . -704) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#("e" 0 1 (fontified t)) . -705) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (#("r" 0 1 (fontified t)) . -706) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (#("y" 0 1 (fontified t)) . -707) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#(" " 0 1 (fontified t)) . -708) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#("h" 0 1 (fontified t)) . -709) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("a" 0 1 (fontified t)) . -710) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("p" 0 1 (fontified t)) . -711) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("p" 0 1 (fontified t)) . -712) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("y" 0 1 (fontified t)) . -713) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#(" " 0 1 (fontified t)) . -714) (undo-tree-id483 . -1) (undo-tree-id484 . -1) 715 (#("t" 0 1 (fontified t)) . -715) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("h" 0 1 (fontified t)) . -716) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("a" 0 1 (fontified t)) . -717) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("t" 0 1 (fontified t)) . -718) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#(" " 0 1 (fontified t)) . -719) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("w" 0 1 (fontified t)) . -720) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("e" 0 1 (fontified t)) . -721) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#(" " 0 1 (fontified t)) . -722) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#("p" 0 1 (fontified t)) . -723) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("a" 0 1 (fontified t)) . -724) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("r" 0 1 (fontified t)) . -725) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("t" 0 1 (fontified t)) . -726) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("n" 0 1 (fontified t)) . -727) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("e" 0 1 (fontified t)) . -728) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#("r" 0 1 (fontified t)) . -729) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#(" " 0 1 (fontified t)) . -730) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("w" 0 1 (fontified t)) . -731) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("i" 0 1 (fontified t)) . -732) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("t" 0 1 (fontified t)) . -733) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (#("h" 0 1 (fontified t)) . -734) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#(" " 0 1 (fontified t)) . -735) (undo-tree-id525 . -1) 736 (t 25282 63867 812175 32000)) nil (25283 3648 447617 997000) 0 nil])
([nil nil ((641 . 642) (#("[" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 641) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . -1)) nil (25283 3648 447489 857000) 0 nil])
([nil nil ((677 . 678) (#("p" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -677) (undo-tree-id333 . -1) 678) nil (25283 3648 447486 444000) 0 nil])
([nil nil ((#("[" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -740) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("D" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -741) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) 742 (#("a" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -742) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("t" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -743) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("a" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -744) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("c" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -745) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("a" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -746) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("m" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -747) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("p" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -748) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("]" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -749) (undo-tree-id283 . 1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) . -750) (undo-tree-id286 . 1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("l" 0 1 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -751) (undo-tree-id289 . -1) 752 (751 . 752) (750 . 751) (nil isearch-open-invisible org-fold-core--isearch-show 749 . 750) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 749 . 750) (nil fontified nil 749 . 750) (749 . 750) (#("]" 0 1 (fontified nil)) . -749) (undo-tree-id290 . 1) (undo-tree-id291 . -1) (#("]" 0 1 (fontified nil)) . -750) (750 . 751) (#(" " 0 1 (fontified nil)) . -750) (750 . 751) (#("]" 0 1 (fontified nil)) . -750) (750 . 751) (nil isearch-open-invisible org-fold-core--isearch-show 749 . 750) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 749 . 750) (nil fontified nil 749 . 750) (749 . 750) (#("]" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . -749) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . 1) (undo-tree-id297 . -1) (#("]" 0 1 (fontified nil)) . -750) (750 . 751) (#(" " 0 1 (fontified nil)) . -750) (750 . 751) (#("]" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . -750) (750 . 751) (#("[" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -750) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("[" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -751) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("]" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -752) (undo-tree-id304 . 1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("]" 0 1 (face org-link font-lock-multiline t htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) . -753) (undo-tree-id307 . -1) 754 (753 . 754) (#("]" 0 1 (face org-link font-lock-multiline t htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) . -753) (undo-tree-id308 . -1) (#("]" 0 1 (fontified nil)) . -754) (nil isearch-open-invisible org-fold-core--isearch-show 754 . 755) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 754 . 755) (nil font-lock-multiline t 754 . 755) (nil face org-link 754 . 755) (nil fontified nil 754 . 755) (754 . 755) (#(" " 0 1 (fontified nil)) . -754) (nil isearch-open-invisible org-fold-core--isearch-show 754 . 755) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 754 . 755) (nil font-lock-multiline t 754 . 755) (nil face org-link 754 . 755) (nil fontified nil 754 . 755) (754 . 755) (#("]" 0 1 (fontified nil face org-link font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -754) (754 . 755) (752 . 753) (#("]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) . 751) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . 1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (nil fontified nil 750 . 751) (nil isearch-open-invisible org-fold-core--isearch-show 750 . 751) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 750 . 751) (nil help-echo "LINK: https://www.datacamp.com/" 750 . 751) (nil htmlize-link (:uri "https://www.datacamp.com/") 750 . 751) (nil mouse-face highlight 750 . 751) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 750 . 751) (nil font-lock-multiline t 750 . 751) (nil face org-link 750 . 751) (750 . 751) (751 . 752) (#("]" 0 1 (fontified nil face org-link font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -751) (751 . 752) (#("d" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -670) (undo-tree-id317 . -1) (#("a" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -671) (undo-tree-id318 . -1) (#("t" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -672) (undo-tree-id319 . -1) (#("a" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -673) (undo-tree-id320 . -1) (#("c" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -674) (undo-tree-id321 . -1) (#("a" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -675) (undo-tree-id322 . -1) (#("m" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -676) (undo-tree-id323 . -1) (#("p" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -677) (undo-tree-id324 . -1) (#("]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -678) (undo-tree-id325 . 1) (undo-tree-id326 . -1) (undo-tree-id327 . 1) (undo-tree-id328 . -1) 679 (#("]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) . -679) (undo-tree-id329 . -1) (undo-tree-id330 . 1) (undo-tree-id331 . -1) (#(" " 0 1 (fontified t)) . -680) (undo-tree-id332 . -1) 681) nil (25283 3648 447478 972000) 0 nil])
([nil nil ((#(" offers great on-line courses for you to learn python." 0 54 (fontified t)) . 740) (undo-tree-id246 . 54)) nil (25283 3648 447410 685000) 0 nil])
([nil nil ((#("[" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -641) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("[" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -642) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("h" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -643) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("t" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -644) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("t" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -645) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("p" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -646) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("s" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -647) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#(":" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -648) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("/" 0 1 (htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -649) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("/" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://") help-echo "LINK: https://" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -650) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("w" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://w") help-echo "LINK: https://w" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -651) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("w" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://ww") help-echo "LINK: https://ww" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -652) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("w" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www") help-echo "LINK: https://www" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -653) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("." 0 1 (htmlize-link (:uri "https://www.d") help-echo "LINK: https://www.d" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -654) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("d" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.d") help-echo "LINK: https://www.d" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -655) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("a" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.da") help-echo "LINK: https://www.da" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -656) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("t" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.dat") help-echo "LINK: https://www.dat" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -657) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 658 (#("a" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.data") help-echo "LINK: https://www.data" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -658) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("c" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datac") help-echo "LINK: https://www.datac" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -659) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("a" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.dataca") help-echo "LINK: https://www.dataca" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -660) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("m" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacam") help-echo "LINK: https://www.datacam" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -661) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("p" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp") help-echo "LINK: https://www.datacamp" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -662) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("." 0 1 (htmlize-link (:uri "https://www.datacamp.c") help-echo "LINK: https://www.datacamp.c" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -663) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("c" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.c") help-echo "LINK: https://www.datacamp.c" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -664) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("o" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.co") help-echo "LINK: https://www.datacamp.co" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -665) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("m" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com") help-echo "LINK: https://www.datacamp.com" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -666) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("/" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -667) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("]" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -668) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("[" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -669) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("f" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -670) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("o" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -671) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("r" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -672) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -673) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("t" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -674) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("h" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -675) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("i" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -676) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("s" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -677) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -678) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 679 (#("c" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -679) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("o" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -680) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("u" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -681) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("r" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -682) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("s" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -683) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("e" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -684) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 685 (#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -685) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("t" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -686) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("o" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -687) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -688) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("t" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -689) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("e" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -690) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("a" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -691) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("c" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -692) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("h" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -693) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -694) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("y" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -695) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("o" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -696) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("u" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -697) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -698) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("p" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -699) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("y" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -700) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("t" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -701) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("h" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -702) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("o" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -703) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("n" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -704) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("." 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -705) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 706) nil (25283 3648 447401 203000) 0 nil])
([nil nil ((#(" " 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 641) (undo-tree-id115 . 1)) nil (25283 3648 447193 881000) 0 nil])
([nil nil ((684 . 685) (683 . 684) (#("]" 0 1 (fontified nil)) . -683) (undo-tree-id112 . -1) (undo-tree-id113 . 1) (undo-tree-id114 . -1) (#("]" 0 1 (fontified nil)) . -684) (684 . 685) (#(" " 0 1 (fontified nil)) . -684) (684 . 685) (#("]" 0 1 (fontified nil)) . -684) (683 . 685) (#("]" 0 1 (fontified nil)) . -683) (#("]" 0 1 (fontified nil)) . 684) (683 . 684) (#(" " 0 1 (fontified nil)) . -683) (683 . 684) (#("]" 0 1 (fontified nil)) . -683) (679 . 684) (675 . 679) (#("]" 0 1 (fontified nil)) . 676) (675 . 676) (674 . 676) (#("[" 0 1 (htmlize-link (:uri "https://www.datacamp.com/") help-echo "LINK: https://www.datacamp.com/" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . -674) (674 . 675)) nil (25283 3648 447191 510000) 0 nil])
([nil nil ((2993 . 3013) (2990 . 2993) (2969 . 2990) (2965 . 2969) (2962 . 2965) (2952 . 2962) (2946 . 2952) (#("o" 0 1 (fontified t)) . -2946) (undo-tree-id97 . -1) (#("f" 0 1 (fontified t)) . -2947) (undo-tree-id98 . -1) (#(" " 0 1 (fontified t)) . -2948) (undo-tree-id99 . -1) 2949 (2934 . 2949) (2929 . 2934) (2908 . 2929) (#("e" 0 1 (fontified t)) . -2908) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 2909 (2904 . 2909) (2902 . 2904) (#("R" 0 1 (fontified t)) . -2902) (undo-tree-id102 . -1) (#("e" 0 1 (fontified t)) . -2903) (undo-tree-id103 . -1) (#("a" 0 1 (fontified t)) . -2904) (undo-tree-id104 . -1) (#("d" 0 1 (fontified t)) . -2905) (undo-tree-id105 . -1) 2906 (2898 . 2906) (2887 . 2898) (#("t" 0 1 (fontified t)) . -2887) (undo-tree-id106 . -1) (#("i" 0 1 (fontified t)) . -2888) (undo-tree-id107 . -1) (#("o" 0 1 (fontified t)) . -2889) (undo-tree-id108 . -1) 2890 (2881 . 2890) (#(" " 0 1 (fontified t)) . -2881) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -2882) (undo-tree-id110 . -1) 2883 (2881 . 2883) (#("  " 0 2 (fontified nil)) . 2880) (undo-tree-id111 . -2) (2879 . 2883)) nil (25283 3648 447183 514000) 0 nil])
([nil nil ((423 . 427) (411 . 423) (393 . 411) (#("+ 
+ Mery Ferrando" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 18 (fontified nil)) . 393) (undo-tree-id526 . 13) (undo-tree-id527 . -9) (undo-tree-id528 . -18) (undo-tree-id529 . 8) (undo-tree-id530 . -18) (undo-tree-id531 . -18) (undo-tree-id532 . -18) (undo-tree-id533 . -18) (undo-tree-id534 . -18) (undo-tree-id535 . -18) (undo-tree-id536 . -18) (undo-tree-id537 . -18) (undo-tree-id538 . -18) (undo-tree-id539 . -18) (undo-tree-id540 . -18) (undo-tree-id541 . -18) (undo-tree-id542 . -18) (undo-tree-id543 . -18) (undo-tree-id544 . -3) (393 . 396) 408 (395 . 408) (381 . 395) (#("+ 
+ Jan Boone" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 14 (fontified nil)) . 381) (undo-tree-id545 . -14) (undo-tree-id546 . -14) (381 . 384) 392 (#("
" 0 1 (fontified t)) . -392) (undo-tree-id547 . -1) (#(" " 0 1 (fontified t)) . -393) (undo-tree-id548 . -1) (#(" " 0 1 (fontified t)) . -394) (undo-tree-id549 . -1) 395 (392 . 395) (#("F" 0 1 (face org-level-2 fontified t)) . -1079) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#("o" 0 1 (face org-level-2 fontified t)) . -1080) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("r" 0 1 (face org-level-2 fontified t)) . -1081) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#(" " 0 1 (face org-level-2 fontified t)) . -1082) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (#("t" 0 1 (face org-level-2 fontified t)) . -1083) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("h" 0 1 (face org-level-2 fontified t)) . -1084) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#("e" 0 1 (face org-level-2 fontified t)) . -1085) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#(" " 0 1 (face org-level-2 fontified t)) . -1086) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("p" 0 1 (face org-level-2 fontified t)) . -1087) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#("y" 0 1 (face org-level-2 fontified t)) . -1088) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 1089 (#("t" 0 1 (face org-level-2 fontified t)) . -1089) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("h" 0 1 (face org-level-2 fontified t)) . -1090) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#("o" 0 1 (face org-level-2 fontified t)) . -1091) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (#("n" 0 1 (face org-level-2 fontified t)) . -1092) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#(" " 0 1 (face org-level-2 fontified t)) . -1093) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("t" 0 1 (face org-level-2 fontified t)) . -1094) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (#("r" 0 1 (face org-level-2 fontified t)) . -1095) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (#("a" 0 1 (face org-level-2 fontified t)) . -1096) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("c" 0 1 (face org-level-2 fontified t)) . -1097) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("k" 0 1 (face org-level-2 fontified t)) . -1098) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#("," 0 1 (face org-level-2 fontified t)) . -1099) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#(" " 0 1 (face org-level-2 fontified t)) . -1100) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 1101 (t 25283 3648 456459 794000)) nil (25283 3738 269533 575000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 742) (t 25283 3738 273659 952000)) nil (25283 4078 444896 515000) 0 nil])
([nil nil ((2814 . 2818) (2793 . 2814) (#("p" 0 1 (fontified t)) . -2793) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (#("r" 0 1 (fontified t)) . -2794) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (#("o" 0 1 (fontified t)) . -2795) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (#("b" 0 1 (fontified t)) . -2796) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (#("l" 0 1 (fontified t)) . -2797) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("e" 0 1 (fontified t)) . -2798) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("m" 0 1 (fontified t)) . -2799) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("s" 0 1 (fontified t)) . -2800) (undo-tree-id781 . -1) (undo-tree-id782 . -1) 2801 (2613 . 2622) (#("j" 0 1 (fontified t)) . -2613) (undo-tree-id783 . -1) (#("e" 0 1 (fontified t)) . -2614) (undo-tree-id784 . -1) 2615 (2606 . 2615) (#(" " 0 1 (fontified t)) . -2597) (undo-tree-id785 . -1) (#("l" 0 1 (fontified t)) . -2598) (undo-tree-id786 . -1) (#("e" 0 1 (fontified t)) . -2599) (undo-tree-id787 . -1) (#("v" 0 1 (fontified t)) . -2600) (undo-tree-id788 . -1) (#("t" 0 1 (fontified t)) . -2601) (undo-tree-id789 . -1) (#("u" 0 1 (fontified t)) . -2602) (undo-tree-id790 . -1) (#("r" 0 1 (fontified t)) . -2603) (undo-tree-id791 . -1) (#("e" 0 1 (fontified t)) . -2604) (undo-tree-id792 . -1) 2605 (2589 . 2605)) nil (25283 4078 444893 372000) 0 nil])
([nil nil ((#("In addition to this, read the book by Jean Tirole to get an idea how you can communicate economic models to a non-economic audience.
" 0 132 (fontified t) 132 133 (fontified t)) . 2934) (undo-tree-id764 . 133) (undo-tree-id765 . -2)) nil (25283 4078 444645 566000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3149 . 3150) (#("
" 0 1 (fontified nil)) . -3282) (3149 . 3283)) nil (25283 4078 444643 813000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2933) (undo-tree-id762 . -1) (undo-tree-id763 . -1)) nil (25283 4078 444643 105000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2934) (undo-tree-id759 . -1) (#(" " 0 1 (fontified t)) . -2935) (undo-tree-id760 . -1) 2936 (2934 . 2936) (#("  " 0 2 (fontified nil)) . 2933) (undo-tree-id761 . -2) (2935 . 2936) (2933 . 2935) (2933 . 2934)) nil (25283 4078 444641 30000) 0 nil])
([nil nil ((#("Hence, sitting back and hoping to copy all answers during the lectures is not going to work. This is a bad strategy anyway: you learn python by trying (and failing) to code; not by copy/paste-ing the " 0 200 (fontified t)) . 2936)) nil (25283 4078 444638 509000) 0 nil])
([nil nil ((#("correct code.
" 0 1 (fontified t) 1 14 (fontified t)) . 2936) (undo-tree-id758 . -14)) nil (25283 4078 444637 838000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2936) (undo-tree-id757 . -1)) nil (25283 4078 444636 824000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2936) (undo-tree-id756 . -1) 2937 (2936 . 2937)) nil (25283 4078 444635 777000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2933) (undo-tree-id755 . -1)) nil (25283 4078 444634 428000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2933)) nil (25283 4078 444632 148000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3076) (undo-tree-id751 . -1) 3077 (3076 . 3077) (#("*" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -3076) (undo-tree-id752 . -1) (#(" " 0 1 (fontified t)) . -3077) (undo-tree-id753 . -1) 3078 (3077 . 3078) (#(" " 0 1 (fontified t)) . -3077) (undo-tree-id754 . -1) 3078 (3077 . 3078) (3076 . 3078) (#("*" 0 1 (fontified nil)) . -3076) (3068 . 3077) (3067 . 3068) (3067 . 3068)) nil (25283 4078 444630 597000) 0 nil])
([nil nil ((3234 . 3238) (#("f" 0 1 (fontified t)) . -3234) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#(" " 0 1 (fontified t)) . -3235) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) 3236 (3225 . 3236) (#("u" 0 1 (fontified t)) . -3225) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) 3226 (#("y" 0 1 (fontified t)) . -3226) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) 3227 (3216 . 3227) (3202 . 3216) (3181 . 3202) (3174 . 3181) (3160 . 3174) (#(" " 0 1 (fontified t)) . -3160) (undo-tree-id737 . -1) (#("a" 0 1 (fontified t)) . -3161) (undo-tree-id738 . -1) (#("m" 0 1 (fontified t)) . -3162) (undo-tree-id739 . -1) (#("n" 0 1 (fontified t)) . -3163) (undo-tree-id740 . -1) 3164 (3160 . 3164) (3139 . 3160) (3133 . 3139) (3112 . 3133) (#("o" 0 1 (fontified t)) . -3112) (undo-tree-id741 . -1) (#("f" 0 1 (fontified t)) . -3113) (undo-tree-id742 . -1) (#("r" 0 1 (fontified t)) . -3114) (undo-tree-id743 . -1) 3115 (3101 . 3115) (3093 . 3101) (#("r" 0 1 (fontified t)) . -3093) (undo-tree-id744 . -1) (#("a" 0 1 (fontified t)) . -3094) (undo-tree-id745 . -1) 3095 (3092 . 3095) (#("w" 0 1 (fontified t)) . -3092) (undo-tree-id746 . -1) (#("e" 0 1 (fontified t)) . -3093) (undo-tree-id747 . -1) 3094 (3086 . 3094) (#("t" 0 1 (fontified t)) . -3086) (undo-tree-id748 . -1) (#("a" 0 1 (fontified t)) . -3087) (undo-tree-id749 . -1) (#("u" 0 1 (fontified t)) . -3088) (undo-tree-id750 . -1) 3089 (3083 . 3089) (3081 . 3083) (3077 . 3081)) nil (25283 4078 444623 409000) 0 nil])
([nil nil ((3238 . 3246)) nil (25283 4078 444592 220000) 0 nil])
([nil nil ((3246 . 3252)) nil (25283 4078 444591 495000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3249) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#("e" 0 1 (fontified t)) . -3250) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("s" 0 1 (fontified t)) . -3251) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) 3252) nil (25283 4078 444590 17000) 0 nil])
([nil nil ((3249 . 3250)) nil (25283 4078 444570 191000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -3246) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (#("i" 0 1 (fontified t)) . -3247) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (#("d" 0 1 (fontified t)) . -3248) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("e" 0 1 (fontified t)) . -3249) (undo-tree-id673 . -1) (undo-tree-id674 . -1) 3250) nil (25283 4078 444567 100000) 0 nil])
([nil nil ((3246 . 3266)) nil (25283 4078 444232 456000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -3264) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#("t" 0 1 (fontified t)) . -3265) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) 3266) nil (25283 4078 444231 567000) 0 nil])
([nil nil ((3264 . 3266)) nil (25283 4078 444222 325000) 0 nil])
([nil nil ((3266 . 3287)) nil (25283 4078 444221 757000) 0 nil])
([nil nil ((3287 . 3292)) nil (25283 4078 444221 255000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3291) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) 3292) nil (25283 4078 444219 884000) 0 nil])
([nil nil ((3291 . 3296)) nil (25283 4078 444204 893000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -3368) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (#("t" 0 1 (fontified t)) . -3369) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) 3370 (3368 . 3370) (3351 . 3368) (3330 . 3351) (3329 . 3330) (3308 . 3329) (#("g" 0 1 (fontified t)) . -3308) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (#("r" 0 1 (fontified t)) . -3309) (undo-tree-id1751 . -1) 3310 (3296 . 3310) (t 25283 4078 470228 791000)) nil (25283 5426 241200 623000) 0 nil])
([nil nil ((3368 . 3369)) nil (25283 5426 241180 535000) 0 nil])
([nil nil ((3369 . 3375)) nil (25283 5426 241180 171000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3354) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (#(" " 0 1 (fontified t)) . -3355) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (#("l" 0 1 (fontified t)) . -3356) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (#("i" 0 1 (fontified t)) . -3357) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#("k" 0 1 (fontified nil)) . -3358) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (#("e" 0 1 (fontified nil)) . -3359) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (#(" " 0 1 (fontified t)) . -3360) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (#("t" 0 1 (fontified t)) . -3361) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (#("o" 0 1 (fontified t)) . -3362) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (#(" " 0 1 (fontified t)) . -3363) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (#("d" 0 1 (fontified t)) . -3364) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (#("o" 0 1 (fontified t)) . -3365) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (#("." 0 1 (fontified t)) . -3366) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (#(" " 0 1 (fontified t)) . -3367) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (#("H" 0 1 (fontified t)) . -3368) (undo-tree-id1706 . -1) (#("o" 0 1 (fontified t)) . -3369) (undo-tree-id1707 . -1) (#("w" 0 1 (fontified t)) . -3370) (undo-tree-id1708 . -1) (#("e" 0 1 (fontified t)) . -3371) (undo-tree-id1709 . -1) (#("v" 0 1 (fontified t)) . -3372) (undo-tree-id1710 . -1) (#("e" 0 1 (fontified t)) . -3373) (undo-tree-id1711 . -1) (#("r" 0 1 (fontified t)) . -3374) (undo-tree-id1712 . -1) 3375) nil (25283 5426 241173 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3333) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (#("c" 0 1 (fontified t)) . -3334) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (#("h" 0 1 (fontified t)) . -3335) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (#("o" 0 1 (fontified t)) . -3336) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("o" 0 1 (fontified t)) . -3337) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (#("s" 0 1 (fontified t)) . -3338) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (#("e" 0 1 (fontified t)) . -3339) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (#(" " 0 1 (fontified t)) . -3340) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (#("w" 0 1 (fontified t)) . -3341) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (#("h" 0 1 (fontified t)) . -3342) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("a" 0 1 (fontified t)) . -3343) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (#("t" 0 1 (fontified t)) . -3344) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#(" " 0 1 (fontified t)) . -3345) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#("y" 0 1 (fontified t)) . -3346) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("o" 0 1 (fontified t)) . -3347) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (#("u" 0 1 (fontified t)) . -3348) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (#(" " 0 1 (fontified t)) . -3349) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#("w" 0 1 (fontified t)) . -3350) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (#("o" 0 1 (fontified t)) . -3351) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (#("u" 0 1 (fontified t)) . -3352) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (#("l" 0 1 (fontified t)) . -3353) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) 3354) nil (25283 5426 240997 241000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3330) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("a" 0 1 (fontified t)) . -3331) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("n" 0 1 (fontified t)) . -3332) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) 3333) nil (25283 5426 240585 322000) 0 nil])
([nil nil ((3330 . 3345)) nil (25283 5426 240541 641000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3343) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#(" " 0 1 (fontified t)) . -3344) (undo-tree-id795 . -1) 3345) nil (25283 5426 240540 548000) 0 nil])
([nil nil ((3343 . 3359)) nil (25283 5426 240530 424000) 0 nil])
([nil nil ((3359 . 3370)) nil (25283 5426 240530 92000) 0 nil])
([nil nil ((3370 . 3391)) nil (25283 5426 240529 609000) 0 nil])
([nil nil ((3391 . 3409)) nil (25283 5426 240526 7000) 0 nil])
([nil nil ((4157 . 4163) (#("u" 0 1 (fontified t)) . -4157) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) 4158 (4147 . 4158) (#(" " 0 1 (fontified t)) . -4147) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) 4148 (4137 . 4148) (4128 . 4137) (4114 . 4128) (4111 . 4114) (4090 . 4111) (#("e" 0 1 (fontified t)) . -4090) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (#("l" 0 1 (fontified t)) . -4091) (undo-tree-id1762 . -1) (#("a" 0 1 (fontified t)) . -4092) (undo-tree-id1763 . -1) 4093 (4083 . 4093) (4081 . 4083) (4079 . 4081) (4073 . 4079) (#("[" 0 1 (fontified nil)) . -4073) (undo-tree-id1764 . -1) (#("]" 0 1 (fontified t)) . 4074) (#("r" 0 1 (fontified t)) . -4074) (undo-tree-id1765 . -1) (#("e" 0 1 (fontified t)) . -4075) (undo-tree-id1766 . -1) 4076 (4074 . 4076) (4073 . 4075) (#("[" 0 1 (fontified nil)) . -4073) (4067 . 4074) (4046 . 4067) (4034 . 4046) (#("v" 0 1 (fontified t)) . -4034) (undo-tree-id1767 . -1) (#("e" 0 1 (fontified t)) . -4035) (undo-tree-id1768 . -1) (#("r" 0 1 (fontified t)) . -4036) (undo-tree-id1769 . -1) (#("y" 0 1 (fontified t)) . -4037) (undo-tree-id1770 . -1) (#("t" 0 1 (fontified t)) . -4038) (undo-tree-id1771 . -1) (#("h" 0 1 (fontified t)) . -4039) (undo-tree-id1772 . -1) (#("i" 0 1 (fontified t)) . -4040) (undo-tree-id1773 . -1) 4041 (4032 . 4041) (#("t" 0 1 (fontified t)) . -4032) (undo-tree-id1774 . -1) (#("e" 0 1 (fontified t)) . -4033) (undo-tree-id1775 . -1) (#(" " 0 1 (fontified t)) . -4034) (undo-tree-id1776 . -1) 4035 (4024 . 4035) (4022 . 4024) (#("b" 0 1 (fontified t)) . -4022) (undo-tree-id1777 . -1) (#("e" 0 1 (fontified t)) . -4023) (undo-tree-id1778 . -1) (#(" " 0 1 (fontified t)) . -4024) (undo-tree-id1779 . -1) (#("t" 0 1 (fontified t)) . -4025) (undo-tree-id1780 . -1) 4026 (4013 . 4026) (4004 . 4013) (#("d" 0 1 (fontified t)) . -4004) (undo-tree-id1781 . -1) (#(" " 0 1 (fontified t)) . -4005) (undo-tree-id1782 . -1) (#("e" 0 1 (fontified t)) . -4006) (undo-tree-id1783 . -1) (#("a" 0 1 (fontified t)) . -4007) (undo-tree-id1784 . -1) 4008 (3992 . 4008) (#("g" 0 1 (fontified t)) . -3992) (undo-tree-id1785 . -1) 3993 (3992 . 3993) (3971 . 3992) (#("y" 0 1 (fontified t)) . -3971) (undo-tree-id1786 . -1) (#("s" 0 1 (fontified t)) . -3972) (undo-tree-id1787 . -1) (#("e" 0 1 (fontified t)) . -3973) (undo-tree-id1788 . -1) (#(" " 0 1 (fontified t)) . -3974) (undo-tree-id1789 . -1) 3975 (3973 . 3975) (3961 . 3973) (3944 . 3961) (3938 . 3944) (3917 . 3938) (3896 . 3917) (3884 . 3896) (3876 . 3884) (3875 . 3876) (3864 . 3875) (3843 . 3864) (3822 . 3843) (3813 . 3822) (3792 . 3813) (3771 . 3792) (3761 . 3771) (3740 . 3761) (3730 . 3740) (3709 . 3730) (#("h" 0 1 (fontified t)) . -3709) (undo-tree-id1790 . -1) 3710 (3695 . 3710) (3694 . 3695) (3673 . 3694) (3629 . 3634) (3649 . 3668) (#("r" 0 1 (fontified t)) . -3649) (undo-tree-id1791 . -1) 3650 (3635 . 3650) (#("m" 0 1 (fontified t)) . -3635) (undo-tree-id1792 . -1) (#("g" 0 1 (fontified t)) . -3636) (undo-tree-id1793 . -1) (#(" " 0 1 (fontified t)) . -3637) (undo-tree-id1794 . -1) (#("t" 0 1 (fontified t)) . -3638) (undo-tree-id1795 . -1) (#("y" 0 1 (fontified t)) . -3639) (undo-tree-id1796 . -1) (#("p" 0 1 (fontified t)) . -3640) (undo-tree-id1797 . -1) (#("o" 0 1 (fontified t)) . -3641) (undo-tree-id1798 . -1) 3642 (3625 . 3642) (3605 . 3625) (#("t" 0 1 (fontified t)) . -3605) (undo-tree-id1799 . -1) (#("n" 0 1 (fontified t)) . -3606) (undo-tree-id1800 . -1) (#(" " 0 1 (fontified t)) . -3607) (undo-tree-id1801 . -1) 3608 (3594 . 3608) (3581 . 3594) (#("u" 0 1 (fontified t)) . -3581) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (#("s" 0 1 (fontified t)) . -3582) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) 3583 (3566 . 3583) (#("," 0 1 (fontified t)) . -3566) (undo-tree-id1806 . -1) 3567 (#("," 0 1 (fontified t)) . -3567) (undo-tree-id1807 . -1) (#("o" 0 1 (fontified t)) . -3568) (undo-tree-id1808 . -1) 3569 (3551 . 3569) (3530 . 3551) (3528 . 3530) (#("4" 0 1 (fontified t)) . -3528) (undo-tree-id1809 . -1) 3529 (3523 . 3529) (3460 . 3470) (#("y" 0 1 (fontified t)) . -3460) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (#("o" 0 1 (fontified t)) . -3461) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (#("u" 0 1 (fontified t)) . -3462) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (#("r" 0 1 (fontified t)) . -3463) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (#(" " 0 1 (fontified t)) . -3464) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (#("a" 0 1 (fontified t)) . -3465) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (#("s" 0 1 (fontified t)) . -3466) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (#("s" 0 1 (fontified t)) . -3467) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (#("i" 0 1 (fontified t)) . -3468) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (#("g" 0 1 (fontified t)) . -3469) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (#("n" 0 1 (fontified t)) . -3470) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (#("m" 0 1 (fontified t)) . -3471) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (#("e" 0 1 (fontified t)) . -3472) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("n" 0 1 (fontified t)) . -3473) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (#("t" 0 1 (fontified t)) . -3474) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) 3475 (3524 . 3528) (#(";" 0 1 (fontified t)) . -3524) (undo-tree-id1840 . -1) (#("p" 0 1 (fontified t)) . -3525) (undo-tree-id1841 . -1) (#("o" 0 1 (fontified t)) . -3526) (undo-tree-id1842 . -1) (#("w" 0 1 (fontified t)) . -3527) (undo-tree-id1843 . -1) 3528 (3510 . 3528) (3506 . 3510) (3485 . 3506) (#("m" 0 1 (fontified t)) . -3485) (undo-tree-id1844 . -1) 3486 (3482 . 3486) (#("e" 0 1 (fontified t)) . -3482) (undo-tree-id1845 . -1) (#("h" 0 1 (fontified t)) . -3483) (undo-tree-id1846 . -1) (#("n" 0 1 (fontified t)) . -3484) (undo-tree-id1847 . -1) (#("e" 0 1 (fontified t)) . -3485) (undo-tree-id1848 . -1) 3486 (3478 . 3486) (#("g" 0 1 (fontified t)) . -3478) (undo-tree-id1849 . -1) (#("a" 0 1 (fontified t)) . -3479) (undo-tree-id1850 . -1) (#("n" 0 1 (fontified t)) . -3480) (undo-tree-id1851 . -1) 3481 (3476 . 3481) (3475 . 3476) (3464 . 3475) (3446 . 3464) (3440 . 3446) (3419 . 3440) (#("m" 0 1 (fontified t)) . -3419) (undo-tree-id1852 . -1) (#("d" 0 1 (fontified t)) . -3420) (undo-tree-id1853 . -1) (#(" " 0 1 (fontified t)) . -3421) (undo-tree-id1854 . -1) 3422 (3404 . 3422) (3398 . 3404) (#("v" 0 1 (fontified t)) . -3398) (undo-tree-id1855 . -1) (#("e" 0 1 (fontified t)) . -3399) (undo-tree-id1856 . -1) (#("r" 0 1 (fontified t)) . -3400) (undo-tree-id1857 . -1) (#("y" 0 1 (fontified t)) . -3401) (undo-tree-id1858 . -1) (#(" " 0 1 (fontified t)) . -3402) (undo-tree-id1859 . -1) (#("w" 0 1 (fontified t)) . -3403) (undo-tree-id1860 . -1) (#("e" 0 1 (fontified t)) . -3404) (undo-tree-id1861 . -1) (#("l" 0 1 (fontified t)) . -3405) (undo-tree-id1862 . -1) (#("l" 0 1 (fontified t)) . -3406) (undo-tree-id1863 . -1) (#("." 0 1 (fontified t)) . -3407) (undo-tree-id1864 . -1) (#(" " 0 1 (fontified t)) . -3408) (undo-tree-id1865 . -1) 3409 (t 25283 5426 244155 634000)) nil (25283 5733 443992 128000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -19456) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (#(" " 0 1 (fontified t)) . -19457) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (#("g" 0 1 (fontified t)) . -19458) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . 1) (#("u" 0 1 (fontified t)) . -19459) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (#("e" 0 1 (fontified t)) . -19460) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (#("s" 0 1 (fontified t)) . -19461) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (#("s" 0 1 (fontified t)) . -19462) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (#("," 0 1 (fontified t)) . -19463) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (#(" " 0 1 (fontified t)) . -19464) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) 19465 (t 25283 5733 464721 198000)) nil (25283 12013 121231 942000) 0 nil])
([nil nil ((19456 . 19457) (#("a" 0 1 (fontified t)) . 19456) (undo-tree-id1912 . 1)) nil (25283 12013 121192 349000) 0 nil])
([nil nil ((19526 . 19528) (#("I" 0 1 (fontified t)) . -19526) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) 19527) nil (25283 12013 121190 435000) 0 nil])
([nil nil ((#("+ [[https://joelleduff.github.io/Final/STindex.html][first example]]
" 0 1 (display "◦" fontified t) 1 2 (fontified t) 2 52 (face org-link font-lock-multiline t htmlize-link (:uri "https://joelleduff.github.io/Final/STindex.html") help-echo "LINK: https://joelleduff.github.io/Final/STindex.html" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 52 53 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "https://joelleduff.github.io/Final/STindex.html") help-echo "LINK: https://joelleduff.github.io/Final/STindex.html" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 53 65 (face org-link font-lock-multiline t htmlize-link (:uri "https://joelleduff.github.io/Final/STindex.html") help-echo "LINK: https://joelleduff.github.io/Final/STindex.html" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 65 66 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "https://joelleduff.github.io/Final/STindex.html") help-echo "LINK: https://joelleduff.github.io/Final/STindex.html" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 66 67 (face org-link font-lock-multiline t htmlize-link (:uri "https://joelleduff.github.io/Final/STindex.html") help-echo "LINK: https://joelleduff.github.io/Final/STindex.html" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 67 68 (face org-link font-lock-multiline t htmlize-link (:uri "https://joelleduff.github.io/Final/STindex.html") help-echo "LINK: https://joelleduff.github.io/Final/STindex.html" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 68 69 (fontified t)) . 18894) (undo-tree-id1902 . 1) (undo-tree-id1903 . -68) (undo-tree-id1904 . 3) (undo-tree-id1905 . -67) (undo-tree-id1906 . 17) (undo-tree-id1907 . -53) (undo-tree-id1908 . -65) 18959) nil (25283 12013 121186 920000) 0 nil])
([nil nil ((#("+ [[https://joostbouten.github.io/AEA_Joost_Twan.html][second example]]
" 0 1 (display "◦" fontified t) 1 2 (fontified t) 2 37 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 37 43 (face (org-latex-and-related org-link) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 43 54 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 54 55 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 55 68 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 68 69 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 69 70 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 70 71 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://joostbouten.github.io/AEA_Joost_Twan.html") help-echo "LINK: https://joostbouten.github.io/AEA_Joost_Twan.html" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 71 72 (fontified t)) . 18894) (undo-tree-id1896 . -71) (undo-tree-id1897 . 72) (undo-tree-id1898 . 70) (undo-tree-id1899 . -3) (undo-tree-id1900 . 2) (undo-tree-id1901 . -71)) nil (25283 12013 121180 225000) 0 nil])
([nil nil ((#("+ [[https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb][third example]]
" 0 1 (display "◦" fontified t) 1 2 (fontified t) 2 83 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 83 139 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 139 140 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 140 152 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 152 153 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 153 154 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 154 155 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb") help-echo "LINK: https://github.com/koenbosch/Assignments/blob/master/KOEN%20VAN%20DEN%20BOSCH%20MARTIJN%20BLOEMBERG%20PYTHON%20ASSIGNMENT%20AEA1.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 155 156 (fontified t)) . 18894) (undo-tree-id1889 . -155) (undo-tree-id1890 . 156) (undo-tree-id1891 . -155) (undo-tree-id1892 . 154) (undo-tree-id1893 . -3) (undo-tree-id1894 . 2) (undo-tree-id1895 . -155)) nil (25283 12013 121174 369000) 0 nil])
([nil nil ((#("+ [[https://github.com/RoelSchoen/assignments][fourth example]]
" 0 1 (display "◦" fontified t) 1 2 (fontified t) 2 46 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/RoelSchoen/assignments") help-echo "LINK: https://github.com/RoelSchoen/assignments" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 46 47 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://github.com/RoelSchoen/assignments") help-echo "LINK: https://github.com/RoelSchoen/assignments" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 47 60 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/RoelSchoen/assignments") help-echo "LINK: https://github.com/RoelSchoen/assignments" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 60 61 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://github.com/RoelSchoen/assignments") help-echo "LINK: https://github.com/RoelSchoen/assignments" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 61 62 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/RoelSchoen/assignments") help-echo "LINK: https://github.com/RoelSchoen/assignments" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 62 63 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://github.com/RoelSchoen/assignments") help-echo "LINK: https://github.com/RoelSchoen/assignments" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 63 64 (fontified t)) . 18894) (undo-tree-id1883 . -63) (undo-tree-id1884 . 64) (undo-tree-id1885 . 62) (undo-tree-id1886 . -3) (undo-tree-id1887 . 2) (undo-tree-id1888 . -63)) nil (25283 12013 121167 907000) 0 nil])
([nil nil ((#("** examples of assignments from previous years

+ [[https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb][fifth example]]
" 0 1 (invisible t face org-level-2 fontified t) 1 2 (display #("○" 0 1 (face org-modern-symbol)) face org-level-2 fontified t) 2 3 (face org-level-2 fontified t) 3 46 (face org-level-2 fontified t) 46 48 (fontified t) 48 49 (display "◦" fontified t) 49 50 (fontified t) 50 134 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 134 145 (face (org-latex-and-related org-link) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 145 158 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 158 159 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 159 171 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 171 172 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 172 173 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 173 174 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb") help-echo "LINK: https://colab.research.google.com/github/aetknaapen/assignments/blob/master/Python_assignment_final.ipynb" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 174 175 (fontified t)) . 18846) (undo-tree-id1868 . -48) (undo-tree-id1869 . -45) (undo-tree-id1870 . -48) (undo-tree-id1871 . 127) (undo-tree-id1872 . -48) (undo-tree-id1873 . -48) (undo-tree-id1874 . -160) (undo-tree-id1875 . -160) (undo-tree-id1876 . -45) (undo-tree-id1877 . -48) (undo-tree-id1878 . -48) (undo-tree-id1879 . 125) (undo-tree-id1880 . -51) (undo-tree-id1881 . 2) (undo-tree-id1882 . -174) 18894) nil (25283 12013 121161 693000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18846) (undo-tree-id1866 . 1) (undo-tree-id1867 . 1)) nil (25283 12013 121144 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4400 . 4401) (#("
" 0 1 (fontified nil)) . -6033) (4400 . 6034) (t 25283 12013 131149 356000)) nil (25301 29936 933369 92000) 0 nil])
([nil nil ((#("| day |       date |        time | Staff              | room |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 60 (face org-table fontified nil) 60 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 63 (fontified nil)) . 4472) (undo-tree-id388 . -63) (undo-tree-id389 . -56) (4401 . 4472) 4461 (4458 . 4461) (#(" " 0 1 (face org-table fontified nil)) . 4458) (4457 . 4458) (#("L" 0 1 (face org-table fontified t)) . -4457) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#("o" 0 1 (face org-table fontified t)) . -4458) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("c" 0 1 (face org-table fontified t)) . -4459) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("a" 0 1 (face org-table fontified t)) . -4460) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#("t" 0 1 (face org-table fontified t)) . -4461) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (#("i" 0 1 (face org-table fontified t)) . -4462) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("o" 0 1 (face org-table fontified t)) . -4463) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("n" 0 1 (face org-table fontified t)) . -4464) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("(" 0 1 (face org-table fontified t)) . -4465) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#("s" 0 1 (face org-table fontified t)) . -4466) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#(")" 0 1 (face org-table fontified t)) . -4467) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . 1) (undo-tree-id413 . -1) 4468 (#("| day |       date |        time | Staff     | Location(s)  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 41 (face org-table fontified nil) 41 44 (face org-table fontified nil) 44 45 (face org-table fontified nil) 45 46 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 46 47 (face org-table fontified nil) 47 58 (face org-table fontified nil) 58 59 (face org-table fontified nil) 59 60 (face org-table fontified nil) 60 61 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 61 62 (fontified nil)) . 4472) (undo-tree-id414 . -41) (4401 . 4472) 4442 (#("m" 0 1 (face org-table fontified t)) . -4442) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("e" 0 1 (face org-table fontified t)) . -4443) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("m" 0 1 (face org-table fontified t)) . -4444) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("b" 0 1 (face org-table fontified t)) . -4445) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("e" 0 1 (face org-table fontified t)) . -4446) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("r" 0 1 (face org-table fontified t)) . -4447) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (#("(" 0 1 (face org-table fontified t)) . -4448) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("s" 0 1 (face org-table fontified t)) . -4449) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#(")" 0 1 (face org-table fontified t)) . -4450) (undo-tree-id431 . -1) (undo-tree-id432 . 1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 4451) nil (25301 29936 933364 829000) 0 nil])
([nil nil ((4436 . 4437) (#("S" 0 1 (face org-table fontified t)) . 4436) (undo-tree-id387 . -1)) nil (25301 29936 933333 526000) 0 nil])
([nil nil ((8402 . 8564) (8279 . 8386) (8101 . 8208) (7923 . 8030) (7745 . 7852) (7567 . 7674) (7389 . 7496) (7211 . 7318) (7033 . 7140) (6855 . 6962) (6677 . 6784) (6499 . 6606) (6321 . 6428) (6143 . 6250) (5965 . 6072) (5787 . 5894) (5609 . 5716) (5431 . 5538) (5253 . 5360) (5075 . 5182) (4897 . 5004) (4719 . 4826) (4471 . 4578) 4472 (#("
" 0 1 (fontified t)) . 4471) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 4472) nil (25301 29936 933331 910000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |Health care regulation                                                    |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 10589) (undo-tree-id333 . -178) (undo-tree-id334 . -70) (undo-tree-id335 . 178) (undo-tree-id336 . 178) (10308 . 10589) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |Empirical research                                                        |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 10308) (undo-tree-id337 . 178) (undo-tree-id338 . 178) (10027 . 10308) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  |Financial crisis                                                          |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 10027) (undo-tree-id339 . 178) (undo-tree-id340 . 178) (9746 . 10027) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |Canon 5: regulation                                                       | 13,17    |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 9746) (undo-tree-id341 . 178) (undo-tree-id342 . 178) (9465 . 9746) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  |Asymmetric information                                                    |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 9465) (undo-tree-id343 . 178) (undo-tree-id344 . 178) (9184 . 9465) (#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  |The market                                                                |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 82 (face org-table fontified nil font-lock-fontified t) 82 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 168 (face org-table fontified nil font-lock-fontified t) 168 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 9184) (undo-tree-id345 . 178) (undo-tree-id346 . 178) (8903 . 9184) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  |Canon 4: Finance                                                          | 10,11,12 | Pandas (3,4)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 8903) (undo-tree-id347 . 178) (undo-tree-id348 . 178) (8622 . 8903) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    |Canon 3: Climate                                                          | 8,16     | Pandas (1,2)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 8622) (undo-tree-id349 . 178) (undo-tree-id350 . 178) (8341 . 8622) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    |Q&A python/Datacamp                                                       |          | Intermediate (5)   |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 8341) (undo-tree-id351 . 178) (undo-tree-id352 . 178) (8060 . 8341) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    |Career Orientation & Preparation - LinkedIn & Networking through LinkedIn |          | Intermediate (3,4) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 8060) (undo-tree-id353 . 178) (undo-tree-id354 . 178) (7779 . 8060) (#("| Fri | 2022-10-07 | 12:45-14:30 | VERVALT            | MDZ 1 (99)   |Career Orientation & Preparation - Talent Management                      |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 66 (face org-table fontified nil) 66 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 7779) (undo-tree-id355 . 178) (undo-tree-id356 . 178) (7498 . 7779) (#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    |Career Orientation & Preparation - How to prepare for Assessments         |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 7498) (undo-tree-id357 . 178) (undo-tree-id358 . 178) (7217 . 7498) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |Career Orientation & Preparation - How to prepare for Assessments         |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 7217) (undo-tree-id359 . 178) (undo-tree-id360 . 178) (6936 . 7217) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |Career Orientation & Preparation - Personal Branding & Networking         |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 124 (face org-table fontified nil font-lock-fontified t) 124 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 6936) (undo-tree-id361 . 178) (undo-tree-id362 . 178) (6655 . 6936) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) |Career Orientation & Preparation - Personal Branding & Networking         |          | Intermediate (1,2) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 6655) (undo-tree-id363 . 178) (undo-tree-id364 . 178) (6374 . 6655) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) |Canon 2: Jobs                                                             | 6,7,9    | Intro (4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 6374) (undo-tree-id365 . 178) (undo-tree-id366 . 178) (6093 . 6374) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) |Plenary Career Session                                                    |          | Intro (3)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 6093) (undo-tree-id367 . 178) (undo-tree-id368 . 178) (5812 . 6093) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) |Canon 1: The economist                                                    | 1,2,3,4  | Intro (1,2)        |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 5812) (undo-tree-id369 . 178) (undo-tree-id370 . 178) (5531 . 5812) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    |Intro python, markdown, github, jupyterlab                                |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 5531) (undo-tree-id371 . 178) (undo-tree-id372 . 178) (5250 . 5531) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  |Canon 0: intro                                                            |          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 5250) (undo-tree-id373 . 178) (undo-tree-id374 . 178) (4969 . 5250) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  |--------------------------------------------------------------------------+----------+--------------------|
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil font-lock-fontified t) 71 72 (face org-table fontified nil font-lock-fontified t) 72 73 (face org-table fontified nil font-lock-fontified t) 73 74 (face org-table fontified nil font-lock-fontified t) 74 75 (face org-table fontified nil font-lock-fontified t) 75 76 (face org-table fontified nil font-lock-fontified t) 76 77 (face org-table fontified nil font-lock-fontified t) 77 78 (face org-table fontified nil font-lock-fontified t) 78 79 (face org-table fontified nil font-lock-fontified t) 79 80 (face org-table fontified nil font-lock-fontified t) 80 81 (face org-table fontified nil font-lock-fontified t) 81 82 (face org-table fontified nil font-lock-fontified t) 82 83 (face org-table fontified nil font-lock-fontified t) 83 84 (face org-table fontified nil font-lock-fontified t) 84 85 (face org-table fontified nil font-lock-fontified t) 85 86 (face org-table fontified nil font-lock-fontified t) 86 87 (face org-table fontified nil font-lock-fontified t) 87 88 (face org-table fontified nil font-lock-fontified t) 88 89 (face org-table fontified nil font-lock-fontified t) 89 90 (face org-table fontified nil font-lock-fontified t) 90 91 (face org-table fontified nil font-lock-fontified t) 91 92 (face org-table fontified nil font-lock-fontified t) 92 93 (face org-table fontified nil font-lock-fontified t) 93 94 (face org-table fontified nil font-lock-fontified t) 94 95 (face org-table fontified nil font-lock-fontified t) 95 96 (face org-table fontified nil font-lock-fontified t) 96 97 (face org-table fontified nil font-lock-fontified t) 97 98 (face org-table fontified nil font-lock-fontified t) 98 99 (face org-table fontified nil font-lock-fontified t) 99 100 (face org-table fontified nil font-lock-fontified t) 100 101 (face org-table fontified nil font-lock-fontified t) 101 102 (face org-table fontified nil font-lock-fontified t) 102 103 (face org-table fontified nil font-lock-fontified t) 103 104 (face org-table fontified nil font-lock-fontified t) 104 105 (face org-table fontified nil font-lock-fontified t) 105 106 (face org-table fontified nil font-lock-fontified t) 106 107 (face org-table fontified nil font-lock-fontified t) 107 108 (face org-table fontified nil font-lock-fontified t) 108 109 (face org-table fontified nil font-lock-fontified t) 109 110 (face org-table fontified nil font-lock-fontified t) 110 111 (face org-table fontified nil font-lock-fontified t) 111 112 (face org-table fontified nil font-lock-fontified t) 112 113 (face org-table fontified nil font-lock-fontified t) 113 114 (face org-table fontified nil font-lock-fontified t) 114 115 (face org-table fontified nil font-lock-fontified t) 115 116 (face org-table fontified nil font-lock-fontified t) 116 117 (face org-table fontified nil font-lock-fontified t) 117 118 (face org-table fontified nil font-lock-fontified t) 118 119 (face org-table fontified nil font-lock-fontified t) 119 120 (face org-table fontified nil font-lock-fontified t) 120 121 (face org-table fontified nil font-lock-fontified t) 121 122 (face org-table fontified nil font-lock-fontified t) 122 123 (face org-table fontified nil font-lock-fontified t) 123 124 (face org-table fontified nil font-lock-fontified t) 124 125 (face org-table fontified nil font-lock-fontified t) 125 126 (face org-table fontified nil font-lock-fontified t) 126 127 (face org-table fontified nil font-lock-fontified t) 127 128 (face org-table fontified nil font-lock-fontified t) 128 129 (face org-table fontified nil font-lock-fontified t) 129 130 (face org-table fontified nil font-lock-fontified t) 130 131 (face org-table fontified nil font-lock-fontified t) 131 132 (face org-table fontified nil font-lock-fontified t) 132 133 (face org-table fontified nil font-lock-fontified t) 133 134 (face org-table fontified nil font-lock-fontified t) 134 135 (face org-table fontified nil font-lock-fontified t) 135 136 (face org-table fontified nil font-lock-fontified t) 136 137 (face org-table fontified nil font-lock-fontified t) 137 138 (face org-table fontified nil font-lock-fontified t) 138 139 (face org-table fontified nil font-lock-fontified t) 139 140 (face org-table fontified nil font-lock-fontified t) 140 141 (face org-table fontified nil font-lock-fontified t) 141 142 (face org-table fontified nil font-lock-fontified t) 142 143 (face org-table fontified nil font-lock-fontified t) 143 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 146 (face org-table fontified nil font-lock-fontified t) 146 147 (face org-table fontified nil font-lock-fontified t) 147 148 (face org-table fontified nil font-lock-fontified t) 148 149 (face org-table fontified nil font-lock-fontified t) 149 150 (face org-table fontified nil font-lock-fontified t) 150 151 (face org-table fontified nil font-lock-fontified t) 151 152 (face org-table fontified nil font-lock-fontified t) 152 153 (face org-table fontified nil font-lock-fontified t) 153 154 (face org-table fontified nil font-lock-fontified t) 154 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 157 (face org-table fontified nil font-lock-fontified t) 157 158 (face org-table fontified nil font-lock-fontified t) 158 159 (face org-table fontified nil font-lock-fontified t) 159 160 (face org-table fontified nil font-lock-fontified t) 160 161 (face org-table fontified nil font-lock-fontified t) 161 162 (face org-table fontified nil font-lock-fontified t) 162 163 (face org-table fontified nil font-lock-fontified t) 163 164 (face org-table fontified nil font-lock-fontified t) 164 165 (face org-table fontified nil font-lock-fontified t) 165 166 (face org-table fontified nil font-lock-fontified t) 166 167 (face org-table fontified nil font-lock-fontified t) 167 168 (face org-table fontified nil font-lock-fontified t) 168 169 (face org-table fontified nil font-lock-fontified t) 169 170 (face org-table fontified nil font-lock-fontified t) 170 171 (face org-table fontified nil font-lock-fontified t) 171 172 (face org-table fontified nil font-lock-fontified t) 172 173 (face org-table fontified nil font-lock-fontified t) 173 174 (face org-table fontified nil font-lock-fontified t) 174 175 (face org-table fontified nil font-lock-fontified t) 175 176 (face org-table fontified nil font-lock-fontified t) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 177 178 (fontified nil)) . 4969) (undo-tree-id375 . 178) (undo-tree-id376 . 178) (4686 . 4969) (#("| day |       date |        time | staff              | room         |Topic                                                                     | Tirole   | Datacamp           ||-----+------------+-------------+--------------------+--------------|
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (face org-table fontified nil) 70 80 (face org-table fontified nil font-lock-fontified t) 80 144 (face org-table fontified nil font-lock-fontified t) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 145 155 (face org-table fontified nil font-lock-fontified t) 155 156 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil font-lock-fontified t) 156 176 (face org-table fontified nil font-lock-fontified t) 176 177 (face org-table fontified nil font-lock-fontified t) 177 178 (face org-table fontified nil) 178 179 (face org-table fontified nil) 179 180 (face org-table fontified nil) 180 181 (face org-table fontified nil) 181 182 (face org-table fontified nil) 182 183 (face org-table fontified nil) 183 184 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 184 185 (face org-table fontified nil) 185 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (face org-table fontified nil) 188 189 (face org-table fontified nil) 189 190 (face org-table fontified nil) 190 191 (face org-table fontified nil) 191 192 (face org-table fontified nil) 192 193 (face org-table fontified nil) 193 194 (face org-table fontified nil) 194 195 (face org-table fontified nil) 195 196 (face org-table fontified nil) 196 197 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 197 198 (face org-table fontified nil) 198 199 (face org-table fontified nil) 199 200 (face org-table fontified nil) 200 201 (face org-table fontified nil) 201 202 (face org-table fontified nil) 202 203 (face org-table fontified nil) 203 204 (face org-table fontified nil) 204 205 (face org-table fontified nil) 205 206 (face org-table fontified nil) 206 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (face org-table fontified nil) 209 210 (face org-table fontified nil) 210 211 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 211 212 (face org-table fontified nil) 212 213 (face org-table fontified nil) 213 214 (face org-table fontified nil) 214 215 (face org-table fontified nil) 215 216 (face org-table fontified nil) 216 217 (face org-table fontified nil) 217 218 (face org-table fontified nil) 218 219 (face org-table fontified nil) 219 220 (face org-table fontified nil) 220 221 (face org-table fontified nil) 221 222 (face org-table fontified nil) 222 223 (face org-table fontified nil) 223 224 (face org-table fontified nil) 224 225 (face org-table fontified nil) 225 226 (face org-table fontified nil) 226 227 (face org-table fontified nil) 227 228 (face org-table fontified nil) 228 229 (face org-table fontified nil) 229 230 (face org-table fontified nil) 230 231 (face org-table fontified nil) 231 232 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 232 233 (face org-table fontified nil) 233 234 (face org-table fontified nil) 234 235 (face org-table fontified nil) 235 236 (face org-table fontified nil) 236 237 (face org-table fontified nil) 237 238 (face org-table fontified nil) 238 239 (face org-table fontified nil) 239 240 (face org-table fontified nil) 240 241 (face org-table fontified nil) 241 242 (face org-table fontified nil) 242 243 (face org-table fontified nil) 243 244 (face org-table fontified nil) 244 245 (face org-table fontified nil) 245 246 (face org-table fontified nil) 246 247 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 247 248 (fontified nil)) . 4686) (undo-tree-id377 . -70) (undo-tree-id378 . -70) (undo-tree-id379 . -70) (undo-tree-id380 . -35) (undo-tree-id381 . 212) (undo-tree-id382 . -70) (undo-tree-id383 . 71) (undo-tree-id384 . -70) (4401 . 4686) 4471) nil (25301 29936 933324 855000) 0 nil])
([nil nil ((#("--------------------------------------------------------------------------+----------+-------------------- |          |                    |   |                                                                  |" 0 1 (face org-table font-lock-fontified t fontified t) 1 2 (face org-table font-lock-fontified t fontified t) 2 3 (face org-table font-lock-fontified t fontified t) 3 4 (face org-table font-lock-fontified t fontified t) 4 5 (face org-table font-lock-fontified t fontified t) 5 6 (face org-table font-lock-fontified t fontified t) 6 7 (face org-table font-lock-fontified t fontified t) 7 8 (face org-table font-lock-fontified t fontified t) 8 9 (face org-table font-lock-fontified t fontified t) 9 10 (face org-table font-lock-fontified t fontified t) 10 11 (face org-table font-lock-fontified t fontified t) 11 12 (face org-table font-lock-fontified t fontified t) 12 13 (face org-table font-lock-fontified t fontified t) 13 14 (face org-table font-lock-fontified t fontified t) 14 15 (face org-table font-lock-fontified t fontified t) 15 16 (face org-table font-lock-fontified t fontified t) 16 17 (face org-table font-lock-fontified t fontified t) 17 18 (face org-table font-lock-fontified t fontified t) 18 19 (face org-table font-lock-fontified t fontified t) 19 20 (face org-table font-lock-fontified t fontified t) 20 21 (face org-table font-lock-fontified t fontified t) 21 22 (face org-table font-lock-fontified t fontified t) 22 23 (face org-table font-lock-fontified t fontified t) 23 24 (face org-table font-lock-fontified t fontified t) 24 25 (face org-table font-lock-fontified t fontified t) 25 26 (face org-table font-lock-fontified t fontified t) 26 27 (face org-table font-lock-fontified t fontified t) 27 28 (face org-table font-lock-fontified t fontified t) 28 29 (face org-table font-lock-fontified t fontified t) 29 30 (face org-table font-lock-fontified t fontified t) 30 31 (face org-table font-lock-fontified t fontified t) 31 32 (face org-table font-lock-fontified t fontified t) 32 33 (face org-table font-lock-fontified t fontified t) 33 34 (face org-table font-lock-fontified t fontified t) 34 35 (face org-table font-lock-fontified t fontified t) 35 36 (face org-table font-lock-fontified t fontified t) 36 37 (face org-table font-lock-fontified t fontified t) 37 38 (face org-table font-lock-fontified t fontified t) 38 39 (face org-table font-lock-fontified t fontified t) 39 40 (face org-table font-lock-fontified t fontified t) 40 41 (face org-table font-lock-fontified t fontified t) 41 42 (face org-table font-lock-fontified t fontified t) 42 43 (face org-table font-lock-fontified t fontified t) 43 44 (face org-table font-lock-fontified t fontified t) 44 45 (face org-table font-lock-fontified t fontified t) 45 46 (face org-table font-lock-fontified t fontified t) 46 47 (face org-table font-lock-fontified t fontified t) 47 48 (face org-table font-lock-fontified t fontified t) 48 49 (face org-table font-lock-fontified t fontified t) 49 50 (face org-table font-lock-fontified t fontified t) 50 51 (face org-table font-lock-fontified t fontified t) 51 52 (face org-table font-lock-fontified t fontified t) 52 53 (face org-table font-lock-fontified t fontified t) 53 54 (face org-table font-lock-fontified t fontified t) 54 55 (face org-table font-lock-fontified t fontified t) 55 56 (face org-table font-lock-fontified t fontified t) 56 57 (face org-table font-lock-fontified t fontified t) 57 58 (face org-table font-lock-fontified t fontified t) 58 59 (face org-table font-lock-fontified t fontified t) 59 60 (face org-table font-lock-fontified t fontified t) 60 61 (face org-table font-lock-fontified t fontified t) 61 62 (face org-table font-lock-fontified t fontified t) 62 63 (face org-table font-lock-fontified t fontified t) 63 64 (face org-table font-lock-fontified t fontified t) 64 65 (face org-table font-lock-fontified t fontified t) 65 66 (face org-table font-lock-fontified t fontified t) 66 67 (face org-table font-lock-fontified t fontified t) 67 68 (face org-table font-lock-fontified t fontified t) 68 69 (face org-table font-lock-fontified t fontified t) 69 70 (face org-table font-lock-fontified t fontified t) 70 71 (face org-table font-lock-fontified t fontified t) 71 72 (face org-table font-lock-fontified t fontified t) 72 73 (face org-table font-lock-fontified t fontified t) 73 74 (face org-table font-lock-fontified t fontified t) 74 75 (display (space :width (3)) face (:inherit org-table :inverse-video t) font-lock-fontified t fontified t) 75 76 (face org-table font-lock-fontified t fontified t) 76 77 (face org-table font-lock-fontified t fontified t) 77 78 (face org-table font-lock-fontified t fontified t) 78 79 (face org-table font-lock-fontified t fontified t) 79 80 (face org-table font-lock-fontified t fontified t) 80 81 (face org-table font-lock-fontified t fontified t) 81 82 (face org-table font-lock-fontified t fontified t) 82 83 (face org-table font-lock-fontified t fontified t) 83 84 (face org-table font-lock-fontified t fontified t) 84 85 (face org-table font-lock-fontified t fontified t) 85 86 (display (space :width (3)) face (:inherit org-table :inverse-video t) font-lock-fontified t fontified t) 86 87 (face org-table font-lock-fontified t fontified t) 87 88 (face org-table font-lock-fontified t fontified t) 88 89 (face org-table font-lock-fontified t fontified t) 89 90 (face org-table font-lock-fontified t fontified t) 90 91 (face org-table font-lock-fontified t fontified t) 91 92 (face org-table font-lock-fontified t fontified t) 92 93 (face org-table font-lock-fontified t fontified t) 93 94 (face org-table font-lock-fontified t fontified t) 94 95 (face org-table font-lock-fontified t fontified t) 95 96 (face org-table font-lock-fontified t fontified t) 96 97 (face org-table font-lock-fontified t fontified t) 97 98 (face org-table font-lock-fontified t fontified t) 98 99 (face org-table font-lock-fontified t fontified t) 99 100 (face org-table font-lock-fontified t fontified t) 100 101 (face org-table font-lock-fontified t fontified t) 101 102 (face org-table font-lock-fontified t fontified t) 102 103 (face org-table font-lock-fontified t fontified t) 103 104 (face org-table font-lock-fontified t fontified t) 104 105 (face org-table font-lock-fontified t fontified t) 105 106 (face org-table font-lock-fontified t fontified t) 106 107 (face org-table fontified t) 107 108 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 108 109 (face org-table fontified t) 109 117 (face org-table fontified t) 117 118 (face org-table fontified t) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 119 120 (face org-table fontified t) 120 138 (face org-table fontified t) 138 139 (face org-table fontified t) 139 140 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 140 141 (face org-table fontified t) 141 142 (face org-table fontified t) 142 143 (face org-table fontified t) 143 144 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 144 145 (face org-table fontified t) 145 209 (face org-table fontified t) 209 210 (face org-table fontified t) 210 211 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4757)) nil (25301 29936 933285 16000) 0 nil])
([nil nil ((10378 . 10382) (10378 . 10379)) nil (25301 29936 933284 493000) 0 nil])
([nil nil ((#("                                                    Canon 6: Behavior                                                         | 5,15     |                    |" 0 52 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 52 126 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 126 127 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 127 137 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 137 138 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 138 158 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 158 159 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . 10401) (undo-tree-id330 . -158) (undo-tree-id331 . 158) (undo-tree-id332 . -1)) nil (25301 29936 933283 640000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Health care regulation                                                                                   |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 9905) (undo-tree-id320 . -281) (undo-tree-id321 . -281) (9655 . 9905) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Empirical research                                                                                       |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 89 (face org-table font-lock-fontified t fontified nil) 89 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 9655) (9405 . 9655) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Financial crisis                                                                                         |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table font-lock-fontified t fontified nil) 87 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 9405) (9155 . 9405) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Canon 5: regulation                                                                                      | 13,17    |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table font-lock-fontified t fontified nil) 90 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 183 (face org-table font-lock-fontified t fontified nil) 183 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 9155) (8905 . 9155) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Asymmetric information                                                                                   |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 8905) (8655 . 8905) (#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  | The market                                                                                               |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 81 (face org-table font-lock-fontified t fontified nil) 81 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 8655) (8405 . 8655) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  | Canon 4: Finance                                                                                         | 10,11,12 | Pandas (3,4)       |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table font-lock-fontified t fontified nil) 87 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table font-lock-fontified t fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 201 (face org-table font-lock-fontified t fontified nil) 201 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 8405) (8155 . 8405) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    | Canon 3: Climate                                                                                         | 8,16     | Pandas (1,2)       |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table font-lock-fontified t fontified nil) 87 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 182 (face org-table font-lock-fontified t fontified nil) 182 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 201 (face org-table font-lock-fontified t fontified nil) 201 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 8155) (7905 . 8155) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Q&A python/Datacamp                                                                                      |          | Intermediate (5)   |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table font-lock-fontified t fontified nil) 90 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 205 (face org-table font-lock-fontified t fontified nil) 205 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 7905) (7655 . 7905) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Career Orientation & Preparation - LinkedIn & Networking through LinkedIn                                |          | Intermediate (3,4) |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table font-lock-fontified t fontified nil) 144 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table font-lock-fontified t fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 7655) (7405 . 7655) (#("| Fri | 2022-10-07 | 12:45-14:30 | VERVALT            | MDZ 1 (99)   | Career Orientation & Preparation - Talent Management                                                     |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 66 (face org-table fontified nil) 66 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 123 (face org-table font-lock-fontified t fontified nil) 123 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 7405) (7155 . 7405) (#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    | Career Orientation & Preparation - How to prepare for Assessments                                        |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 7155) (6905 . 7155) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Career Orientation & Preparation - How to prepare for Assessments                                        |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 6905) (6655 . 6905) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Career Orientation & Preparation - Personal Branding & Networking                                        |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 125 (face org-table font-lock-fontified t fontified nil) 125 136 (face org-table font-lock-fontified t fontified nil) 136 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 6655) (6405 . 6655) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) | Career Orientation & Preparation - Personal Branding & Networking                                        |          | Intermediate (1,2) |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table font-lock-fontified t fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 6405) (6155 . 6405) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Canon 2: Jobs                                                                                            | 6,7,9    | Intro (4)          |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 84 (face org-table font-lock-fontified t fontified nil) 84 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 183 (face org-table font-lock-fontified t fontified nil) 183 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 198 (face org-table font-lock-fontified t fontified nil) 198 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 6155) (5905 . 6155) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Plenary Career Session                                                                                   |          | Intro (3)          |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 198 (face org-table font-lock-fontified t fontified nil) 198 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 5905) (5655 . 5905) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Canon 1: The economist                                                                                   | 1,2,3,4  | Intro (1,2)        |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 185 (face org-table font-lock-fontified t fontified nil) 185 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 200 (face org-table font-lock-fontified t fontified nil) 200 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 5655) (5405 . 5655) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    | Intro python, markdown, github, jupyterlab                                                               |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table font-lock-fontified t fontified nil) 113 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 5405) (5155 . 5405) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  | Canon 0: intro                                                                                           |          |                    |   |                                                                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 85 (face org-table font-lock-fontified t fontified nil) 85 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 280 281 (fontified nil)) . 5155) (4905 . 5155) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  | 
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (fontified nil) 71 72 (fontified nil)) . 4905) (undo-tree-id322 . -71) (4655 . 4905) (#("| day |       date |        time | staff              | room         | Topic                                                                                                    | Tirole   | Datacamp           |   | -----+------------+-------------+--------------------+-------------- |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 76 (face org-table font-lock-fontified t fontified nil) 76 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (face org-table fontified nil) 178 184 (face org-table font-lock-fontified t fontified nil) 184 186 (face org-table fontified nil) 186 187 (face org-table fontified nil) 187 188 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 188 189 (face org-table fontified nil) 189 197 (face org-table font-lock-fontified t fontified nil) 197 207 (face org-table fontified nil) 207 208 (face org-table fontified nil) 208 209 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 209 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (face org-table fontified nil) 212 213 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 213 214 (face org-table fontified nil) 214 215 (face org-table fontified nil) 215 216 (face org-table fontified nil) 216 217 (face org-table fontified nil) 217 218 (face org-table fontified nil) 218 219 (face org-table fontified nil) 219 220 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 220 221 (face org-table fontified nil) 221 222 (face org-table fontified nil) 222 223 (face org-table fontified nil) 223 224 (face org-table fontified nil) 224 225 (face org-table fontified nil) 225 226 (face org-table fontified nil) 226 227 (face org-table fontified nil) 227 228 (face org-table fontified nil) 228 229 (face org-table fontified nil) 229 230 (face org-table fontified nil) 230 231 (face org-table fontified nil) 231 232 (face org-table fontified nil) 232 233 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 233 234 (face org-table fontified nil) 234 235 (face org-table fontified nil) 235 236 (face org-table fontified nil) 236 237 (face org-table fontified nil) 237 238 (face org-table fontified nil) 238 239 (face org-table fontified nil) 239 240 (face org-table fontified nil) 240 241 (face org-table fontified nil) 241 242 (face org-table fontified nil) 242 243 (face org-table fontified nil) 243 244 (face org-table fontified nil) 244 245 (face org-table fontified nil) 245 246 (face org-table fontified nil) 246 247 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 247 248 (face org-table fontified nil) 248 249 (face org-table fontified nil) 249 250 (face org-table fontified nil) 250 251 (face org-table fontified nil) 251 252 (face org-table fontified nil) 252 253 (face org-table fontified nil) 253 254 (face org-table fontified nil) 254 255 (face org-table fontified nil) 255 256 (face org-table fontified nil) 256 257 (face org-table fontified nil) 257 258 (face org-table fontified nil) 258 259 (face org-table fontified nil) 259 260 (face org-table fontified nil) 260 261 (face org-table fontified nil) 261 262 (face org-table fontified nil) 262 263 (face org-table fontified nil) 263 264 (face org-table fontified nil) 264 265 (face org-table fontified nil) 265 266 (face org-table fontified nil) 266 267 (face org-table fontified nil) 267 268 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 268 269 (face org-table fontified nil) 269 270 (face org-table fontified nil) 270 271 (face org-table fontified nil) 271 272 (face org-table fontified nil) 272 273 (face org-table fontified nil) 273 274 (face org-table fontified nil) 274 275 (face org-table fontified nil) 275 276 (face org-table fontified nil) 276 277 (face org-table fontified nil) 277 278 (face org-table fontified nil) 278 279 (face org-table fontified nil) 279 280 (face org-table fontified nil) 280 281 (face org-table fontified nil) 281 282 (face org-table fontified nil) 282 283 (face org-table fontified nil) 283 284 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 284 285 (fontified nil)) . 4655) (undo-tree-id323 . -285) (undo-tree-id324 . -285) (undo-tree-id325 . -285) (undo-tree-id326 . -285) (undo-tree-id327 . -285) (undo-tree-id328 . -71) (undo-tree-id329 . -71) (4401 . 4655) 4756) nil (25301 29936 933278 684000) 0 nil])
([nil nil ((#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 8386) (undo-tree-id317 . -69) (undo-tree-id318 . -69) (undo-tree-id319 . -69) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 8205) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 8024) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7843) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7662) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7481) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7300) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7119) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6938) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6757) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6576) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6395) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6214) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6033) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5852) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5671) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5490) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5309) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5128) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4947) (#(" |                                                                  |" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4766) (#(" | -----+------------+-------------+--------------------+------------" 0 1 (face org-table fontified t) 1 2 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 2 3 (face org-table fontified t) 3 4 (face org-table fontified t) 4 5 (face org-table fontified t) 5 6 (face org-table fontified t) 6 7 (face org-table fontified t) 7 8 (face org-table fontified t) 8 9 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 9 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (face org-table fontified t) 12 13 (face org-table fontified t) 13 14 (face org-table fontified t) 14 15 (face org-table fontified t) 15 16 (face org-table fontified t) 16 17 (face org-table fontified t) 17 18 (face org-table fontified t) 18 19 (face org-table fontified t) 19 20 (face org-table fontified t) 20 21 (face org-table fontified t) 21 22 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 22 23 (face org-table fontified t) 23 24 (face org-table fontified t) 24 25 (face org-table fontified t) 25 26 (face org-table fontified t) 26 27 (face org-table fontified t) 27 28 (face org-table fontified t) 28 29 (face org-table fontified t) 29 30 (face org-table fontified t) 30 31 (face org-table fontified t) 31 32 (face org-table fontified t) 32 33 (face org-table fontified t) 33 34 (face org-table fontified t) 34 35 (face org-table fontified t) 35 36 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 36 37 (face org-table fontified t) 37 38 (face org-table fontified t) 38 39 (face org-table fontified t) 39 40 (face org-table fontified t) 40 41 (face org-table fontified t) 41 42 (face org-table fontified t) 42 43 (face org-table fontified t) 43 44 (face org-table fontified t) 44 45 (face org-table fontified t) 45 46 (face org-table fontified t) 46 47 (face org-table fontified t) 47 48 (face org-table fontified t) 48 49 (face org-table fontified t) 49 50 (face org-table fontified t) 50 51 (face org-table fontified t) 51 52 (face org-table fontified t) 52 53 (face org-table fontified t) 53 54 (face org-table fontified t) 54 55 (face org-table fontified t) 55 56 (face org-table fontified t) 56 57 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 57 58 (face org-table fontified t) 58 59 (face org-table fontified t) 59 60 (face org-table fontified t) 60 61 (face org-table fontified t) 61 62 (face org-table fontified t) 62 63 (face org-table fontified t) 63 64 (face org-table fontified t) 64 65 (face org-table fontified t) 65 66 (face org-table fontified t) 66 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (face org-table fontified t)) . 4581) 9904) nil (25301 29936 933257 125000) 0 nil])
([nil nil ((#("-- |" 0 1 (face org-table fontified t) 1 2 (face org-table fontified t) 2 3 (face org-table fontified t) 3 4 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4581)) nil (25301 29936 933253 571000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Health care regulation                                                    |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 8339) (undo-tree-id305 . -180) (undo-tree-id306 . -180) (undo-tree-id307 . -181) (undo-tree-id308 . -181) (undo-tree-id309 . 1) (8160 . 8339) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Empirical research                                                        |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 89 (face org-table fontified nil font-lock-fontified t) 89 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 8160) (7981 . 8160) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Financial crisis                                                          |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table fontified nil font-lock-fontified t) 87 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 7981) (7802 . 7981) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Canon 5: regulation                                                       | 13,17    |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table fontified nil font-lock-fontified t) 90 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 152 (face org-table fontified nil font-lock-fontified t) 152 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 7802) (7623 . 7802) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Asymmetric information                                                    |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 7623) (7444 . 7623) (#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  | The market                                                                |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 81 (face org-table fontified nil font-lock-fontified t) 81 100 (face org-table fontified nil) 100 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 7444) (7265 . 7444) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  | Canon 4: Finance                                                          | 10,11,12 | Pandas (3,4)       |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table fontified nil font-lock-fontified t) 87 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil font-lock-fontified t) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 170 (face org-table fontified nil font-lock-fontified t) 170 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 7265) (7086 . 7265) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    | Canon 3: Climate                                                          | 8,16     | Pandas (1,2)       |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table fontified nil font-lock-fontified t) 87 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 151 (face org-table fontified nil font-lock-fontified t) 151 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 170 (face org-table fontified nil font-lock-fontified t) 170 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 7086) (6907 . 7086) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Q&A python/Datacamp                                                       |          | Intermediate (5)   |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table fontified nil font-lock-fontified t) 90 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 174 (face org-table fontified nil font-lock-fontified t) 174 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 6907) (6728 . 6907) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Career Orientation & Preparation - LinkedIn & Networking through LinkedIn |          | Intermediate (3,4) |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil font-lock-fontified t) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil font-lock-fontified t) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 6728) (6549 . 6728) (#("| Fri | 2022-10-07 | 12:45-14:30 | VERVALT            | MDZ 1 (99)   | Career Orientation & Preparation - Talent Management                      |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 66 (face org-table fontified nil) 66 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 123 (face org-table fontified nil font-lock-fontified t) 123 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 6549) (6370 . 6549) (#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    | Career Orientation & Preparation - How to prepare for Assessments         |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil font-lock-fontified t) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 6370) (6191 . 6370) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Career Orientation & Preparation - How to prepare for Assessments         |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil font-lock-fontified t) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 6191) (6012 . 6191) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Career Orientation & Preparation - Personal Branding & Networking         |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 48 (face org-table fontified nil) 48 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 125 (face org-table fontified nil font-lock-fontified t) 125 136 (face org-table fontified nil font-lock-fontified t) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 6012) (5833 . 6012) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) | Career Orientation & Preparation - Personal Branding & Networking         |          | Intermediate (1,2) |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil font-lock-fontified t) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil font-lock-fontified t) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 5833) (5654 . 5833) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Canon 2: Jobs                                                             | 6,7,9    | Intro (4)          |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 84 (face org-table fontified nil font-lock-fontified t) 84 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 152 (face org-table fontified nil font-lock-fontified t) 152 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 167 (face org-table fontified nil font-lock-fontified t) 167 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 5654) (5475 . 5654) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Plenary Career Session                                                    |          | Intro (3)          |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 167 (face org-table fontified nil font-lock-fontified t) 167 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 5475) (5296 . 5475) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Canon 1: The economist                                                    | 1,2,3,4  | Intro (1,2)        |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 154 (face org-table fontified nil font-lock-fontified t) 154 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 169 (face org-table fontified nil font-lock-fontified t) 169 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 5296) (5117 . 5296) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    | Intro python, markdown, github, jupyterlab                                |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil font-lock-fontified t) 113 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 5117) (4938 . 5117) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  | Canon 0: intro                                                            |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 85 (face org-table fontified nil font-lock-fontified t) 85 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 4938) (4759 . 4938) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  |                                                                           |          |                    |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 4759) (4580 . 4759) (#("| day |       date |        time | staff              | room         | Topic                                                                     | Tirole   | Datacamp           |  
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 76 (face org-table fontified nil font-lock-fontified t) 76 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 153 (face org-table fontified nil font-lock-fontified t) 153 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (face org-table fontified nil) 158 166 (face org-table fontified nil font-lock-fontified t) 166 176 (face org-table fontified nil) 176 177 (face org-table fontified nil) 177 178 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 178 179 (fontified nil) 179 180 (fontified nil) 180 181 (fontified nil)) . 4580) (undo-tree-id310 . -180) (undo-tree-id311 . -181) (undo-tree-id312 . -181) (undo-tree-id313 . -180) (undo-tree-id314 . -181) (undo-tree-id315 . -181) (undo-tree-id316 . -181) (4401 . 4580) 4577) nil (25301 29936 933250 581000) 0 nil])
([nil nil ((nil fontified t 8074 . 8075) (nil face (:inherit org-table :inverse-video t) 8074 . 8075) (nil display (space :width (3)) 8074 . 8075) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 8074) (8086 . 8087) (nil fontified t 7906 . 7907) (nil face (:inherit org-table :inverse-video t) 7906 . 7907) (nil display (space :width (3)) 7906 . 7907) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7906) (7918 . 7919) (nil fontified t 7738 . 7739) (nil face (:inherit org-table :inverse-video t) 7738 . 7739) (nil display (space :width (3)) 7738 . 7739) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7738) (7750 . 7751) (nil fontified t 7570 . 7571) (nil face (:inherit org-table :inverse-video t) 7570 . 7571) (nil display (space :width (3)) 7570 . 7571) (#("| 13,17    |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 7 (face org-table font-lock-fontified t fontified t) 7 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7570) (7582 . 7583) (nil fontified t 7402 . 7403) (nil face (:inherit org-table :inverse-video t) 7402 . 7403) (nil display (space :width (3)) 7402 . 7403) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7402) (7414 . 7415) (nil fontified t 7234 . 7235) (nil face (:inherit org-table :inverse-video t) 7234 . 7235) (nil display (space :width (3)) 7234 . 7235) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7234) (7246 . 7247) (nil fontified t 7066 . 7067) (nil face (:inherit org-table :inverse-video t) 7066 . 7067) (nil display (space :width (3)) 7066 . 7067) (#("| 10,11,12 |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table font-lock-fontified t fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 7066) (7078 . 7079) (nil fontified t 6898 . 6899) (nil face (:inherit org-table :inverse-video t) 6898 . 6899) (nil display (space :width (3)) 6898 . 6899) (#("| 8,16     |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 6 (face org-table font-lock-fontified t fontified t) 6 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6898) (6910 . 6911) (nil fontified t 6730 . 6731) (nil face (:inherit org-table :inverse-video t) 6730 . 6731) (nil display (space :width (3)) 6730 . 6731) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6730) (6742 . 6743) (nil fontified t 6562 . 6563) (nil face (:inherit org-table :inverse-video t) 6562 . 6563) (nil display (space :width (3)) 6562 . 6563) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6562) (6574 . 6575) (nil fontified t 6394 . 6395) (nil face (:inherit org-table :inverse-video t) 6394 . 6395) (nil display (space :width (3)) 6394 . 6395) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6394) (6406 . 6407) (nil fontified t 6226 . 6227) (nil face (:inherit org-table :inverse-video t) 6226 . 6227) (nil display (space :width (3)) 6226 . 6227) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6226) (6238 . 6239) (nil fontified t 6058 . 6059) (nil face (:inherit org-table :inverse-video t) 6058 . 6059) (nil display (space :width (3)) 6058 . 6059) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 6058) (6070 . 6071) (nil fontified t 5890 . 5891) (nil face (:inherit org-table :inverse-video t) 5890 . 5891) (nil display (space :width (3)) 5890 . 5891) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5890) (5902 . 5903) (nil fontified t 5722 . 5723) (nil face (:inherit org-table :inverse-video t) 5722 . 5723) (nil display (space :width (3)) 5722 . 5723) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5722) (5734 . 5735) (nil fontified t 5554 . 5555) (nil face (:inherit org-table :inverse-video t) 5554 . 5555) (nil display (space :width (3)) 5554 . 5555) (#("| 6,7,9    |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 7 (face org-table font-lock-fontified t fontified t) 7 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5554) (5566 . 5567) (nil fontified t 5386 . 5387) (nil face (:inherit org-table :inverse-video t) 5386 . 5387) (nil display (space :width (3)) 5386 . 5387) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5386) (5398 . 5399) (nil fontified t 5218 . 5219) (nil face (:inherit org-table :inverse-video t) 5218 . 5219) (nil display (space :width (3)) 5218 . 5219) (#("| 1,2,3,4  |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 9 (face org-table font-lock-fontified t fontified t) 9 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5218) (5230 . 5231) (nil fontified t 5050 . 5051) (nil face (:inherit org-table :inverse-video t) 5050 . 5051) (nil display (space :width (3)) 5050 . 5051) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 5050) (5062 . 5063) (nil fontified t 4882 . 4883) (nil face (:inherit org-table :inverse-video t) 4882 . 4883) (nil display (space :width (3)) 4882 . 4883) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4882) (4894 . 4895) (nil fontified t 4714 . 4715) (nil face (:inherit org-table :inverse-video t) 4714 . 4715) (nil display (space :width (3)) 4714 . 4715) (#("|          |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4714) (4726 . 4727) (nil fontified t 4546 . 4547) (nil face (:inherit org-table :inverse-video t) 4546 . 4547) (nil display (space :width (3)) 4546 . 4547) (#("| Tirole   |" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 8 (face org-table font-lock-fontified t fontified t) 8 10 (face org-table fontified t) 10 11 (face org-table fontified t) 11 12 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4546) (4558 . 4559) 5089) nil (25301 29936 933236 221000) 0 nil])
([nil nil ((#("Canon 0: intro                                                            |                    |" 0 14 (face org-table font-lock-fontified t fontified t) 14 73 (face org-table fontified t) 73 74 (face org-table fontified t) 74 75 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 75 76 (face org-table fontified t) 76 94 (face org-table fontified t) 94 95 (face org-table fontified t) 95 96 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t)) . 4808)) nil (25301 29936 933226 527000) 0 nil])
([nil nil ((#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  | 
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (fontified nil) 71 72 (fontified nil)) . 4905) (undo-tree-id304 . -71) (4737 . 4905) 4807) nil (25301 29936 933225 861000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4714 . 4715) (nil fontified nil 4641 . 4715) (4641 . 4715) 4640) nil (25301 29936 933224 575000) 0 nil])
([nil nil ((#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  |  Intro python, markdown, github, jupyterlab                                                                                                         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 145 (face org-table fontified nil) 145 146 (face org-table rear-nonsticky t fontified nil) 146 218 (face org-table fontified nil) 218 219 (face org-table fontified nil) 219 220 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 220 221 (face org-table fontified nil) 221 239 (face org-table fontified nil) 239 240 (face org-table fontified nil) 240 241 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 241 242 (fontified nil)) . 4737) (undo-tree-id301 . -72) (undo-tree-id302 . -72) (undo-tree-id303 . -145) (4569 . 4737) 4714) nil (25301 29936 933223 762000) 0 nil])
([nil nil ((#("Intro python, markdown, github, jupyterlab                                " 0 42 (face org-table font-lock-fontified t fontified t) 42 73 (face org-table fontified t) 73 74 (face org-table fontified t)) . 4976) (undo-tree-id300 . -74)) nil (25301 29936 933221 484000) 0 nil])
([nil nil ((#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    | |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 73 (face org-table fontified nil) 73 91 (face org-table fontified nil) 91 92 (face org-table fontified nil) 92 93 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 93 94 (fontified nil)) . 5073) (undo-tree-id298 . -71) (undo-tree-id299 . 21) (4905 . 5073) 4976) nil (25301 29936 933220 318000) 0 nil])
([nil nil ((#("Intermediate (1,2)" 0 18 (face org-table font-lock-fontified t fontified t)) . 5670) (undo-tree-id291 . -17) (undo-tree-id292 . -17) (undo-tree-id293 . -17) (undo-tree-id294 . 1) (undo-tree-id295 . -18) (undo-tree-id296 . 5) (undo-tree-id297 . -14) (#("Intro (4)         " 0 9 (face org-table font-lock-fontified t fontified t) 9 18 (face org-table fontified t)) . 5520) (#("Intro (3)         " 0 9 (face org-table font-lock-fontified t fontified t) 9 18 (face org-table fontified t)) . 5370) (#("Intro (1,2)       " 0 11 (face org-table font-lock-fontified t fontified t) 11 18 (face org-table fontified t)) . 5220) 5741) nil (25301 29936 933218 29000) 0 nil])
([nil nil ((#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) | Career Orientation & Preparation - Personal Branding & Networking         |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 5745) (undo-tree-id286 . -147) (undo-tree-id287 . -147) (undo-tree-id288 . 3) (5577 . 5745) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Canon 2: Jobs                                                             |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 84 (face org-table font-lock-fontified t fontified nil) 84 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 5577) (5409 . 5577) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Plenary Career Session                                                    |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 5409) (5241 . 5409) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Canon 1: The economist                                                    |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 5241) (undo-tree-id289 . -147) (undo-tree-id290 . -147) (5073 . 5241) 5220) nil (25301 29936 933208 357000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4884 . 4885) (5443 . 5461) (5257 . 5275) (5071 . 5089) (4885 . 4903) 4884) nil (25301 29936 933204 431000) 0 nil])
([nil nil ((#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Plenary Career Session                                                    |  Intermediate (1,2)                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 166 (face org-table fontified nil font-lock-fontified t) 166 183 (face org-table fontified nil) 183 184 (face org-table fontified nil) 184 185 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 185 186 (fontified nil)) . 5409) (undo-tree-id282 . -165) (5241 . 5409) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Canon 1: The economist                                                    |  Intro (4)                           |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 157 (face org-table fontified nil font-lock-fontified t) 157 166 (face org-table fontified nil) 166 183 (face org-table fontified nil) 183 184 (face org-table fontified nil) 184 185 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 185 186 (fontified nil)) . 5241) (undo-tree-id283 . -186) (5073 . 5241) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    |                                                                           |  Intro (3)                           |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 157 (face org-table fontified nil font-lock-fontified t) 157 166 (face org-table fontified nil) 166 183 (face org-table fontified nil) 183 184 (face org-table fontified nil) 184 185 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 185 186 (fontified nil)) . 5073) (4905 . 5073) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  |                                                                           |  Intro (1,2)                         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table rear-nonsticky t fontified nil) 148 159 (face org-table fontified nil font-lock-fontified t) 159 166 (face org-table fontified nil) 166 183 (face org-table fontified nil) 183 184 (face org-table fontified nil) 184 185 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 185 186 (fontified nil)) . 4905) (undo-tree-id284 . -147) (undo-tree-id285 . -186) (4737 . 4905) 4885) nil (25301 29936 933203 63000) 0 nil])
([nil nil ((#("Intermediate (1,2)" 0 18 (face org-table font-lock-fontified t fontified t)) . 5370) (undo-tree-id275 . -17) (undo-tree-id276 . -17) (undo-tree-id277 . -17) (undo-tree-id278 . 1) (undo-tree-id279 . -18) (undo-tree-id280 . 5) (undo-tree-id281 . -14) (#("Intro (4)         " 0 9 (face org-table font-lock-fontified t fontified t) 9 18 (face org-table fontified t)) . 5220) 5405) nil (25301 29936 933199 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5370 . 5371) (5539 . 5557) (5371 . 5389) 5370) nil (25301 29936 933195 180000) 0 nil])
([nil nil ((#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Canon 2: Jobs                                                             |  Intermediate (1,2)                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 84 (face org-table fontified nil font-lock-fontified t) 84 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 166 (face org-table fontified nil font-lock-fontified t) 166 183 (face org-table fontified nil) 183 184 (face org-table fontified nil) 184 185 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 185 186 (fontified nil)) . 5577) (undo-tree-id269 . -165) (undo-tree-id270 . 186) (5409 . 5577) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Plenary Career Session                                                    |  Intro (4)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table rear-nonsticky t fontified nil) 148 157 (face org-table fontified nil font-lock-fontified t) 157 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5409) (undo-tree-id271 . -147) (undo-tree-id272 . -147) (undo-tree-id273 . 21) (5241 . 5409) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Canon 1: The economist                                                    |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 5241) (undo-tree-id274 . -147) (5073 . 5241) 5371) nil (25301 29936 933193 770000) 0 nil])
([nil nil ((#("Plenary Career Session" 0 22 (face org-table fontified t font-lock-fontified t)) . 5312) (undo-tree-id266 . -21) (undo-tree-id267 . -21) (undo-tree-id268 . -21)) nil (25301 29936 933179 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4998 . 4999) (nil fontified nil 4977 . 4999) (4977 . 4999) 4976) nil (25301 29936 933177 619000) 0 nil])
([nil nil ((#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) |                                                     | Intro (4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 122 (face org-table fontified nil) 122 123 (face org-table fontified nil) 123 124 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 124 125 (face org-table fontified nil) 125 134 (face org-table font-lock-fontified t fontified nil) 134 143 (face org-table fontified nil) 143 144 (face org-table fontified nil) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 145 146 (fontified nil)) . 5409) (undo-tree-id260 . -71) (undo-tree-id261 . 75) (undo-tree-id262 . -71) (5241 . 5409) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    |  Plenary Career Session                                                                         | Intro (3)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 93 (face org-table fontified nil) 93 94 (face org-table rear-nonsticky t fontified nil) 94 166 (face org-table fontified nil) 166 167 (face org-table fontified nil) 167 168 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 168 169 (face org-table fontified nil) 169 178 (face org-table font-lock-fontified t fontified nil) 178 187 (face org-table fontified nil) 187 188 (face org-table fontified nil) 188 189 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 189 190 (fontified nil)) . 5073) (undo-tree-id263 . -72) (undo-tree-id264 . -72) (undo-tree-id265 . -93) (4905 . 5073) 4998) nil (25301 29936 933176 674000) 0 nil])
([nil nil ((#("Canon 2: Jobs          " 0 13 (face org-table font-lock-fontified t fontified t) 13 23 (face org-table fontified t)) . 5434) (undo-tree-id257 . -22) (undo-tree-id258 . -22) (undo-tree-id259 . -22) (#("                       " 0 23 (face org-table fontified t)) . 5289) (#("Canon 1: The economist " 0 22 (face org-table fontified t font-lock-fontified t) 22 23 (face org-table fontified t)) . 5144) 5502) nil (25301 29936 933172 364000) 0 nil])
([nil nil ((#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) |                                                    | Intermediate (1,2) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 121 (face org-table fontified nil) 121 122 (face org-table fontified nil) 122 123 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 123 124 (face org-table fontified nil) 124 142 (face org-table font-lock-fontified t fontified nil) 142 143 (face org-table fontified nil) 143 144 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 144 145 (fontified nil)) . 5577) (undo-tree-id251 . -71) (undo-tree-id252 . -71) (undo-tree-id253 . 74) (5409 . 5577) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) |                                                    | Intro (4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 121 (face org-table fontified nil) 121 122 (face org-table fontified nil) 122 123 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 123 124 (face org-table fontified nil) 124 133 (face org-table fontified nil font-lock-fontified t) 133 142 (face org-table fontified nil) 142 143 (face org-table fontified nil) 143 144 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 144 145 (fontified nil)) . 5409) (undo-tree-id254 . -145) (5241 . 5409) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) |                                                    |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 121 (face org-table fontified nil) 121 122 (face org-table fontified nil) 122 123 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 123 124 (face org-table fontified nil) 124 142 (face org-table fontified nil) 142 143 (face org-table fontified nil) 143 144 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 144 145 (fontified nil)) . 5241) (undo-tree-id255 . -71) (undo-tree-id256 . -71) (5073 . 5241) 5144) nil (25301 29936 933169 702000) 0 nil])
([nil nil ((#("Career Orientation & Preparation - How to prepare for Assessments " 0 65 (face org-table font-lock-fontified t fontified t) 65 66 (face org-table fontified t)) . 5954) (undo-tree-id248 . -65) (undo-tree-id249 . -65) (undo-tree-id250 . -65) (#("Career Orientation & Preparation - How to prepare for Assessments " 0 65 (face org-table font-lock-fontified t fontified t) 65 66 (face org-table fontified t)) . 5852) (#("Career Orientation & Preparation - Personal Branding & Networking " 0 54 (face org-table font-lock-fontified t fontified t) 54 65 (face org-table font-lock-fontified t fontified t) 65 66 (face org-table fontified t)) . 5750) (#("Career Orientation & Preparation - Personal Branding & Networking " 0 65 (face org-table fontified t font-lock-fontified t) 65 66 (face org-table fontified t)) . 5648) 6217) nil (25301 29936 933164 899000) 0 nil])
([nil nil ((#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    |         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 78 (face org-table fontified nil) 78 79 (face org-table fontified nil) 79 80 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 80 81 (face org-table fontified nil) 81 99 (face org-table fontified nil) 99 100 (face org-table fontified nil) 100 101 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 101 102 (fontified nil)) . 6249) (undo-tree-id243 . -71) (undo-tree-id244 . -71) (undo-tree-id245 . 31) (6081 . 6249) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 78 (face org-table fontified nil) 78 79 (face org-table fontified nil) 79 80 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 80 81 (face org-table fontified nil) 81 99 (face org-table fontified nil) 99 100 (face org-table fontified nil) 100 101 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 101 102 (fontified nil)) . 6081) (5913 . 6081) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 78 (face org-table fontified nil) 78 79 (face org-table fontified nil) 79 80 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 80 81 (face org-table fontified nil) 81 99 (face org-table fontified nil) 99 100 (face org-table fontified nil) 100 101 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 101 102 (fontified nil)) . 5913) (5745 . 5913) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) |         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 78 (face org-table fontified nil) 78 79 (face org-table fontified nil) 79 80 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 80 81 (face org-table fontified nil) 81 99 (face org-table fontified nil) 99 100 (face org-table fontified nil) 100 101 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 101 102 (fontified nil)) . 5745) (undo-tree-id246 . -71) (undo-tree-id247 . -71) (5577 . 5745) 5648) nil (25301 29936 933161 837000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5144 . 5145) (5847 . 5913) (5613 . 5679) (5379 . 5445) (5145 . 5211) 5144) nil (25301 29936 933158 144000) 0 nil])
([nil nil ((#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) |  Career Orientation & Preparation - How to prepare for Assessments                                                                          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 137 (face org-table fontified nil font-lock-fontified t) 137 138 (face org-table fontified nil) 138 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 212 213 (face org-table fontified nil) 213 231 (face org-table fontified nil) 231 232 (face org-table fontified nil) 232 233 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 233 234 (fontified nil)) . 5745) (undo-tree-id239 . -137) (undo-tree-id240 . -234) (5577 . 5745) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) |  Career Orientation & Preparation - How to prepare for Assessments                                                                          | Intermediate (1,2) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 137 (face org-table fontified nil font-lock-fontified t) 137 138 (face org-table fontified nil) 138 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 212 213 (face org-table fontified nil) 213 231 (face org-table fontified nil font-lock-fontified t) 231 232 (face org-table fontified nil) 232 233 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 233 234 (fontified nil)) . 5577) (5409 . 5577) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) |  Career Orientation & Preparation - Personal Branding & Networking                                                                          | Intro (4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 126 (face org-table fontified nil font-lock-fontified t) 126 137 (face org-table fontified nil font-lock-fontified t) 137 138 (face org-table fontified nil) 138 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 212 213 (face org-table fontified nil) 213 222 (face org-table font-lock-fontified t fontified nil) 222 231 (face org-table fontified nil) 231 232 (face org-table fontified nil) 232 233 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 233 234 (fontified nil)) . 5409) (undo-tree-id241 . -234) (5241 . 5409) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) |  Career Orientation & Preparation - Personal Branding & Networking                                                                          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table rear-nonsticky t fontified nil) 72 137 (face org-table fontified nil font-lock-fontified t) 137 138 (face org-table fontified nil) 138 210 (face org-table fontified nil) 210 211 (face org-table fontified nil) 211 212 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 212 213 (face org-table fontified nil) 213 231 (face org-table fontified nil) 231 232 (face org-table fontified nil) 232 233 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 233 234 (fontified nil)) . 5241) (undo-tree-id242 . -71) (5073 . 5241) 5145) nil (25301 29936 933156 739000) 0 nil])
([nil nil ((#("Career Orientation & Preparation - LinkedIn & Networking through LinkedIn " 0 73 (face org-table font-lock-fontified t fontified t) 73 74 (face org-table fontified t)) . 6414) (undo-tree-id236 . -73) (undo-tree-id237 . -73) (undo-tree-id238 . -73) (#("Career Orientation & Preparation - Talent Management                      " 0 52 (face org-table font-lock-fontified t fontified t) 52 73 (face org-table fontified t) 73 74 (face org-table fontified t)) . 6320) 6561) nil (25301 29936 933153 243000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Health care regulation                                                    |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 7921) (undo-tree-id213 . -168) (undo-tree-id214 . -168) (undo-tree-id215 . 168) (7761 . 7921) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Empirical research                                                        |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 89 (face org-table font-lock-fontified t fontified nil) 89 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 7761) (undo-tree-id216 . 168) (7601 . 7761) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Financial crisis                                                          |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table font-lock-fontified t fontified nil) 87 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 7601) (undo-tree-id217 . 168) (7441 . 7601) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Canon 5: regulation                                                       |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table font-lock-fontified t fontified nil) 90 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 7441) (undo-tree-id218 . 168) (7281 . 7441) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Asymmetric information                                                    |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table font-lock-fontified t fontified nil) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 7281) (undo-tree-id219 . 168) (7121 . 7281) (#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  | The market                                                                |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 81 (face org-table font-lock-fontified t fontified nil) 81 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 7121) (undo-tree-id220 . 168) (6961 . 7121) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  | Canon 4: Finance                                                          | Pandas (3,4)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table font-lock-fontified t fontified nil) 87 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 159 (face org-table font-lock-fontified t fontified nil) 159 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 6961) (undo-tree-id221 . 168) (6801 . 6961) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    | Canon 3: Climate                                                          | Pandas (1,2)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table font-lock-fontified t fontified nil) 87 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 159 (face org-table font-lock-fontified t fontified nil) 159 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 6801) (undo-tree-id222 . 168) (6641 . 6801) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Q&A python/Datacamp                                                       | Intermediate (5)   |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table font-lock-fontified t fontified nil) 90 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 163 (face org-table font-lock-fontified t fontified nil) 163 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 6641) (undo-tree-id223 . 168) (6481 . 6641) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | | Intermediate (3,4) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 73 (face org-table fontified nil) 73 91 (face org-table font-lock-fontified t fontified nil) 91 92 (face org-table fontified nil) 92 93 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 93 94 (fontified nil)) . 6481) (undo-tree-id224 . -71) (undo-tree-id225 . -71) (undo-tree-id226 . 23) (6321 . 6481) (#("| Fri | 2022-10-07 | 12:45-14:30 | VERVALT            | MDZ 1 (99)   | |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 66 (face org-table fontified nil) 66 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 72 (face org-table fontified nil) 72 73 (face org-table fontified nil) 73 91 (face org-table fontified nil) 91 92 (face org-table fontified nil) 92 93 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 93 94 (fontified nil)) . 6321) (undo-tree-id227 . -71) (undo-tree-id228 . -71) (6161 . 6321) (#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    |                                                                           |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 6161) (6001 . 6161) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                                           |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 6001) (5841 . 6001) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                                           |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5841) (5681 . 5841) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) | Career Orientation & Preparation - How to prepare for Assessments         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5681) (5521 . 5681) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Career Orientation & Preparation - How to prepare for Assessments         | Intermediate (1,2) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table font-lock-fontified t fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5521) (5361 . 5521) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Career Orientation & Preparation - Personal Branding & Networking         | Intro (4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 125 (face org-table font-lock-fontified t fontified nil) 125 136 (face org-table font-lock-fontified t fontified nil) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 156 (face org-table fontified nil font-lock-fontified t) 156 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5361) (undo-tree-id229 . -168) (5201 . 5361) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Career Orientation & Preparation - Personal Branding & Networking         |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5201) (5041 . 5201) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    | Plenary Career Session                                                    | Intro (3)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 92 (face org-table fontified nil) 92 93 (face org-table fontified nil rear-nonsticky t) 93 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 156 (face org-table fontified nil font-lock-fontified t) 156 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 5041) (4881 . 5041) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  |                                                                           | Intro (1,2)        |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 158 (face org-table font-lock-fontified t fontified nil) 158 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 4881) (undo-tree-id230 . -168) (4721 . 4881) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  | Intro python, markdown, github, jupyterlab                                |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 4721) (4561 . 4721) (#("| day |       date |        time | staff              | room         | Topic                                                                     | Datacamp           |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 76 (face org-table font-lock-fontified t fontified nil) 76 144 (face org-table fontified nil) 144 145 (face org-table fontified nil) 145 146 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 146 147 (face org-table fontified nil) 147 155 (face org-table font-lock-fontified t fontified nil) 155 165 (face org-table fontified nil) 165 166 (face org-table fontified nil) 166 167 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 167 168 (fontified nil)) . 4561) (undo-tree-id231 . -168) (undo-tree-id232 . -168) (undo-tree-id233 . -168) (undo-tree-id234 . -168) (undo-tree-id235 . -168) (4401 . 4561) 6320) nil (25301 29936 933147 676000) 0 nil])
([nil nil ((#("Canon 4: Finance   " 0 16 (face org-table fontified t font-lock-fontified t) 16 19 (face org-table fontified t)) . 6834) (undo-tree-id210 . -18) (undo-tree-id211 . -18) (undo-tree-id212 . -18) (#("Canon 3: Climate   " 0 16 (face org-table fontified t font-lock-fontified t) 16 19 (face org-table fontified t)) . 6693) (#("Q&A python/Datacamp" 0 19 (face org-table fontified t font-lock-fontified t)) . 6552) 6890) nil (25301 29936 933121 52000) 0 nil])
([nil nil ((#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  |                                                | Pandas (3,4)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 132 (face org-table fontified nil font-lock-fontified t) 132 138 (face org-table fontified nil) 138 139 (face org-table fontified nil) 139 140 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 140 141 (fontified nil)) . 6961) (undo-tree-id205 . -71) (undo-tree-id206 . -71) (undo-tree-id207 . 70) (6801 . 6961) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    |                                                | Pandas (1,2)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 132 (face org-table fontified nil font-lock-fontified t) 132 138 (face org-table fontified nil) 138 139 (face org-table fontified nil) 139 140 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 140 141 (fontified nil)) . 6801) (6641 . 6801) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    |                                                | Intermediate (5)   |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 136 (face org-table fontified nil font-lock-fontified t) 136 138 (face org-table fontified nil) 138 139 (face org-table fontified nil) 139 140 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 140 141 (fontified nil)) . 6641) (undo-tree-id208 . -71) (undo-tree-id209 . -71) (6481 . 6641) 6552) nil (25301 29936 933118 384000) 0 nil])
([nil nil ((#("T" 0 1 (face org-table fontified t)) . -5752) (undo-tree-id201 . -1) (#("h" 0 1 (face org-table fontified t)) . -5753) (undo-tree-id202 . -1) (#("e" 0 1 (face org-table fontified t)) . -5754) (undo-tree-id203 . -1) (#(" " 0 1 (face org-table fontified t)) . -5755) (undo-tree-id204 . -1) 5756 (#(" " 0 1 (face org-table fontified nil)) . 5817) (5755 . 5756) (#(" " 0 1 (face org-table fontified nil)) . 5817) (5754 . 5755) (#(" " 0 1 (face org-table fontified nil)) . 5817) (5753 . 5754) (#(" " 0 1 (face org-table fontified nil)) . 5817) (5752 . 5753)) nil (25301 29936 933112 789000) 0 nil])
([nil nil ((#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                               |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 132 (face org-table fontified nil) 132 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (face org-table fontified nil) 135 153 (face org-table fontified nil) 153 154 (face org-table fontified nil) 154 155 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 155 156 (fontified nil)) . 5841) (5681 . 5841) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Career Orientation & Preparation - Personal Branding & Networking |        |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 125 (face org-table fontified nil font-lock-fontified t) 125 136 (face org-table fontified nil font-lock-fontified t) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 145 (face org-table fontified nil) 145 146 (face org-table fontified nil) 146 147 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 147 148 (fontified nil)) . 5361) (undo-tree-id147 . -139) (undo-tree-id148 . -139) (undo-tree-id149 . 9) (undo-tree-id150 . -139) (undo-tree-id151 . 9) (undo-tree-id152 . -148) (undo-tree-id153 . -139) (undo-tree-id154 . -139) (undo-tree-id155 . -139) (5201 . 5361) 5340 (#("I" 0 1 (face org-table font-lock-fontified t fontified t)) . -5340) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("n" 0 1 (face org-table font-lock-fontified t fontified t)) . -5341) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("t" 0 1 (face org-table font-lock-fontified t fontified t)) . -5342) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("r" 0 1 (face org-table font-lock-fontified t fontified t)) . -5343) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("o" 0 1 (face org-table font-lock-fontified t fontified t)) . -5344) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#(" " 0 1 (face org-table font-lock-fontified t fontified t)) . -5345) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("(" 0 1 (face org-table font-lock-fontified t fontified t)) . -5346) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("4" 0 1 (face org-table font-lock-fontified t fontified t)) . -5347) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#(")" 0 1 (face org-table font-lock-fontified t fontified t)) . -5348) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#(" " 0 1 (face org-table fontified t)) . -5349) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#(" " 0 1 (face org-table fontified t)) . -5350) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (face org-table fontified t)) . -5351) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 5352 (#(" " 0 1 (face org-table fontified nil)) . 5038) (5029 . 5030) (#(" " 0 1 (face org-table fontified nil)) . 5038) (5028 . 5029)) nil (25301 29936 933106 284000) 0 nil])
([nil nil ((#("Intermediate (1,2)" 0 18 (face org-table fontified t font-lock-fontified t)) . 5500) (undo-tree-id143 . -17) (undo-tree-id144 . -17) (undo-tree-id145 . -18) (undo-tree-id146 . -17)) nil (25301 29936 933073 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5198 . 5199) (nil fontified nil 5181 . 5199) (5181 . 5199) 5180) nil (25301 29936 933058 274000) 0 nil])
([nil nil ((#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Career Orientation & Preparation - How to prepare for Assessments |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil font-lock-fontified t) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 140 (face org-table fontified nil) 140 141 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 141 142 (fontified nil)) . 5521) (undo-tree-id131 . 3) (undo-tree-id132 . -139) (undo-tree-id133 . 3) (undo-tree-id134 . -139) (undo-tree-id135 . -139) (5361 . 5521) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Career Orientation & Preparation - Personal Branding & Networking |  Intermediate (1,2)                  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil font-lock-fontified t) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 140 (face org-table fontified nil) 140 157 (face org-table fontified nil) 157 158 (face org-table rear-nonsticky t fontified nil) 158 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (fontified nil)) . 5201) (undo-tree-id136 . -140) (undo-tree-id137 . -140) (undo-tree-id138 . -157) (undo-tree-id139 . 21) (undo-tree-id140 . -158) (undo-tree-id141 . 25) (undo-tree-id142 . -154) (5041 . 5201) 5198) nil (25301 29936 933056 36000) 0 nil])
([nil nil ((#("Intermediate (3,4)" 0 18 (face org-table fontified t font-lock-fontified t)) . 6460) (undo-tree-id123 . -17) (undo-tree-id124 . -17) (undo-tree-id125 . -17) (undo-tree-id126 . -17) (undo-tree-id127 . 1) (undo-tree-id128 . -18) (undo-tree-id129 . 5) (undo-tree-id130 . -14) 6477) nil (25301 29936 933048 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5518 . 5519) (nil fontified nil 5501 . 5519) (5501 . 5519) 5500) nil (25301 29936 933041 616000) 0 nil])
([nil nil ((#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    |                                                                   |      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 143 (face org-table fontified nil) 143 144 (face org-table fontified nil) 144 145 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 145 146 (fontified nil)) . 6669) (undo-tree-id42 . -139) (6507 . 6669) 6646 (#("I" 0 1 (face org-table fontified t font-lock-fontified t)) . -6646) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("n" 0 1 (face org-table fontified t font-lock-fontified t)) . -6647) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("t" 0 1 (face org-table fontified t font-lock-fontified t)) . -6648) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("e" 0 1 (face org-table fontified t font-lock-fontified t)) . -6649) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("r" 0 1 (face org-table fontified t font-lock-fontified t)) . -6650) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("m" 0 1 (face org-table fontified t font-lock-fontified t)) . -6651) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("e" 0 1 (face org-table fontified t font-lock-fontified t)) . -6652) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("d" 0 1 (face org-table fontified t font-lock-fontified t)) . -6653) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("i" 0 1 (face org-table fontified t font-lock-fontified t)) . -6654) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("a" 0 1 (face org-table fontified t font-lock-fontified t)) . -6655) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("t" 0 1 (face org-table fontified t font-lock-fontified t)) . -6656) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("e" 0 1 (face org-table fontified t font-lock-fontified t)) . -6657) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (face org-table fontified t font-lock-fontified t)) . -6658) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("(" 0 1 (face org-table fontified t font-lock-fontified t)) . -6659) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("5" 0 1 (face org-table fontified t font-lock-fontified t)) . -6660) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(")" 0 1 (face org-table fontified t font-lock-fontified t)) . -6661) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . 1) (undo-tree-id76 . -1) 6662 (#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Health care regulation                                            |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 7965) (undo-tree-id77 . -160) (undo-tree-id78 . -160) (undo-tree-id79 . 160) (undo-tree-id80 . 160) (7803 . 7965) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Empirical research                                                |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 89 (face org-table fontified nil font-lock-fontified t) 89 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 7803) (undo-tree-id81 . 160) (undo-tree-id82 . 160) (7641 . 7803) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Financial crisis                                                  |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table fontified nil font-lock-fontified t) 87 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 7641) (undo-tree-id83 . 160) (undo-tree-id84 . 160) (7479 . 7641) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Canon 5: regulation                                               |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 90 (face org-table fontified nil font-lock-fontified t) 90 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 7479) (undo-tree-id85 . 160) (undo-tree-id86 . 160) (7317 . 7479) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Asymmetric information                                            |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil font-lock-fontified t) 93 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 7317) (undo-tree-id87 . 160) (undo-tree-id88 . 160) (7155 . 7317) (#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  | The market                                                        |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 81 (face org-table fontified nil font-lock-fontified t) 81 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 7155) (undo-tree-id89 . 160) (undo-tree-id90 . 160) (6993 . 7155) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  |                                                                   | Pandas (3,4)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 151 (face org-table font-lock-fontified t fontified nil) 151 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6993) (undo-tree-id91 . 160) (undo-tree-id92 . 160) (6831 . 6993) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    |                                                                   | Pandas (1,2)       |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 151 (face org-table font-lock-fontified t fontified nil) 151 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6831) (undo-tree-id93 . 160) (undo-tree-id94 . 160) (6669 . 6831) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    |                                                                   | Intermediate (5)   |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 155 (face org-table font-lock-fontified t fontified nil) 155 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6669) (undo-tree-id95 . 160) (undo-tree-id96 . 160) (6507 . 6669) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    |                                                                   |  |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 140 (face org-table fontified nil) 140 141 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 141 142 (fontified nil)) . 6507) (undo-tree-id97 . 142) (undo-tree-id98 . -139) (undo-tree-id99 . 3) (6345 . 6507) (#("| Fri | 2022-10-07 | 12:45-14:30 | VERVALT            | MDZ 1 (99)   |                                                                   |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 66 (face org-table fontified nil) 66 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6345) (undo-tree-id100 . 160) (undo-tree-id101 . 104) (undo-tree-id102 . -59) (6183 . 6345) (#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    |                                                                   |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6183) (undo-tree-id103 . 160) (6021 . 6183) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                                   |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6021) (undo-tree-id104 . 160) (5859 . 6021) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                                   |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 5859) (undo-tree-id105 . 160) (5697 . 5859) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) | Career Orientation & Preparation - How to prepare for Assessments |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil font-lock-fontified t) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 5697) (undo-tree-id106 . 160) (5535 . 5697) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Career Orientation & Preparation - How to prepare for Assessments |  Intermediate (3,4,5)                |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 140 (face org-table fontified nil) 140 159 (face org-table fontified nil) 159 160 (face org-table rear-nonsticky t fontified nil) 160 175 (face org-table fontified nil) 175 176 (face org-table fontified nil) 176 177 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 177 178 (fontified nil)) . 5535) (undo-tree-id107 . -140) (undo-tree-id108 . -140) (undo-tree-id109 . -157) (undo-tree-id110 . -178) (undo-tree-id111 . -178) (undo-tree-id112 . -139) (5373 . 5535) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Career Orientation & Preparation - Personal Branding & Networking |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 125 (face org-table font-lock-fontified t fontified nil) 125 136 (face org-table font-lock-fontified t fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 5373) (undo-tree-id113 . -160) (undo-tree-id114 . -160) (undo-tree-id115 . -160) (undo-tree-id116 . -160) (5211 . 5373) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Career Orientation & Preparation - Personal Branding & Networking | Intermediate (1,2) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table font-lock-fontified t fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 156 (face org-table fontified nil) 156 157 (face org-table fontified nil rear-nonsticky t) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 5211) (5049 . 5211) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    | Plenary Career Session                                            | Intro (3,4)        |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 92 (face org-table fontified nil) 92 93 (face org-table rear-nonsticky t fontified nil) 93 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 150 (face org-table font-lock-fontified t fontified nil) 150 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 5049) (4887 . 5049) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  |                                                                   | Intro (1,2)        |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 150 (face org-table fontified nil font-lock-fontified t) 150 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 4887) (undo-tree-id117 . -160) (4725 . 4887) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  | Intro python, markdown, github, jupyterlab                        |                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 4725) (4563 . 4725) (#("| day |       date |        time | staff              | room         | Topic                                                             | Datacamp           |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 76 (face org-table fontified nil font-lock-fontified t) 76 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 147 (face org-table fontified nil font-lock-fontified t) 147 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 4563) (undo-tree-id118 . -160) (undo-tree-id119 . -160) (undo-tree-id120 . -160) (undo-tree-id121 . -160) (undo-tree-id122 . -160) (4401 . 4563) 5520 (#(" " 0 1 (face org-table fontified nil)) . 5536) (5519 . 5520) (#(" " 0 1 (face org-table fontified nil)) . 5536) (5518 . 5519)) nil (25301 29936 933034 92000) 0 nil])
([nil nil ((#("Pandas (3,4)" 0 12 (face org-table fontified t font-lock-fontified t)) . 6958) (undo-tree-id39 . -11) (undo-tree-id40 . -11) (#("Pandas (1,2)" 0 12 (face org-table fontified t font-lock-fontified t)) . 6808) (undo-tree-id41 . 12)) nil (25301 29936 932438 958000) 0 nil])
([nil nil ((6009 . 6021) (5836 . 5848) 5837 (#(" " 0 1 (face org-table fontified t)) . 5836) (undo-tree-id38 . -1) 5837) nil (25301 29936 932436 181000) 0 nil])
([nil nil ((#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  |                                                                   |          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 6993) (undo-tree-id29 . 150) (6831 . 6993) (#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    |                                                                   |          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 147 (face org-table fontified nil) 147 148 (face org-table fontified nil) 148 149 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 149 150 (fontified nil)) . 6831) (undo-tree-id30 . 11) (6669 . 6831) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                                   | Pandas (3,4)                     |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 151 (face org-table fontified nil font-lock-fontified t) 151 171 (face org-table fontified nil) 171 172 (face org-table fontified nil) 172 173 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 173 174 (fontified nil)) . 6021) (undo-tree-id31 . -150) (undo-tree-id32 . 174) (5859 . 6021) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                                                   | Pandas (1,2)                    |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 151 (face org-table fontified nil font-lock-fontified t) 151 170 (face org-table fontified nil) 170 171 (face org-table fontified nil) 171 172 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 172 173 (fontified nil)) . 5859) (undo-tree-id33 . -139) (undo-tree-id34 . -139) (undo-tree-id35 . -139) (undo-tree-id36 . 22) (undo-tree-id37 . -139) (5697 . 5859) 5836) nil (25301 29936 932432 137000) 0 nil])
([nil nil ((#("" 0 1 (face org-table fontified t)) . -7064) (undo-tree-id22 . -1) 7065 (7064 . 7065) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  | Healthcare and regulation                                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 96 (face org-table fontified nil) 96 133 (face org-table fontified nil) 133 134 (face org-table fontified nil) 134 135 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 135 136 (face org-table fontified nil) 136 156 (face org-table fontified nil) 156 157 (face org-table fontified nil) 157 158 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 158 159 (fontified nil)) . 6993) (6831 . 6993) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Asymmetric information                                           | Pandas (3,4)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 93 (face org-table fontified nil) 93 135 (face org-table fontified nil) 135 136 (face org-table fontified nil) 136 137 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 137 138 (face org-table fontified nil) 138 150 (face org-table font-lock-fontified t fontified nil) 150 158 (face org-table fontified nil) 158 159 (face org-table fontified nil) 159 160 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 160 161 (fontified nil)) . 6021) (undo-tree-id23 . -161) (5859 . 6021) 6926 (#(" " 0 1 (face org-table fontified nil)) . 6963) (6925 . 6926) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6924 . 6925) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6923 . 6924) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6922 . 6923) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6921 . 6922) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6920 . 6921) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6919 . 6920) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6918 . 6919) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6917 . 6918) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6916 . 6917) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6915 . 6916) (#(" " 0 1 (face org-table fontified nil)) . 6963) (6914 . 6915) (#("b" 0 1 (face org-table fontified t)) . -6914) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("d" 0 1 (face org-table fontified t)) . -6915) (undo-tree-id26 . -1) (#(" " 0 1 (face org-table fontified t)) . -6916) (undo-tree-id27 . -1) 6917 (#(" " 0 1 (face org-table fontified nil)) . 6966) (6916 . 6917) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6915 . 6916) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6914 . 6915) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6913 . 6914) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6912 . 6913) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6911 . 6912) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6910 . 6911) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6909 . 6910) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6908 . 6909) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6907 . 6908) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6906 . 6907) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6905 . 6906) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6904 . 6905) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6903 . 6904) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6902 . 6903) (#(" " 0 1 (face org-table fontified nil)) . 6966) (6901 . 6902) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6594 . 6595) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6593 . 6594) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6592 . 6593) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6591 . 6592) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6590 . 6591) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6589 . 6590) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6588 . 6589) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6587 . 6588) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6586 . 6587) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6585 . 6586) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6584 . 6585) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6583 . 6584) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6582 . 6583) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6581 . 6582) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6580 . 6581) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6579 . 6580) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6578 . 6579) (#(" " 0 1 (face org-table fontified nil)) . 6642) (6577 . 6578) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6430 . 6431) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6429 . 6430) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6428 . 6429) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6427 . 6428) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6426 . 6427) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6425 . 6426) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6424 . 6425) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6423 . 6424) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6422 . 6423) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6421 . 6422) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6420 . 6421) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6419 . 6420) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6418 . 6419) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6417 . 6418) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6416 . 6417) (#(" " 0 1 (face org-table fontified nil)) . 6480) (6415 . 6416) (#(" " 0 1 (face org-table fontified nil)) . 5994) (5951 . 5952) (#(" " 0 1 (face org-table fontified nil)) . 5994) (5950 . 5951) (#(" " 0 1 (face org-table fontified nil)) . 5994) (5949 . 5950) (#("r" 0 1 (face org-table fontified t)) . -5949) (undo-tree-id28 . -1) 5950 (#(" " 0 1 (face org-table fontified nil)) . 5995) (5949 . 5950) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5948 . 5949) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5947 . 5948) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5946 . 5947) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5945 . 5946) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5944 . 5945) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5943 . 5944) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5942 . 5943) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5941 . 5942) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5940 . 5941) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5939 . 5940) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5938 . 5939) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5937 . 5938) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5936 . 5937) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5935 . 5936) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5934 . 5935) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5933 . 5934) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5932 . 5933) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5931 . 5932) (#(" " 0 1 (face org-table fontified nil)) . 5995) (5930 . 5931) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5777 . 5778) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5776 . 5777) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5775 . 5776) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5774 . 5775) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5773 . 5774) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5772 . 5773) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5771 . 5772) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5770 . 5771) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5769 . 5770) (#(" " 0 1 (face org-table fontified nil)) . 5833) (5768 . 5769)) nil (25301 29936 932410 975000) 0 nil])
([nil nil ((#("Health care regulation " 0 22 (face org-table font-lock-fontified t fontified t) 22 23 (face org-table fontified t)) . 7759) (undo-tree-id18 . -22) (undo-tree-id19 . -22) (undo-tree-id20 . -22) (#("Empirical research     " 0 18 (face org-table font-lock-fontified t fontified t) 18 23 (face org-table fontified t)) . 7620) (#("Financial crisis       " 0 16 (face org-table font-lock-fontified t fontified t) 16 23 (face org-table fontified t)) . 7481) (#("Canon 5: regulation    " 0 19 (face org-table font-lock-fontified t fontified t) 19 23 (face org-table fontified t)) . 7342) (#("Asymmetric information " 0 22 (face org-table font-lock-fontified t fontified t) 22 23 (face org-table fontified t)) . 7203) (#("The market             " 0 10 (face org-table font-lock-fontified t fontified t) 10 23 (face org-table fontified t)) . 7064) (undo-tree-id21 . 23) 7896) nil (25301 29936 932391 237000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 7965) (undo-tree-id0 . -71) (undo-tree-id1 . -71) (undo-tree-id2 . -139) (undo-tree-id3 . -139) (undo-tree-id4 . 139) (undo-tree-id5 . 68) (undo-tree-id6 . -71) (undo-tree-id7 . -139) (7803 . 7965) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 7803) (undo-tree-id8 . 139) (7641 . 7803) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  |                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 7641) (undo-tree-id9 . 139) (7479 . 7641) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    |                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 7479) (undo-tree-id10 . 139) (7317 . 7479) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  |                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 7317) (undo-tree-id11 . 139) (7155 . 7317) (#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  |                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 7155) (undo-tree-id12 . -71) (undo-tree-id13 . 68) (undo-tree-id14 . -71) (undo-tree-id15 . -71) (undo-tree-id16 . -71) (undo-tree-id17 . -71) (6993 . 7155) 7064) nil (25301 29936 932384 261000) 0 nil])
([nil nil ((#(" " 0 1 (face org-table fontified nil)) . 7448) (7409 . 7410) (#(" " 0 1 (face org-table fontified nil)) . 7448) (7408 . 7409) (#(" " 0 1 (face org-table fontified nil)) . 7448) (7407 . 7408) (#(" " 0 1 (face org-table fontified nil)) . 7448) (7406 . 7407) (#(" " 0 1 (face org-table fontified nil)) . 7448) (7405 . 7406) (#(" " 0 1 (face org-table fontified nil)) . 7448) (7404 . 7405) (#(" " 0 1 (face org-table fontified nil)) . 7448) (7403 . 7404) (#("x" 0 1 (face org-table fontified t)) . -7403) (undo-tree-id510 . -1) (#("o" 0 1 (face org-table fontified t)) . -7404) (undo-tree-id511 . -1) 7405 (#(" " 0 1 (face org-table fontified nil)) . 7450) (7404 . 7405) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7403 . 7404) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7402 . 7403) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7401 . 7402) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7400 . 7401) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7399 . 7400) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7398 . 7399) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7397 . 7398) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7396 . 7397) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7395 . 7396) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7394 . 7395) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7393 . 7394) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7392 . 7393) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7391 . 7392) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7390 . 7391) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7389 . 7390) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7388 . 7389) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7387 . 7388) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7386 . 7387) (#(" " 0 1 (face org-table fontified nil)) . 7450) (7385 . 7386) (#(" " 0 1 (face org-table fontified nil)) . 7288) (7241 . 7242) (#(" " 0 1 (face org-table fontified nil)) . 7288) (7240 . 7241) (#(" " 0 1 (face org-table fontified nil)) . 7288) (7239 . 7240) (#(" " 0 1 (face org-table fontified nil)) . 7288) (7238 . 7239) (#(" " 0 1 (face org-table fontified nil)) . 7288) (7237 . 7238) (#("b" 0 1 (face org-table fontified t)) . -7237) (undo-tree-id512 . -1) (#("o" 0 1 (face org-table fontified t)) . -7238) (undo-tree-id513 . -1) (#("m" 0 1 (face org-table fontified t)) . -7239) (undo-tree-id514 . -1) 7240 (#(" " 0 1 (face org-table fontified nil)) . 7291) (7239 . 7240) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7238 . 7239) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7237 . 7238) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7236 . 7237) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7235 . 7236) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7234 . 7235) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7233 . 7234) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7232 . 7233) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7231 . 7232) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7230 . 7231) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7229 . 7230) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7228 . 7229) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7227 . 7228) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7226 . 7227) (t 25301 29936 967813 110000)) nil (25301 30028 526924 133000) 0 nil])
([nil nil ((#("| Mon | 2022-10-03 | 08:45-10:30 | VERVALT            | CZ 7 (96)    |                                                                   |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 5 (face org-table fontified t) 5 6 (face org-table fontified t) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 7 8 (face org-table fontified t) 8 18 (face org-table fontified t) 18 19 (face org-table fontified t) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 20 21 (face org-table fontified t) 21 27 (face org-table fontified t) 27 32 (face org-table fontified t) 32 33 (face org-table fontified t) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 34 35 (face org-table fontified t) 35 42 (face org-table fontified t) 42 53 (face org-table fontified t) 53 54 (face org-table fontified t) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 55 56 (face org-table fontified t) 56 65 (face org-table fontified t) 65 68 (face org-table fontified t) 68 69 (face org-table fontified t) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 70 71 (face org-table fontified t) 71 136 (face org-table fontified t) 136 137 (face org-table fontified t) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 138 139 (face org-table fontified t) 139 159 (face org-table fontified t) 159 160 (face org-table fontified t) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 161 162 (fontified t)) . 6021) (undo-tree-id496 . 160) (undo-tree-id497 . -2) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 6022) nil (25301 30028 526912 374000) 0 nil])
([nil nil ((#("| Fri | 2022-10-07 | 12:45-14:30 | VERVALT            | MDZ 1 (99)   |                                                                   |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 5 (face org-table fontified t) 5 6 (face org-table fontified t) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 7 8 (face org-table fontified t) 8 18 (face org-table fontified t) 18 19 (face org-table fontified t) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 20 21 (face org-table fontified t) 21 27 (face org-table fontified t) 27 32 (face org-table fontified t) 32 33 (face org-table fontified t) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 34 35 (face org-table fontified t) 35 42 (face org-table fontified t) 42 53 (face org-table fontified t) 53 54 (face org-table fontified t) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 55 56 (face org-table fontified t) 56 66 (face org-table fontified t) 66 68 (face org-table fontified t) 68 69 (face org-table fontified t) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 70 71 (face org-table fontified t) 71 136 (face org-table fontified t) 136 137 (face org-table fontified t) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 138 139 (face org-table fontified t) 139 159 (face org-table fontified t) 159 160 (face org-table fontified t) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 161 162 (fontified t)) . 6021) (undo-tree-id493 . 162) (undo-tree-id494 . 106) (undo-tree-id495 . -59)) nil (25301 30028 526740 676000) 0 nil])
([nil nil ((#("| Fri | 2022-11-11 | 10:45-12:30 | VERVALT            | CZ 9 (97)    |                                                                   |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 5 (face org-table fontified t) 5 6 (face org-table fontified t) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 7 8 (face org-table fontified t) 8 18 (face org-table fontified t) 18 19 (face org-table fontified t) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 20 21 (face org-table fontified t) 21 27 (face org-table fontified t) 27 32 (face org-table fontified t) 32 33 (face org-table fontified t) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 34 35 (face org-table fontified t) 35 42 (face org-table fontified t) 42 53 (face org-table fontified t) 53 54 (face org-table fontified t) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 55 56 (face org-table fontified t) 56 65 (face org-table fontified t) 65 68 (face org-table fontified t) 68 69 (face org-table fontified t) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 70 71 (face org-table fontified t) 71 136 (face org-table fontified t) 136 137 (face org-table fontified t) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 138 139 (face org-table fontified t) 139 159 (face org-table fontified t) 159 160 (face org-table fontified t) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 161 162 (fontified t)) . 6345) (undo-tree-id472 . -43) (undo-tree-id473 . -43) (undo-tree-id474 . -43) (undo-tree-id475 . -43) (undo-tree-id476 . -43) (undo-tree-id477 . -43) (undo-tree-id478 . -43) (undo-tree-id479 . 127) (undo-tree-id480 . -42) (undo-tree-id481 . -43) (undo-tree-id482 . -43) (undo-tree-id483 . -43) (undo-tree-id484 . -43) (undo-tree-id485 . -43) (undo-tree-id486 . -43) (undo-tree-id487 . -43) (undo-tree-id488 . -43) (undo-tree-id489 . -43) (undo-tree-id490 . -43) (undo-tree-id491 . -43) (undo-tree-id492 . -43) 6388) nil (25301 30028 526394 287000) 0 nil])
([nil nil ((#("| Fri | 2022-11-18 | 12:45-14:30 | VERVALT            | AZ 201 (97)  |                                                                   |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 2 (face org-table fontified t) 2 5 (face org-table fontified t) 5 6 (face org-table fontified t) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 7 8 (face org-table fontified t) 8 12 (face org-table fontified t) 12 18 (face org-table fontified t) 18 19 (face org-table fontified t) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 20 21 (face org-table fontified t) 21 27 (face org-table fontified t) 27 32 (face org-table fontified t) 32 33 (face org-table fontified t) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 34 35 (face org-table fontified t) 35 42 (face org-table fontified t) 42 53 (face org-table fontified t) 53 54 (face org-table fontified t) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 55 56 (face org-table fontified t) 56 67 (face org-table fontified t) 67 68 (face org-table fontified t) 68 69 (face org-table fontified t) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 70 71 (face org-table fontified t) 71 136 (face org-table fontified t) 136 137 (face org-table fontified t) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 138 139 (face org-table fontified t) 139 159 (face org-table fontified t) 159 160 (face org-table fontified t) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 161 162 (fontified t)) . 6507) (undo-tree-id451 . -43) (undo-tree-id452 . -43) (undo-tree-id453 . -43) (undo-tree-id454 . -43) (undo-tree-id455 . -43) (undo-tree-id456 . -43) (undo-tree-id457 . -43) (undo-tree-id458 . 127) (undo-tree-id459 . -42) (undo-tree-id460 . -43) (undo-tree-id461 . -43) (undo-tree-id462 . -43) (undo-tree-id463 . -43) (undo-tree-id464 . -43) (undo-tree-id465 . -43) (undo-tree-id466 . -43) (undo-tree-id467 . -43) (undo-tree-id468 . -43) (undo-tree-id469 . -43) (undo-tree-id470 . -43) (undo-tree-id471 . -43) 6550) nil (25301 30028 526375 571000) 0 nil])
([nil nil ((#(" " 0 1 (face org-table fontified nil)) . 7291) (7228 . 7229) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7227 . 7228) (#(" " 0 1 (face org-table fontified nil)) . 7291) (7226 . 7227) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7088 . 7089) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7087 . 7088) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7086 . 7087) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7085 . 7086) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7084 . 7085) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7083 . 7084) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7082 . 7083) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7081 . 7082) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7080 . 7081) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7079 . 7080) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7078 . 7079) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7077 . 7078) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7076 . 7077) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7075 . 7076) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7074 . 7075) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7073 . 7074) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7072 . 7073) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7071 . 7072) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7070 . 7071) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7069 . 7070) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7068 . 7069) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7067 . 7068) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7066 . 7067) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7065 . 7066) (#(" " 0 1 (face org-table fontified nil)) . 7129) (7064 . 7065) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Lecture gender economics                                         |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 95 (face org-table fontified nil) 95 135 (face org-table fontified nil) 135 136 (face org-table fontified nil) 136 137 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 137 138 (face org-table fontified nil) 138 158 (face org-table fontified nil) 158 159 (face org-table fontified nil) 159 160 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 160 161 (fontified nil)) . 6993) (undo-tree-id435 . -71) (undo-tree-id436 . 161) (undo-tree-id437 . -71) (undo-tree-id438 . -95) (undo-tree-id439 . -94) (undo-tree-id440 . -95) (6831 . 6993) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | notebook gender economics                                       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 96 (face org-table fontified nil) 96 134 (face org-table fontified nil) 134 135 (face org-table fontified nil) 135 136 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 136 137 (face org-table fontified nil) 137 157 (face org-table fontified nil) 157 158 (face org-table fontified nil) 158 159 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 159 160 (fontified nil)) . 6831) (undo-tree-id441 . 160) (undo-tree-id442 . -160) (6669 . 6831) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Lecture gender economics                                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 95 (face org-table fontified nil) 95 132 (face org-table fontified nil) 132 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (face org-table fontified nil) 135 155 (face org-table fontified nil) 155 156 (face org-table fontified nil) 156 157 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 157 158 (fontified nil)) . 6669) (undo-tree-id443 . -71) (undo-tree-id444 . -71) (undo-tree-id445 . -71) (undo-tree-id446 . 62) (undo-tree-id447 . -71) (undo-tree-id448 . -71) (6507 . 6669) 6920 (#(" " 0 1 (face org-table fontified nil)) . 6960) (6919 . 6920) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6918 . 6919) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6917 . 6918) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6916 . 6917) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6915 . 6916) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6914 . 6915) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6913 . 6914) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6912 . 6913) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6911 . 6912) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6910 . 6911) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6909 . 6910) (#(" " 0 1 (face org-table fontified nil)) . 6960) (6908 . 6909) (#("r" 0 1 (face org-table fontified t)) . -6908) (undo-tree-id449 . -1) 6909 (#(" " 0 1 (face org-table fontified nil)) . 6961) (6908 . 6909) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6907 . 6908) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6906 . 6907) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6905 . 6906) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6904 . 6905) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6903 . 6904) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6902 . 6903) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6901 . 6902) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6900 . 6901) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6899 . 6900) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6898 . 6899) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6897 . 6898) (#(" " 0 1 (face org-table fontified nil)) . 6961) (6896 . 6897) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6586 . 6587) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6585 . 6586) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6584 . 6585) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6583 . 6584) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6582 . 6583) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6581 . 6582) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6580 . 6581) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6579 . 6580) (#(" " 0 1 (face org-table fontified nil)) . 6639) (6578 . 6579) (#("G" 0 1 (face org-table fontified t)) . -6578) (undo-tree-id450 . -1) 6579) nil (25301 30028 526350 754000) 0 nil])
([nil nil ((nil fontified nil 4724 . 4725) (nil face (:inherit org-table :inverse-video t) 4724 . 4725) (4563 . 4725) 4564 (t 25301 30028 557312 886000)) nil (25301 30050 516650 206000) 0 nil])
([nil nil ((#(" " 0 1 (face org-table fontified t)) . -4564) (undo-tree-id521 . -1) 4565) nil (25301 30050 516648 315000) 0 nil])
([nil nil ((#(" " 0 1 (face org-table fontified nil)) . 4567) (4564 . 4565)) nil (25301 30050 516646 310000) 0 nil])
([nil nil ((#("|-   |            |             |                    |              |                                                                   |                      |
" 0 1 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 1 2 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 2 3 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 3 4 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 4 5 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 5 6 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 6 7 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 7 8 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 8 9 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 9 10 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 10 11 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 11 12 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 12 13 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 13 14 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 14 15 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 15 16 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 16 17 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 17 18 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 18 19 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 19 20 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 20 21 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 21 22 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 22 23 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 23 24 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 24 25 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 25 26 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 26 27 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 27 28 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 28 29 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 29 30 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 30 31 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 31 32 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 32 33 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 33 34 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 34 35 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 35 36 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 36 37 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 37 38 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 38 39 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 39 40 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 40 41 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 41 42 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 42 43 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 43 44 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 44 45 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 45 46 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 46 47 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 47 48 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 48 49 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 49 50 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 50 51 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 51 52 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 52 53 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 53 54 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 54 55 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 55 56 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 56 57 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 57 58 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 58 59 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 59 60 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 60 61 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 61 62 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 62 63 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 63 64 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 64 65 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 65 66 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 66 67 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 67 68 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 68 69 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 69 70 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 70 71 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 71 72 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 72 73 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 73 74 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 74 75 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 75 76 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 76 77 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 77 78 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 78 79 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 79 80 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 80 81 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 81 82 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 82 83 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 83 84 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 84 85 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 85 86 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 86 87 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 87 88 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 88 89 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 89 90 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 90 91 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 91 92 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 92 93 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 93 94 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 94 95 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 95 96 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 96 97 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 97 98 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 98 99 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 99 100 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 100 101 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 101 102 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 102 103 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 103 104 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 104 105 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 105 106 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 106 107 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 107 108 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 108 109 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 109 110 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 110 111 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 111 112 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 112 113 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 113 114 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 114 115 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 115 116 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 116 117 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 117 118 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 118 119 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 119 120 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 120 121 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 121 122 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 122 123 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 123 124 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 124 125 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 125 126 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 126 127 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 127 128 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 128 129 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 129 130 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 130 131 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 131 132 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 132 133 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 133 134 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 134 135 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 135 136 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 136 137 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 137 138 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 138 139 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 139 140 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 140 141 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 141 142 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 142 143 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 143 144 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 144 145 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 145 146 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 146 147 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 147 148 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 148 149 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 149 150 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 150 151 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 151 152 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 152 153 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 153 154 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 154 155 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 155 156 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 156 157 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 157 158 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 158 159 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 159 160 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 160 161 (face (:height 0.1) fontified nil)) . 4725) (undo-tree-id515 . -161) (undo-tree-id516 . -161) (undo-tree-id517 . -161) (undo-tree-id518 . -2) (undo-tree-id519 . -1) (undo-tree-id520 . -2) (4563 . 4725) 4565) nil (25301 30050 516643 354000) 0 nil])
([nil nil ((#(" " 0 1 (face org-table fontified nil)) . 5185) (5165 . 5166) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5164 . 5165) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5163 . 5164) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5162 . 5163) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5161 . 5162) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5160 . 5161) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5159 . 5160) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5158 . 5159) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5157 . 5158) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5156 . 5157) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5155 . 5156) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5154 . 5155) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5153 . 5154) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5152 . 5153) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5151 . 5152) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5150 . 5151) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5149 . 5150) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5148 . 5149) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5147 . 5148) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5146 . 5147) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5145 . 5146) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5144 . 5145) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5143 . 5144) (#(" " 0 1 (face org-table fontified nil)) . 5185) (5142 . 5143) (t 25301 30050 553673 18000)) nil (25301 30326 920429 60000) 0 nil])
([nil nil ((#("Orientation & Preparation - How to prepare for Assessments " 0 58 (face org-table font-lock-fontified t fontified t) 58 59 (face org-table fontified t)) . 5598) (undo-tree-id633 . -58) (undo-tree-id634 . -58) (undo-tree-id635 . -58) (#("Orientation & Preparation - How to prepare for Assessments " 0 58 (face org-table fontified t font-lock-fontified t) 58 59 (face org-table fontified t)) . 5495) (#("Orientation & Preparation - Personal Branding & Networking " 0 47 (face org-table fontified t font-lock-fontified t) 47 58 (face org-table fontified t font-lock-fontified t) 58 59 (face org-table fontified t)) . 5392) (#("Orientation & Preparation - Personal Branding & Networking " 0 58 (face org-table fontified t font-lock-fontified t) 58 59 (face org-table fontified t)) . 5289) (undo-tree-id636 . 59) 5833) nil (25301 30326 920425 53000) 0 nil])
([nil nil ((5729 . 5730) (5728 . 5729) (5727 . 5728) (5726 . 5727) (5725 . 5726) (5724 . 5725) (5723 . 5724) (5722 . 5723) (5721 . 5722) (5720 . 5721) (5719 . 5720) (5718 . 5719) (5717 . 5718) (5716 . 5717) (5715 . 5716) (5714 . 5715) (5713 . 5714) (5712 . 5713) (5711 . 5712) (5710 . 5711) (5709 . 5710) (5708 . 5709) (5707 . 5708) (5706 . 5707) (5705 . 5706) (5704 . 5705) (5703 . 5704) (5702 . 5703) (5701 . 5702) (5700 . 5701) (5699 . 5700) (5698 . 5699) (5697 . 5698) (5593 . 5594) (5592 . 5593) (5591 . 5592) (5590 . 5591) (5589 . 5590) (5588 . 5589) (5587 . 5588) (5586 . 5587) (5585 . 5586) (5584 . 5585) (5583 . 5584) (5582 . 5583) (5581 . 5582) (5580 . 5581) (5579 . 5580) (5578 . 5579) (5577 . 5578) (5576 . 5577) (5575 . 5576) (5574 . 5575) (5573 . 5574) (5572 . 5573) (5571 . 5572) (5570 . 5571) (5569 . 5570) (5568 . 5569) (5567 . 5568) (5566 . 5567) (5565 . 5566) (5564 . 5565) (5563 . 5564) (5562 . 5563) (5561 . 5562) (5457 . 5458) (5456 . 5457) (5455 . 5456) (5454 . 5455) (5453 . 5454) (5452 . 5453) (5451 . 5452) (5450 . 5451) (5449 . 5450) (5448 . 5449) (5447 . 5448) (5446 . 5447) (5445 . 5446) (5444 . 5445) (5443 . 5444) (5442 . 5443) (5441 . 5442) (5440 . 5441) (5439 . 5440) (5438 . 5439) (5437 . 5438) (5436 . 5437) (5435 . 5436) (5434 . 5435) (5433 . 5434) (5432 . 5433) (5431 . 5432) (5430 . 5431) (5429 . 5430) (5428 . 5429) (5427 . 5428) (5426 . 5427) (5425 . 5426) (5317 . 5322) (5310 . 5317) (5289 . 5310)) nil (25301 30326 920419 944000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Q&A                                                               |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 74 (face org-table fontified nil) 74 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 7118) (undo-tree-id586 . -162) (undo-tree-id587 . -162) (undo-tree-id588 . 162) (undo-tree-id589 . 162) (6975 . 7118) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | notebook gender economics                                         |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 96 (face org-table fontified nil) 96 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6975) (undo-tree-id590 . 162) (undo-tree-id591 . 162) (6832 . 6975) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Lecture gender economics                                          |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 95 (face org-table fontified nil) 95 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6832) (undo-tree-id592 . 162) (undo-tree-id593 . 162) (6689 . 6832) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | notebook gender economics                                         |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 96 (face org-table fontified nil) 96 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6689) (undo-tree-id594 . 162) (undo-tree-id595 . 162) (6546 . 6689) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Lecture gender economics                                          |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 95 (face org-table fontified nil) 95 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6546) (undo-tree-id596 . 162) (undo-tree-id597 . 162) (undo-tree-id598 . -162) (undo-tree-id599 . -162) (6403 . 6546) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  | Healthcare and regulation                                         |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 96 (face org-table fontified nil) 96 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6403) (undo-tree-id600 . 162) (undo-tree-id601 . 162) (6260 . 6403) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Empirical research                                                |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 89 (face org-table fontified nil) 89 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6260) (undo-tree-id602 . 162) (undo-tree-id603 . 162) (6117 . 6260) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Financial crisis                                                  |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 87 (face org-table fontified nil) 87 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 6117) (undo-tree-id604 . 162) (undo-tree-id605 . 162) (5974 . 6117) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Asymmetric information                                            | Pandas (3,4)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil) 93 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 151 (face org-table fontified nil font-lock-fontified t) 151 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 5974) (undo-tree-id606 . 162) (undo-tree-id607 . 162) (5831 . 5974) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | The market                                                        | Pandas (1,2)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 81 (face org-table fontified nil) 81 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 151 (face org-table font-lock-fontified t fontified nil) 151 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 5831) (undo-tree-id608 . 162) (undo-tree-id609 . 162) (undo-tree-id610 . -162) (5688 . 5831) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.J.C.   | RTZ 501 (32) | Career workshops: see Canvas for details|                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 111 (face org-table font-lock-fontified t fontified nil) 111 112 (face org-table fontified nil) 112 113 (face org-table fontified nil) 113 133 (face org-table fontified nil) 133 134 (face org-table fontified nil) 134 135 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 135 136 (fontified nil)) . 5688) (undo-tree-id611 . -112) (undo-tree-id612 . -78) (undo-tree-id613 . 136) (undo-tree-id614 . 24) (5545 . 5688) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J.Y.M. | RTZ 103 (32) | Career workshops: see Canvas for details| Intermediate (3,4,5) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 111 (face org-table fontified nil font-lock-fontified t) 111 112 (face org-table fontified nil) 112 113 (face org-table fontified nil) 113 132 (face org-table fontified nil) 132 133 (face org-table fontified nil rear-nonsticky t) 133 134 (face org-table fontified nil) 134 135 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 135 136 (fontified nil)) . 5545) (undo-tree-id615 . 136) (undo-tree-id616 . -136) (undo-tree-id617 . -136) (5402 . 5545) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.J.C.   | RTZ 203 (32) | Career workshops: see Canvas for details|                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 51 (face org-table fontified nil) 51 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 111 (face org-table fontified nil font-lock-fontified t) 111 112 (face org-table fontified nil) 112 113 (face org-table fontified nil) 113 133 (face org-table fontified nil) 133 134 (face org-table fontified nil) 134 135 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 135 136 (fontified nil)) . 5402) (undo-tree-id618 . 136) (undo-tree-id619 . -136) (undo-tree-id620 . -136) (undo-tree-id621 . -136) (undo-tree-id622 . -136) (5259 . 5402) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J.Y.M. | RTZ 202 (32) | Career workshops: see Canvas for details| Intermediate (1,2)   |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 111 (face org-table fontified nil font-lock-fontified t) 111 112 (face org-table fontified nil) 112 113 (face org-table fontified nil) 113 130 (face org-table fontified nil) 130 131 (face org-table rear-nonsticky t fontified nil) 131 133 (face org-table fontified nil) 133 134 (face org-table fontified nil) 134 135 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 135 136 (fontified nil)) . 5259) (undo-tree-id623 . -78) (undo-tree-id624 . 25) (undo-tree-id625 . -78) (undo-tree-id626 . -78) (5116 . 5259) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J.Y.M. | CZ 7 (96)    | Plenary Career Session: see Canvas for details                    | Intro (3,4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 92 (face org-table fontified nil) 92 93 (face org-table fontified nil rear-nonsticky t) 93 117 (face org-table fontified nil) 117 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 150 (face org-table fontified nil font-lock-fontified t) 150 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 5116) (4973 . 5116) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  |                                                                   | Intro (1,2)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 150 (face org-table font-lock-fontified t fontified nil) 150 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 4973) (undo-tree-id627 . -162) (4830 . 4973) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  | Intro python, markdown, github, jupyterlab                        |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 4830) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (4687 . 4830) (#("|-----+------------+-------------+--------------------+--------------+-------------------------------------------------------------------+----------------------|
" 0 1 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 1 2 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 2 3 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 3 4 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 4 5 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 5 6 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 6 7 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 7 8 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 8 9 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 9 10 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 10 11 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 11 12 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 12 13 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 13 14 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 14 15 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 15 16 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 16 17 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 17 18 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 18 19 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 19 20 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 20 21 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 21 22 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 22 23 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 23 24 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 24 25 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 25 26 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 26 27 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 27 28 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 28 29 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 29 30 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 30 31 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 31 32 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 32 33 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 33 34 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 34 35 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 35 36 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 36 37 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 37 38 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 38 39 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 39 40 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 40 41 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 41 42 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 42 43 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 43 44 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 44 45 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 45 46 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 46 47 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 47 48 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 48 49 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 49 50 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 50 51 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 51 52 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 52 53 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 53 54 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 54 55 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 55 56 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 56 57 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 57 58 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 58 59 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 59 60 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 60 61 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 61 62 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 62 63 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 63 64 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 64 65 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 65 66 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 66 67 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 67 68 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 68 69 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 69 70 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 70 71 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 71 72 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 72 73 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 73 74 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 74 75 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 75 76 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 76 77 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 77 78 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 78 79 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 79 80 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 80 81 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 81 82 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 82 83 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 83 84 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 84 85 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 85 86 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 86 87 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 87 88 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 88 89 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 89 90 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 90 91 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 91 92 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 92 93 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 93 94 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 94 95 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 95 96 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 96 97 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 97 98 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 98 99 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 99 100 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 100 101 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 101 102 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 102 103 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 103 104 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 104 105 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 105 106 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 106 107 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 107 108 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 108 109 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 109 110 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 110 111 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 111 112 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 112 113 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 113 114 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 114 115 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 115 116 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 116 117 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 117 118 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 118 119 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 119 120 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 120 121 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 121 122 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 122 123 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 123 124 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 124 125 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 125 126 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 126 127 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 127 128 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 128 129 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 129 130 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 130 131 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 131 132 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 132 133 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 133 134 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 134 135 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 135 136 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 136 137 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 137 138 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 138 139 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 139 140 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 140 141 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 141 142 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 142 143 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 143 144 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 144 145 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 145 146 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 146 147 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 147 148 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 148 149 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 149 150 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 150 151 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 151 152 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 152 153 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 153 154 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 154 155 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 155 156 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 156 157 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 157 158 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 158 159 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 159 160 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 160 161 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 161 162 (face (:height 0.1) fontified nil)) . 4687) (undo-tree-id630 . -162) (undo-tree-id631 . -162) (undo-tree-id632 . -162) (4544 . 4687) (#("| day |       date |        time | staff              | room         | Topic                                                             | Datacamp             |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 76 (face org-table font-lock-fontified t fontified nil) 76 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (face org-table fontified nil) 139 147 (face org-table font-lock-fontified t fontified nil) 147 159 (face org-table fontified nil) 159 160 (face org-table fontified nil) 160 161 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 161 162 (fontified nil)) . 4544) (4401 . 4544) 5321) nil (25301 30326 920408 494000) 0 nil])
([nil nil ((#("." 0 1 (face org-table fontified t)) . -5021) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("Y" 0 1 (face org-table fontified t)) . -5022) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("." 0 1 (face org-table fontified t)) . -5023) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (#("M" 0 1 (face org-table fontified t)) . -5024) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#("." 0 1 (face org-table fontified t)) . -5025) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) 5026) nil (25301 30326 920369 844000) 0 nil])
([nil nil ((#("." 0 1 (face org-table fontified t)) . -5159) (undo-tree-id557 . -1) (#("Y" 0 1 (face org-table fontified t)) . -5160) (undo-tree-id558 . -1) (#("." 0 1 (face org-table fontified t)) . -5161) (undo-tree-id559 . -1) (#("M" 0 1 (face org-table fontified t)) . -5162) (undo-tree-id560 . -1) 5163) nil (25301 30326 920354 335000) 0 nil])
([nil nil ((#("J" 0 1 (face org-table fontified t)) . -5297) (undo-tree-id553 . -1) (#("." 0 1 (face org-table fontified t)) . -5298) (undo-tree-id554 . -1) (#("C" 0 1 (face org-table fontified t)) . -5299) (undo-tree-id555 . -1) (#("." 0 1 (face org-table fontified t)) . -5300) (undo-tree-id556 . -1) 5301) nil (25301 30326 920350 972000) 0 nil])
([nil nil ((#("Y" 0 1 (face org-table fontified t)) . -5438) (undo-tree-id549 . -1) (#("." 0 1 (face org-table fontified t)) . -5439) (undo-tree-id550 . -1) (#("M" 0 1 (face org-table fontified t)) . -5440) (undo-tree-id551 . -1) (#("." 0 1 (face org-table fontified t)) . -5441) (undo-tree-id552 . -1) 5442) nil (25301 30326 920347 226000) 0 nil])
([nil nil ((#("J" 0 1 (face org-table fontified t)) . -5575) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (#("." 0 1 (face org-table fontified t)) . -5576) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("C" 0 1 (face org-table fontified t)) . -5577) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("." 0 1 (face org-table fontified t)) . -5578) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 5579) nil (25301 30326 920343 199000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Q&A                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 74 (face org-table fontified nil) 74 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 7042) (undo-tree-id522 . -143) (undo-tree-id523 . -143) (undo-tree-id524 . -143) (6903 . 7042) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | notebook gender economics                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 96 (face org-table fontified nil) 96 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6903) (6764 . 6903) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Lecture gender economics                       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 95 (face org-table fontified nil) 95 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6764) (6625 . 6764) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | notebook gender economics                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 96 (face org-table fontified nil) 96 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6625) (6486 . 6625) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.       | AZ 201 (97)  | Lecture gender economics                       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 12 (face org-table fontified nil) 12 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 47 (face org-table fontified nil) 47 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 95 (face org-table fontified nil) 95 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6486) (undo-tree-id525 . -143) (undo-tree-id526 . -143) (6347 . 6486) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.          | AZ 201 (97)  | Healthcare and regulation                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 96 (face org-table fontified nil) 96 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6347) (6208 . 6347) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Empirical research                             |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 89 (face org-table fontified nil) 89 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6208) (6069 . 6208) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.          | CZ 9 (97)    | Financial crisis                               |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 87 (face org-table fontified nil) 87 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 6069) (5930 . 6069) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | Asymmetric information                         | Pandas (3,4)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 93 (face org-table fontified nil) 93 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 132 (face org-table font-lock-fontified t fontified nil) 132 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 5930) (5791 . 5930) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.          | CZ 7 (96)    | The market                                     | Pandas (1,2)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 65 (face org-table fontified nil) 65 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 81 (face org-table fontified nil) 81 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 132 (face org-table fontified nil font-lock-fontified t) 132 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 5791) (undo-tree-id527 . -143) (5652 . 5791) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J | CZ 7 (96)    | Plenary Career Session: see Canvas for details | Intro (3,4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 48 (face org-table fontified nil) 48 49 (face org-table fontified nil) 49 50 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 50 51 (face org-table fontified nil) 51 60 (face org-table fontified nil) 60 63 (face org-table fontified nil) 63 64 (face org-table fontified nil) 64 65 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 65 66 (face org-table fontified nil) 66 87 (face org-table fontified nil) 87 88 (face org-table rear-nonsticky t fontified nil) 88 112 (face org-table fontified nil) 112 113 (face org-table fontified nil) 113 114 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 114 115 (face org-table fontified nil) 115 126 (face org-table font-lock-fontified t fontified nil) 126 135 (face org-table fontified nil) 135 136 (face org-table fontified nil) 136 137 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 137 138 (fontified nil)) . 5096) (undo-tree-id528 . -48) (undo-tree-id529 . -48) (undo-tree-id530 . -48) (undo-tree-id531 . -48) (undo-tree-id532 . 89) (4957 . 5096) (#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT            | AZ 201 (97)  |                                                | Intro (1,2)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 42 (face org-table fontified nil) 42 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 131 (face org-table fontified nil font-lock-fontified t) 131 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 4957) (undo-tree-id533 . -143) (4818 . 4957) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.          | CZ 114 (99)  | Intro python, markdown, github, jupyterlab     |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 27 (face org-table fontified nil) 27 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 67 (face org-table fontified nil) 67 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 113 (face org-table fontified nil) 113 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 4818) (undo-tree-id534 . -143) (undo-tree-id535 . -143) (4679 . 4818) (#("|-----+------------+-------------+--------------------+--------------+------------------------------------------------+----------------------|
" 0 1 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 1 2 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 2 3 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 3 4 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 4 5 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 5 6 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 6 7 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 7 8 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 8 9 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 9 10 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 10 11 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 11 12 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 12 13 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 13 14 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 14 15 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 15 16 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 16 17 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 17 18 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 18 19 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 19 20 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 20 21 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 21 22 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 22 23 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 23 24 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 24 25 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 25 26 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 26 27 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 27 28 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 28 29 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 29 30 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 30 31 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 31 32 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 32 33 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 33 34 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 34 35 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 35 36 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 36 37 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 37 38 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 38 39 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 39 40 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 40 41 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 41 42 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 42 43 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 43 44 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 44 45 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 45 46 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 46 47 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 47 48 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 48 49 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 49 50 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 50 51 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 51 52 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 52 53 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 53 54 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 54 55 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 55 56 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 56 57 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 57 58 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 58 59 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 59 60 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 60 61 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 61 62 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 62 63 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 63 64 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 64 65 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 65 66 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 66 67 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 67 68 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 68 69 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 69 70 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 70 71 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 71 72 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 72 73 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 73 74 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 74 75 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 75 76 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 76 77 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 77 78 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 78 79 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 79 80 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 80 81 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 81 82 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 82 83 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 83 84 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 84 85 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 85 86 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 86 87 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 87 88 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 88 89 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 89 90 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 90 91 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 91 92 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 92 93 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 93 94 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 94 95 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 95 96 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 96 97 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 97 98 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 98 99 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 99 100 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 100 101 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 101 102 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 102 103 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 103 104 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 104 105 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 105 106 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 106 107 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 107 108 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 108 109 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 109 110 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 110 111 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 111 112 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 112 113 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 113 114 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 114 115 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 115 116 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 116 117 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 117 118 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 118 119 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 119 120 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 120 121 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 121 122 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 122 123 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 123 124 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 124 125 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 125 126 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 126 127 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 127 128 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 128 129 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 129 130 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 130 131 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 131 132 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 132 133 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 133 134 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 134 135 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 135 136 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 136 137 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 137 138 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 138 139 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 139 140 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 140 141 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 141 142 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 142 143 (face (:height 0.1) fontified nil)) . 4679) (undo-tree-id536 . -143) (undo-tree-id537 . -143) (undo-tree-id538 . -143) (4540 . 4679) (#("| day |       date |        time | staff              | room         | Topic                                          | Datacamp             |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 14 (face org-table fontified nil) 14 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 28 (face org-table fontified nil) 28 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 36 (face org-table fontified nil) 36 40 (face org-table fontified nil) 40 53 (face org-table fontified nil) 53 54 (face org-table fontified nil) 54 55 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 55 56 (face org-table fontified nil) 56 60 (face org-table fontified nil) 60 68 (face org-table fontified nil) 68 69 (face org-table fontified nil) 69 70 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 70 71 (face org-table fontified nil) 71 76 (face org-table fontified nil font-lock-fontified t) 76 117 (face org-table fontified nil) 117 118 (face org-table fontified nil) 118 119 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 119 120 (face org-table fontified nil) 120 128 (face org-table fontified nil font-lock-fontified t) 128 140 (face org-table fontified nil) 140 141 (face org-table fontified nil) 141 142 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 142 143 (fontified nil)) . 4540) (undo-tree-id539 . 23) (undo-tree-id540 . -128) (4401 . 4540) 5575) nil (25301 30326 920331 180000) 0 nil])
([nil nil ((#("#+begin_comment   
| week | day |       date |        time | Staff       | room            | Topic                                                                     | Tirole   | Datacamp           |
|------+-----+------------+-------------+-------------+-----------------+---------------------------------------------------------------------------+----------+--------------------|
|   35 | Tue | 2021-08-31 | 14:45-16:30 | Smulders*   | CZ 120 (hybrid) | Canon 0: intro                                                            |          |                    |
|   35 | Fri | 2021-09-03 | 14:45-16:30 | Boone*      | zoom (only)     | Intro python, markdown, github, jupyterlab                                |          |                    |
|   36 | Fri | 2021-09-10 | 14:45-16:30 | Smulders    | DZ 2            | Canon 1: The economist                                                    | 1,2,3,4  | Intro (1,2)        |
|   37 | Tue | 2021-09-14 | 12:45-14:30 | Ladenstein* | MDZ 20          | Plenary Career Session                                                    |          | Intro (3)          |
|   37 | Fri | 2021-09-17 | 14:45-16:30 | Smulders    | DZ 2            | Canon 2: Jobs                                                             | 6,7,9    | Intro (4)          |
|   38 | Mon | 2021-09-20 | 13:45-17:30 | *           | RTZ 202         | Career Orientation & Preparation - Personal Branding & Networking         |          | Intermediate (1,2) |
|   38 | Mon | 2021-09-20 | 13:45-17:30 | *           | RTZ 501         | Career Orientation & Preparation - Personal Branding & Networking         |          |                    |
|   38 | Mon | 2021-09-20 | 13:45-17:30 | *           | RTZ 103         | Career Orientation & Preparation - How to prepare for Assessments         |          |                    |
|   38 | Fri | 2021-09-24 | 13:45-17:30 | *           | RTZ 102         | Career Orientation & Preparation - How to prepare for Assessments         |          |                    |
|   38 | Fri | 2021-09-24 | 13:45-17:30 | *           | RTZ 303         | Career Orientation & Preparation - Talent Management                      |          |                    |
|   38 | Fri | 2021-09-24 | 13:45-17:30 | *           | RTZ 202         | Career Orientation & Preparation - LinkedIn & Networking through LinkedIn |          | Intermediate (3,4) |
|   40 | Fri | 2021-10-08 | 14:45-16:30 | Boone       | DZ 1            | Q&A python/Datacamp                                                       |          | Intermediate (5)   |
|   41 | Fri | 2021-10-15 | 14:45-16:30 | Smulders    | DZ 2            | Canon 3: Climate                                                          | 8,16     | Pandas (1,2)       |
|   45 | Fri | 2021-11-12 | 14:45-16:30 | Smulders    | DZ 2            | Canon 4: Finance                                                          | 10,11,12 | Pandas (3,4)       |
|   46 | Wed | 2021-11-17 | 16:45-18:30 | Boone       | CZ 121          | The market                                                                |          |                    |
|   46 | Fri | 2021-11-19 | 14:45-16:30 | Boone       | DZ 1            | Asymmetric information                                                    |          |                    |
|   47 | Fri | 2021-11-26 | 14:45-16:30 | Smulders    | DZ 2            | Canon 5: regulation                                                       | 13,17    |                    |
|   48 | Wed | 2021-12-01 | 16:45-18:30 | Boone       | CZ 121          | Financial crisis                                                          |          |                    |
|   48 | Fri | 2021-12-03 | 14:45-16:30 | Boone       | DZ 1            | Empirical research                                                        |          |                    |
|   49 | Wed | 2021-12-08 | 16:45-18:30 | Boone       | CZ 121          | Health care regulation                                                    |          |                    |
|   49 | Fri | 2021-12-10 | 14:45-16:30 | Smulders    | DZ 2            | Canon 6: Behavior                                                         | 5,15     |                    |
#+end_comment
" 0 7 (display (space :width (3)) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 7 8 (display (space :width (3)) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) font-lock-multiline t face org-block-begin-line font-lock-fontified t fontified t) 8 15 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) font-lock-multiline t face (org-block-begin-line org-modern-block-keyword) font-lock-fontified t fontified t) 15 18 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 18 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 19 20 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 20 26 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 26 27 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 27 32 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 32 33 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 33 45 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 45 46 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 46 59 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 59 60 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 60 73 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 73 74 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 74 91 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 91 92 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 92 103 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 103 167 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 167 168 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 168 178 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 178 179 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 179 199 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 199 200 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 200 201 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 201 202 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 202 203 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 203 204 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 204 205 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 205 206 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 206 207 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 207 208 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 208 209 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 209 210 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 210 211 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 211 212 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 212 213 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 213 214 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 214 215 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 215 216 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 216 217 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 217 218 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 218 219 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 219 220 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 220 221 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 221 222 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 222 223 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 223 224 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 224 225 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 225 226 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 226 227 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 227 228 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 228 229 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 229 230 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 230 231 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 231 232 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 232 233 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 233 234 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 234 235 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 235 236 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 236 237 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 237 238 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 238 239 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 239 240 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 240 241 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 241 242 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 242 243 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 243 244 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 244 245 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 245 246 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 246 247 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 247 248 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 248 249 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 249 250 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 250 251 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 251 252 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 252 253 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 253 254 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 254 255 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 255 256 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 256 257 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 257 258 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 258 259 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 259 260 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 260 261 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 261 262 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 262 263 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 263 264 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 264 265 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 265 266 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 266 267 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 267 268 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 268 269 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 269 270 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 270 271 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 271 272 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 272 273 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 273 274 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 274 275 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 275 276 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 276 277 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 277 278 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 278 279 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 279 280 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 280 281 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 281 282 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 282 283 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 283 284 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 284 285 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 285 286 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 286 287 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 287 288 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 288 289 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 289 290 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 290 291 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 291 292 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 292 293 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 293 294 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 294 295 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 295 296 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 296 297 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 297 298 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 298 299 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 299 300 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 300 301 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 301 302 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 302 303 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 303 304 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 304 305 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 305 306 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 306 307 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 307 308 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 308 309 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 309 310 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 310 311 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 311 312 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 312 313 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 313 314 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 314 315 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 315 316 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 316 317 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 317 318 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 318 319 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 319 320 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 320 321 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 321 322 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 322 323 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 323 324 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 324 325 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 325 326 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 326 327 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 327 328 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 328 329 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 329 330 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 330 331 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 331 332 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 332 333 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 333 334 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 334 335 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 335 336 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 336 337 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 337 338 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 338 339 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 339 340 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 340 341 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 341 342 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 342 343 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 343 344 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 344 345 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 345 346 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 346 347 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 347 348 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 348 349 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 349 350 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 350 351 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 351 352 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 352 353 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 353 354 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 354 355 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 355 356 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 356 357 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 357 358 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 358 359 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 359 360 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 360 361 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 361 362 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 362 363 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 363 364 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 364 365 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 365 366 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 366 367 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 367 368 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 368 369 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 369 370 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 370 371 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 371 372 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 372 373 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 373 374 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 374 375 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 375 376 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 376 377 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 377 378 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 378 379 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 379 380 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 380 381 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width 1) font-lock-multiline t face (org-table (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 381 382 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) src-block t font-lock-fontified t fontified t) 382 383 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (:height 0.1) font-lock-multiline t src-block t font-lock-fontified t fontified t) 383 384 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 384 390 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 390 391 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 391 396 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 396 397 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 397 409 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 409 410 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 410 423 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 423 424 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 424 437 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 437 438 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 438 455 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 455 456 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 456 531 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 531 532 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 532 542 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 542 543 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 543 563 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 563 564 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 564 565 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 565 566 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 566 572 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 572 573 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 573 578 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 578 579 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 579 591 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 591 592 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 592 605 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 605 606 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 606 619 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 619 620 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 620 637 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 637 638 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 638 713 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 713 714 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 714 724 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 724 725 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 725 745 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 745 746 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 746 747 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 747 748 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 748 754 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 754 755 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 755 760 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 760 761 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 761 773 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 773 774 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 774 787 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 787 788 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 788 801 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 801 802 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 802 819 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 819 820 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 820 895 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 895 896 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 896 906 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 906 907 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 907 927 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 927 928 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 928 929 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 929 930 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 930 936 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 936 937 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 937 942 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 942 943 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 943 955 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 955 956 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 956 969 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 969 970 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 970 983 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 983 984 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 984 1001 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1001 1002 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1002 1077 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1077 1078 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1078 1088 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1088 1089 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1089 1109 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1109 1110 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1110 1111 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1111 1112 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1112 1118 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1118 1119 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1119 1124 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1124 1125 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1125 1137 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1137 1138 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1138 1151 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1151 1152 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1152 1165 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1165 1166 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1166 1183 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1183 1184 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1184 1259 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1259 1260 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1260 1270 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1270 1271 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1271 1291 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1291 1292 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1292 1293 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1293 1294 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1294 1300 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1300 1301 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1301 1306 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1306 1307 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1307 1319 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1319 1320 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1320 1333 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1333 1334 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1334 1340 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1340 1341 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1341 1347 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1347 1348 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1348 1365 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1365 1366 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1366 1441 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1441 1442 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1442 1452 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1452 1453 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1453 1473 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1473 1474 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1474 1475 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1475 1476 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1476 1482 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1482 1483 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1483 1488 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1488 1489 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1489 1501 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1501 1502 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1502 1515 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1515 1516 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1516 1518 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1518 1529 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1529 1530 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1530 1547 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1547 1548 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1548 1603 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1603 1623 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1623 1624 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1624 1634 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1634 1635 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1635 1655 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1655 1656 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1656 1657 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1657 1658 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1658 1664 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1664 1665 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1665 1670 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1670 1671 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1671 1683 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1683 1684 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1684 1697 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1697 1698 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1698 1711 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1711 1712 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1712 1729 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1729 1730 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1730 1805 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1805 1806 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1806 1816 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1816 1817 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1817 1837 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1837 1838 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1838 1839 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1839 1840 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1840 1846 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1846 1847 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1847 1852 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1852 1853 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1853 1855 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1855 1865 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1865 1866 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1866 1879 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1879 1880 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1880 1893 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1893 1894 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1894 1911 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1911 1912 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1912 1987 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1987 1988 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1988 1998 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 1998 1999 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 1999 2019 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2019 2020 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2020 2021 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2021 2022 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2022 2028 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2028 2029 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2029 2034 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2034 2035 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2035 2047 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2047 2048 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2048 2061 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2061 2062 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2062 2075 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2075 2076 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2076 2093 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2093 2094 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2094 2169 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2169 2170 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2170 2180 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2180 2181 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2181 2201 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2201 2202 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2202 2203 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2203 2204 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2204 2210 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2210 2211 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2211 2216 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2216 2217 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2217 2229 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2229 2230 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2230 2243 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2243 2244 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2244 2257 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2257 2258 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2258 2275 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2275 2276 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2276 2351 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2351 2352 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2352 2362 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2362 2363 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2363 2383 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2383 2384 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2384 2385 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2385 2386 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2386 2392 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2392 2393 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2393 2398 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2398 2399 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2399 2411 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2411 2412 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2412 2425 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2425 2426 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2426 2439 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2439 2440 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2440 2457 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2457 2458 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2458 2533 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2533 2534 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2534 2544 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2544 2545 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2545 2565 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2565 2566 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2566 2567 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2567 2568 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2568 2574 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2574 2575 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2575 2580 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2580 2581 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2581 2593 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2593 2594 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2594 2607 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2607 2608 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2608 2621 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2621 2622 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2622 2639 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2639 2640 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2640 2715 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2715 2716 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2716 2726 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2726 2727 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2727 2747 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2747 2748 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2748 2749 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2749 2750 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2750 2756 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2756 2757 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2757 2762 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2762 2763 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2763 2775 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2775 2776 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2776 2789 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2789 2790 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2790 2803 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2803 2804 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2804 2821 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2821 2822 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2822 2840 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2840 2841 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2841 2897 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2897 2898 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2898 2908 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2908 2909 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2909 2929 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2929 2930 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2930 2931 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2931 2932 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2932 2938 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2938 2939 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2939 2944 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2944 2945 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2945 2957 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2957 2958 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2958 2971 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2971 2972 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2972 2985 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 2985 2986 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 2986 3003 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3003 3004 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3004 3018 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3018 3079 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3079 3080 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3080 3090 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3090 3091 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3091 3103 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3103 3111 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3111 3112 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3112 3113 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3113 3114 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3114 3120 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3120 3121 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3121 3126 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3126 3127 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3127 3139 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3139 3140 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3140 3153 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3153 3154 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3154 3167 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3167 3168 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3168 3185 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3185 3186 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3186 3261 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3261 3262 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3262 3272 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3272 3273 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3273 3293 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3293 3294 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3294 3295 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3295 3296 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3296 3302 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3302 3303 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3303 3308 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3308 3309 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3309 3321 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3321 3322 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3322 3335 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3335 3336 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3336 3349 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3349 3350 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3350 3355 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3355 3367 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3367 3368 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3368 3443 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3443 3444 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3444 3454 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3454 3455 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3455 3475 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3475 3476 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3476 3477 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3477 3478 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3478 3484 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3484 3485 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3485 3490 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3490 3491 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3491 3503 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3503 3504 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3504 3517 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3517 3518 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3518 3531 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3531 3532 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3532 3549 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3549 3550 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3550 3625 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3625 3626 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3626 3636 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3636 3637 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3637 3657 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3657 3658 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3658 3659 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3659 3660 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3660 3666 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3666 3667 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3667 3672 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3672 3673 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3673 3685 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3685 3686 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3686 3699 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3699 3700 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3700 3713 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3713 3714 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3714 3731 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3731 3732 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3732 3807 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3807 3808 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3808 3818 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3818 3819 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3819 3839 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3839 3840 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3840 3841 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3841 3842 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3842 3848 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3848 3849 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3849 3854 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3854 3855 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3855 3867 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3867 3868 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3868 3881 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3881 3882 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3882 3895 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3895 3896 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3896 3913 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3913 3914 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3914 3989 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 3989 3990 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 3990 4000 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4000 4001 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4001 4021 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4021 4022 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4022 4023 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4023 4024 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4024 4030 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4030 4031 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4031 4036 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4036 4037 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4037 4049 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4049 4050 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4050 4063 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4063 4064 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4064 4077 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4077 4078 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4078 4095 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4095 4096 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4096 4171 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4171 4172 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4172 4182 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4182 4183 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4183 4203 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t face org-table src-block t font-lock-fontified t fontified t) 4203 4204 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) display (space :width (3)) font-lock-multiline t face (:inherit org-table :inverse-video t) src-block t font-lock-fontified t fontified t) 4204 4205 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4205 4210 (display (space :width (3)) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-end org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-end org-block-begin-line))) face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 4210 4211 (display (space :width (3)) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-end org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-end org-block-begin-line))) font-lock-multiline t face org-block-end-line font-lock-fontified t fontified t) 4211 4218 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-end org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-end org-block-begin-line))) font-lock-multiline t face (org-block-end-line org-modern-block-keyword) font-lock-fontified t fontified t) 4218 4219 (face org-block-end-line fontified t)) . 7047) (undo-tree-id641 . -4218) (undo-tree-id642 . -17) (undo-tree-id643 . -4218) (undo-tree-id644 . 4201) (undo-tree-id645 . 4039) (undo-tree-id646 . -188) (undo-tree-id647 . -18) (undo-tree-id648 . -1345) (undo-tree-id649 . -1345) (undo-tree-id650 . -1345) (undo-tree-id651 . -1345) (undo-tree-id652 . -1345) (undo-tree-id653 . -1345) (undo-tree-id654 . -1345) (undo-tree-id655 . -1345) (undo-tree-id656 . -1345) (undo-tree-id657 . -1345) (undo-tree-id658 . -1345) (undo-tree-id659 . -1345) (undo-tree-id660 . -1345) (undo-tree-id661 . -1345) (undo-tree-id662 . -1345) (undo-tree-id663 . -1345) (undo-tree-id664 . -1345) (undo-tree-id665 . -1345) (undo-tree-id666 . -1345) (undo-tree-id667 . -1345) (undo-tree-id668 . -1345) (undo-tree-id669 . -1345) (undo-tree-id670 . -1345) (undo-tree-id671 . -1345) (undo-tree-id672 . -1345) (undo-tree-id673 . -1345) (undo-tree-id674 . -1345) (undo-tree-id675 . -1345) (undo-tree-id676 . -1345) (undo-tree-id677 . -1345) (undo-tree-id678 . -1345) (undo-tree-id679 . -1345) (undo-tree-id680 . -1345) (undo-tree-id681 . -1345) (undo-tree-id682 . -1345) (undo-tree-id683 . -1345) (undo-tree-id684 . -1345) (undo-tree-id685 . -1345) (undo-tree-id686 . -1345) (undo-tree-id687 . -1345) (undo-tree-id688 . -18) (undo-tree-id689 . -1345) (undo-tree-id690 . -18) (undo-tree-id691 . -18) (undo-tree-id692 . -18) (undo-tree-id693 . -18) (undo-tree-id694 . -18) (undo-tree-id695 . -18) (undo-tree-id696 . -18) (undo-tree-id697 . -18) (undo-tree-id698 . -18) (undo-tree-id699 . -18) (undo-tree-id700 . -18) (undo-tree-id701 . -17) (undo-tree-id702 . -17) (undo-tree-id703 . -17) (undo-tree-id704 . -17) (undo-tree-id705 . -17) (undo-tree-id706 . -17) (undo-tree-id707 . -17) (undo-tree-id708 . -17) (undo-tree-id709 . -17) (undo-tree-id710 . -17) (undo-tree-id711 . -4219) (undo-tree-id712 . -17) (undo-tree-id713 . -17) (undo-tree-id714 . -17) (undo-tree-id715 . -4218) (undo-tree-id716 . -17) (undo-tree-id717 . -17) (undo-tree-id718 . -4218) (undo-tree-id719 . -17) (undo-tree-id720 . -17) (undo-tree-id721 . -28) (undo-tree-id722 . -17) (undo-tree-id723 . -28) (undo-tree-id724 . -210) (undo-tree-id725 . -28) (undo-tree-id726 . -392) (undo-tree-id727 . -210) (undo-tree-id728 . -574) (undo-tree-id729 . -392) (undo-tree-id730 . -756) (undo-tree-id731 . -574) (undo-tree-id732 . -938) (undo-tree-id733 . -756) (undo-tree-id734 . -1120) (undo-tree-id735 . -938) (undo-tree-id736 . -1302) (undo-tree-id737 . -1120) (undo-tree-id738 . -1484) (undo-tree-id739 . -1302) (undo-tree-id740 . -1666) (undo-tree-id741 . -1484) (undo-tree-id742 . -1848) (undo-tree-id743 . -1666) (undo-tree-id744 . -2030) (undo-tree-id745 . -1848) (undo-tree-id746 . -2212) (undo-tree-id747 . -2030) (undo-tree-id748 . -2394) (undo-tree-id749 . -2212) (undo-tree-id750 . -2576) (undo-tree-id751 . -2394) (undo-tree-id752 . -2758) (undo-tree-id753 . -2576) (undo-tree-id754 . -2940) (undo-tree-id755 . -2758) (undo-tree-id756 . -3122) (undo-tree-id757 . -2940) (undo-tree-id758 . -3304) (undo-tree-id759 . -3122) (undo-tree-id760 . -3486) (undo-tree-id761 . -3304) (undo-tree-id762 . -3668) (undo-tree-id763 . -3486) (undo-tree-id764 . -3850) (undo-tree-id765 . -3668) (undo-tree-id766 . -4032) (undo-tree-id767 . -3850) (undo-tree-id768 . -4218) (undo-tree-id769 . -4032) (undo-tree-id770 . -4218) (undo-tree-id771 . -4218) 11265 (t 25301 30326 962197 15000)) nil (25301 30348 86273 621000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7043) (undo-tree-id639 . -1) (undo-tree-id640 . -1)) nil (25301 30348 86188 909000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7043) (undo-tree-id637 . -1) (undo-tree-id638 . -1)) nil (25301 30348 86180 191000) 0 nil])
([nil nil ((289 . 291) (t 25301 30348 126543 321000)) nil (25301 30374 265042 255000) 0 nil])
([nil nil ((1159 . 1166) (t 25301 30374 310971 756000)) nil (25301 30483 223974 561000) 0 nil])
([nil nil ((3349 . 3365) (#("d" 0 1 (fontified t)) . -3349) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (#("f" 0 1 (fontified t)) . -3350) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (#("o" 0 1 (fontified t)) . -3351) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) 3352 (3346 . 3352) (3325 . 3346) (3323 . 3325) (#("f" 0 1 (fontified t)) . -3323) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#("o" 0 1 (fontified t)) . -3324) (undo-tree-id805 . -1) (#(" " 0 1 (fontified t)) . -3325) (undo-tree-id806 . -1) 3326 (3325 . 3326) (3304 . 3325) (#("y" 0 1 (fontified t)) . -3304) (undo-tree-id807 . -1) (#(" " 0 1 (fontified t)) . -3305) (undo-tree-id808 . -1) (#("w" 0 1 (fontified t)) . -3306) (undo-tree-id809 . -1) 3307 (3301 . 3307) (#("a" 0 1 (fontified t)) . -3301) (undo-tree-id810 . -1) 3302 (3296 . 3302) (3284 . 3296) (#(" " 0 1 (fontified t)) . -3284) (undo-tree-id811 . -1) 3285 (3265 . 3285) (3260 . 3265) (#("p" 0 1 (fontified t)) . -3260) (undo-tree-id812 . -1) 3261 (3260 . 3261) (#("s" 0 1 (fontified t)) . -3197) (undo-tree-id813 . -1) (#("e" 0 1 (fontified t)) . -3198) (undo-tree-id814 . -1) 3199 (3261 . 3262) (3240 . 3261) (#(" " 0 1 (fontified t)) . -3240) (undo-tree-id815 . -1) (#("l" 0 1 (fontified t)) . -3241) (undo-tree-id816 . -1) (#("e" 0 1 (fontified t)) . -3242) (undo-tree-id817 . -1) (#("c" 0 1 (fontified t)) . -3243) (undo-tree-id818 . -1) (#("t" 0 1 (fontified t)) . -3244) (undo-tree-id819 . -1) 3245 (3225 . 3245) (3221 . 3225) (3200 . 3221) (3198 . 3200) (3177 . 3198) (3167 . 3177) (#("d" 0 1 (fontified t)) . -3167) (undo-tree-id820 . -1) 3168 (3154 . 3168) (3133 . 3154) (3121 . 3133) (#("y" 0 1 (fontified t)) . -3121) (undo-tree-id821 . -1) (#("e" 0 1 (fontified t)) . -3122) (undo-tree-id822 . -1) (#("d" 0 1 (fontified t)) . -3123) (undo-tree-id823 . -1) 3124 (3110 . 3124) (3109 . 3110) (3105 . 3109) (3084 . 3105) (#("e" 0 1 (fontified t)) . -3084) (undo-tree-id824 . -1) (#("h" 0 1 (fontified t)) . -3085) (undo-tree-id825 . -1) 3086 (3076 . 3086) (#("i" 0 1 (fontified t)) . -3076) (undo-tree-id826 . -1) 3077 (3074 . 3077) (3069 . 3074) (#("w" 0 1 (fontified t)) . -3069) (undo-tree-id827 . -1) (#("i" 0 1 (fontified t)) . -3070) (undo-tree-id828 . -1) (#("l" 0 1 (fontified t)) . -3071) (undo-tree-id829 . -1) (#("l" 0 1 (fontified t)) . -3072) (undo-tree-id830 . -1) 3073 (3063 . 3073) (#("W" 0 1 (fontified t)) . -3063) (undo-tree-id831 . -1) (#("e" 0 1 (fontified t)) . -3064) (undo-tree-id832 . -1) (#(" " 0 1 (fontified t)) . -3065) (undo-tree-id833 . -1) (#("w" 0 1 (fontified t)) . -3066) (undo-tree-id834 . -1) (#("i" 0 1 (fontified t)) . -3067) (undo-tree-id835 . -1) (#("l" 0 1 (fontified t)) . -3068) (undo-tree-id836 . -1) (#("l" 0 1 (fontified t)) . -3069) (undo-tree-id837 . -1) (#(" " 0 1 (fontified t)) . -3070) (undo-tree-id838 . -1) 3071 (3064 . 3071) (3063 . 3064) (#("T" 0 1 (fontified t)) . -3063) (undo-tree-id839 . -1) (#("h" 0 1 (fontified t)) . -3064) (undo-tree-id840 . -1) (#("e" 0 1 (fontified t)) . -3065) (undo-tree-id841 . -1) (#("n" 0 1 (fontified t)) . -3066) (undo-tree-id842 . -1) (#(" " 0 1 (fontified t)) . -3067) (undo-tree-id843 . -1) (#("w" 0 1 (fontified t)) . -3068) (undo-tree-id844 . -1) (#("e" 0 1 (fontified t)) . -3069) (undo-tree-id845 . -1) (#(" " 0 1 (fontified t)) . -3070) (undo-tree-id846 . -1) 3071 (3063 . 3071) (3061 . 3063) (3058 . 3061) (#("i" 0 1 (fontified t)) . -3058) (undo-tree-id847 . -1) (#("p" 0 1 (fontified t)) . -3059) (undo-tree-id848 . -1) 3060 (3054 . 3060) (#("o" 0 1 (fontified t)) . -3054) (undo-tree-id849 . -1) (#("s" 0 1 (fontified t)) . -3055) (undo-tree-id850 . -1) 3056 (3045 . 3056) (3024 . 3045) (#("u" 0 1 (fontified t)) . -3024) (undo-tree-id851 . -1) (#("i" 0 1 (fontified t)) . -3025) (undo-tree-id852 . -1) 3026 (3023 . 3026) (3002 . 3023) (2991 . 3002) (2982 . 2991) (#("m" 0 1 (fontified t)) . -2982) (undo-tree-id853 . -1) (#("n" 0 1 (fontified t)) . -2983) (undo-tree-id854 . -1) 2984 (2965 . 2984) (2957 . 2965) (#("i" 0 1 (fontified t)) . -2957) (undo-tree-id855 . -1) 2958 (2943 . 2958) (#("I" 0 1 (fontified t)) . -2943) (undo-tree-id856 . -1) (#("n" 0 1 (fontified t)) . -2944) (undo-tree-id857 . -1) (#(" " 0 1 (fontified t)) . -2945) (undo-tree-id858 . -1) (#("t" 0 1 (fontified t)) . -2946) (undo-tree-id859 . -1) (#("h" 0 1 (fontified t)) . -2947) (undo-tree-id860 . -1) (#("e" 0 1 (fontified t)) . -2948) (undo-tree-id861 . -1) (#(" " 0 1 (fontified t)) . -2949) (undo-tree-id862 . -1) 2950 (2943 . 2950) (#(" " 0 1 (fontified t)) . -2943) (undo-tree-id863 . -1) (#(" " 0 1 (fontified t)) . -2944) (undo-tree-id864 . -1) 2945 (2943 . 2945) (#("  " 0 2 (fontified nil)) . 2942) (undo-tree-id865 . -2) (2941 . 2945) (t 25301 30483 260754 260000)) nil (25301 30789 720051 492000) 0 nil])
([nil nil ((3456 . 3461) (#("," 0 1 (fontified t)) . -3456) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (#("o" 0 1 (fontified t)) . -3457) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (#("d" 0 1 (fontified t)) . -3458) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) 3459 (3454 . 3459) (3433 . 3454) (#("y" 0 1 (fontified t)) . -3433) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) 3434 (3433 . 3434) (3422 . 3433) (3401 . 3422) (#("i" 0 1 (fontified t)) . -3401) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#("m" 0 1 (fontified t)) . -3402) (undo-tree-id902 . -1) (#("u" 0 1 (fontified t)) . -3403) (undo-tree-id903 . -1) (#("l" 0 1 (fontified t)) . -3404) (undo-tree-id904 . -1) (#("a" 0 1 (fontified t)) . -3405) (undo-tree-id905 . -1) (#("t" 0 1 (fontified t)) . -3406) (undo-tree-id906 . -1) (#("e" 0 1 (fontified t)) . -3407) (undo-tree-id907 . -1) (#(" " 0 1 (fontified t)) . -3408) (undo-tree-id908 . -1) (#("t" 0 1 (fontified t)) . -3409) (undo-tree-id909 . -1) (#("h" 0 1 (fontified t)) . -3410) (undo-tree-id910 . -1) (#("e" 0 1 (fontified t)) . -3411) (undo-tree-id911 . -1) (#(" " 0 1 (fontified t)) . -3412) (undo-tree-id912 . -1) (#("r" 0 1 (fontified t)) . -3413) (undo-tree-id913 . -1) (#("e" 0 1 (fontified t)) . -3414) (undo-tree-id914 . -1) (#("s" 0 1 (fontified t)) . -3415) (undo-tree-id915 . -1) (#("u" 0 1 (fontified t)) . -3416) (undo-tree-id916 . -1) (#("l" 0 1 (fontified t)) . -3417) (undo-tree-id917 . -1) (#("t" 0 1 (fontified t)) . -3418) (undo-tree-id918 . -1) (#("s" 0 1 (fontified t)) . -3419) (undo-tree-id919 . -1) 3420 (3399 . 3420) (3395 . 3399) (#("e" 0 1 (fontified t)) . -3395) (undo-tree-id920 . -1) 3396 (3390 . 3396) (#("o" 0 1 (fontified t)) . -3390) (undo-tree-id921 . -1) (#("p" 0 1 (fontified t)) . -3391) (undo-tree-id922 . -1) (#("a" 0 1 (fontified t)) . -3392) (undo-tree-id923 . -1) 3393 (3384 . 3393) (#("r" 0 1 (fontified t)) . -3384) (undo-tree-id924 . -1) (#("h" 0 1 (fontified t)) . -3385) (undo-tree-id925 . -1) (#("e" 0 1 (fontified t)) . -3386) (undo-tree-id926 . -1) 3387 (3379 . 3387) (3376 . 3379) (#("o" 0 1 (fontified t)) . -3376) (undo-tree-id927 . -1) 3377 (3364 . 3377) (#("." 0 1 (fontified t)) . -3364) (undo-tree-id928 . -1) 3365 (3364 . 3365) (#("." 0 1 (fontified t)) . -3364) (undo-tree-id929 . -1) 3365 (t 25301 30789 741778 511000)) nil (25301 30863 591144 313000) 0 nil])
([nil nil ((3489 . 3491) (3484 . 3489) (3463 . 3484) (#("I" 0 1 (fontified t)) . -3463) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (#("n" 0 1 (fontified t)) . -3464) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#(" " 0 1 (fontified t)) . -3465) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (#("a" 0 1 (fontified t)) . -3466) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (#("d" 0 1 (fontified t)) . -3467) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (#("d" 0 1 (fontified t)) . -3468) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (#("i" 0 1 (fontified t)) . -3469) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (#("t" 0 1 (fontified t)) . -3470) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (#("i" 0 1 (fontified t)) . -3471) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#("o" 0 1 (fontified t)) . -3472) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#("n" 0 1 (fontified t)) . -3473) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (#(" " 0 1 (fontified t)) . -3474) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (#("t" 0 1 (fontified t)) . -3475) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (#("o" 0 1 (fontified t)) . -3476) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (#(" " 0 1 (fontified t)) . -3477) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (#("t" 0 1 (fontified t)) . -3478) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (#("h" 0 1 (fontified t)) . -3479) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (#("i" 0 1 (fontified t)) . -3480) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (#("s" 0 1 (fontified t)) . -3481) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (#("," 0 1 (fontified t)) . -3482) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) 3483 (t 25301 30863 634993 999000)) nil (25301 30882 809366 949000) 0 nil])
([nil nil ((3686 . 3687) (3665 . 3686) (3657 . 3665) (#("m" 0 1 (fontified t)) . -3657) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (#("d" 0 1 (fontified t)) . -3658) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (#(" " 0 1 (fontified t)) . -3659) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (#("f" 0 1 (fontified t)) . -3660) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) 3661 (3653 . 3661) (3632 . 3653) (#("t" 0 1 (fontified t)) . -3632) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (#(" " 0 1 (fontified t)) . -3633) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) 3634 (3629 . 3634) (#("g" 0 1 (fontified t)) . -3629) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (#("o" 0 1 (fontified t)) . -3630) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (#("t" 0 1 (fontified t)) . -3631) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (#(" " 0 1 (fontified t)) . -3632) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) 3633 (3626 . 3633) (3605 . 3626) (3603 . 3605) (t 25301 30882 851309 951000)) nil (25301 30917 985750 233000) 0 nil])
([nil nil ((4702 . 4703) (#("
" 0 1 (fontified t)) . -4702) (#("
" 0 1 (fontified t)) . -4702) 4701 (t 25301 30918 27888 177000)) nil (25301 31262 303954 116000) 0 nil])
([nil nil ((7959 . 7978) (7950 . 7959) (#("b" 0 1 (fontified t)) . -7950) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (#("e" 0 1 (fontified t)) . -7951) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (#(" " 0 1 (fontified t)) . -7952) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (#("a" 0 1 (fontified t)) . -7953) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (#("b" 0 1 (fontified t)) . -7954) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (#("l" 0 1 (fontified t)) . -7955) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (#("e" 0 1 (fontified t)) . -7956) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) 7957 (7956 . 7957) (#("k" 0 1 (fontified t)) . -7956) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (#("e" 0 1 (fontified t)) . -7957) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) 7958 (7947 . 7958) (#("f" 0 1 (fontified t)) . -7947) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (#("o" 0 1 (fontified t)) . -7948) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (#("r" 0 1 (fontified t)) . -7949) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (#(" " 0 1 (fontified t)) . -7950) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (#("t" 0 1 (fontified t)) . -7951) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (#("h" 0 1 (fontified t)) . -7952) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (#("e" 0 1 (fontified t)) . -7953) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (#(" " 0 1 (fontified t)) . -7954) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (#("n" 0 1 (fontified t)) . -7955) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (#("e" 0 1 (fontified t)) . -7956) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (#("x" 0 1 (fontified t)) . -7957) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (#("t" 0 1 (fontified t)) . -7958) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (#(" " 0 1 (fontified t)) . -7959) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (#("s" 0 1 (fontified t)) . -7960) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (#("t" 0 1 (fontified t)) . -7961) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (#("e" 0 1 (fontified t)) . -7962) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (#("p" 0 1 (fontified t)) . -7963) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) 7964) nil (25301 31262 303931 715000) 0 nil])
([nil nil ((7982 . 7986) (#("q" 0 1 (fontified t)) . -7982) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) 7983 (7982 . 7983) (#("f" 0 1 (fontified t)) . -7982) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . 1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (#("i" 0 1 (fontified t)) . -7983) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (#("l" 0 1 (fontified t)) . -7984) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) 7985 (#("l" 0 1 (fontified t)) . -7985) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (#(" " 0 1 (fontified t)) . -7986) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (#("i" 0 1 (fontified t)) . -7987) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . 1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (#("n" 0 1 (fontified t)) . -7988) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (#(" " 0 1 (fontified t)) . -7989) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (#("t" 0 1 (fontified t)) . -7990) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . 1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (#("h" 0 1 (fontified t)) . -7991) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (#("i" 0 1 (fontified t)) . -7992) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (#("s" 0 1 (fontified t)) . -7993) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (#(" " 0 1 (fontified t)) . -7994) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (#("[" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -7995) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . 1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (#("[" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -7996) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (#("h" 0 1 (htmlize-link (:uri "https:before") help-echo "LINK: https:before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -7997) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . 1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (#("t" 0 1 (htmlize-link (:uri "https:before") help-echo "LINK: https:before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -7998) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (#("t" 0 1 (htmlize-link (:uri "https:before") help-echo "LINK: https:before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -7999) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (#("p" 0 1 (htmlize-link (:uri "https:before") help-echo "LINK: https:before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8000) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (#("s" 0 1 (htmlize-link (:uri "https:before") help-echo "LINK: https:before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8001) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (#(":" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https:before") help-echo "LINK: https:before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8002) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (#("/" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://fobefore") help-echo "LINK: https://fobefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . -8003) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (#("/" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://fobefore") help-echo "LINK: https://fobefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . -8004) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (#("f" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://fobefore") help-echo "LINK: https://fobefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . -8005) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) 8006 (#("o" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://fobefore") help-echo "LINK: https://fobefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8006) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (#("r" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forbefore") help-echo "LINK: https://forbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8007) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (#("m" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://formbefore") help-echo "LINK: https://formbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8008) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (#("s" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://formsbefore") help-echo "LINK: https://formsbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8009) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (#("." 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.before") help-echo "LINK: https://forms.before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8010) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (#("g" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gbefore") help-echo "LINK: https://forms.gbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8011) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (#("l" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.glbefore") help-echo "LINK: https://forms.glbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8012) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (#("e" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.glebefore") help-echo "LINK: https://forms.glebefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8013) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (#("/" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/before") help-echo "LINK: https://forms.gle/before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8014) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (#("b" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bbefore") help-echo "LINK: https://forms.gle/bbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8015) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (#("U" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUbefore") help-echo "LINK: https://forms.gle/bUbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8016) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (#("S" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUSbefore") help-echo "LINK: https://forms.gle/bUSbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8017) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (#("3" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3before") help-echo "LINK: https://forms.gle/bUS3before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8018) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (#("s" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sbefore") help-echo "LINK: https://forms.gle/bUS3sbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8019) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (#("Z" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZbefore") help-echo "LINK: https://forms.gle/bUS3sZbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8020) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (#("Z" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZbefore") help-echo "LINK: https://forms.gle/bUS3sZZbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8021) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (#("Y" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYbefore") help-echo "LINK: https://forms.gle/bUS3sZZYbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8022) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (#("g" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgbefore") help-echo "LINK: https://forms.gle/bUS3sZZYgbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8023) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (#("M" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgMbefore") help-echo "LINK: https://forms.gle/bUS3sZZYgMbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8024) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (#("4" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4before") help-echo "LINK: https://forms.gle/bUS3sZZYgM4before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8025) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (#("y" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4ybefore") help-echo "LINK: https://forms.gle/bUS3sZZYgM4ybefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8026) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) 8027 (#("1" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1before") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8027) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (#("w" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wbefore") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8028) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (#("d" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdbefore") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8029) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (#("J" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJbefore") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJbefore" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8030) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (#("7" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7before") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7before" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8031) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (#("]" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8032) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (#("[" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8033) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (#("g" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8034) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . 1) (#("o" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8035) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (#("o" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8036) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (#("g" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8037) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (#("l" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8038) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (#("e" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8039) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (#(" " 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8040) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (#("f" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8041) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (#("o" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8042) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (#("r" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8043) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (#("m" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8044) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (#("]" 0 1 (htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -8045) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (#("]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "https://forms.gle/bUS3sZZYgM4y1wdJ7") help-echo "LINK: https://forms.gle/bUS3sZZYgM4y1wdJ7" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) . -8046) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . 1) (undo-tree-id4066 . -1) (#(" " 0 1 (fontified t)) . -8047) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) 8048) nil (25301 31262 303278 311000) 0 nil])
([nil nil ((8040 . 8041) (#("1" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -8040) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) 8041 (8034 . 8035) (#("7" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -8034) (undo-tree-id2920 . -1) 8035 (7997 . 8007) (#("p" 0 1 (fontified t)) . -7997) (undo-tree-id2921 . -1) (#("o" 0 1 (fontified t)) . -7998) (undo-tree-id2922 . -1) (#(" " 0 1 (fontified t)) . -7999) (undo-tree-id2923 . -1) 8000 (7988 . 8000) (7986 . 7988)) nil (25301 31262 302511 304000) 0 nil])
([nil nil ((#("  + note that you need to login on google with your TiU credentials when you fill in the form
  + e.g. make sure that your browser is not logged in with your gmail-address
  + if necessary, create an incognito/private window
" 0 2 (fontified t) 2 3 (display "◦" fontified t) 3 96 (fontified t) 96 97 (display "◦" fontified t) 97 174 (fontified t) 174 175 (display "◦" fontified t) 175 225 (fontified t)) . 8044) (undo-tree-id2876 . -224) (undo-tree-id2877 . -56) (undo-tree-id2878 . -224) (undo-tree-id2879 . 168) (undo-tree-id2880 . -57) (undo-tree-id2881 . -57) (undo-tree-id2882 . -57) (undo-tree-id2883 . -57) (undo-tree-id2884 . -57) (undo-tree-id2885 . -57) (undo-tree-id2886 . -57) (undo-tree-id2887 . -57) (undo-tree-id2888 . -57) (undo-tree-id2889 . -57) (undo-tree-id2890 . -57) (undo-tree-id2891 . -57) (undo-tree-id2892 . -56) (undo-tree-id2893 . -56) (undo-tree-id2894 . -56) (undo-tree-id2895 . -56) (undo-tree-id2896 . -56) (undo-tree-id2897 . -56) (undo-tree-id2898 . -56) (undo-tree-id2899 . -56) (undo-tree-id2900 . -56) (undo-tree-id2901 . -56) (undo-tree-id2902 . -225) (undo-tree-id2903 . -56) (undo-tree-id2904 . -56) (undo-tree-id2905 . -56) (undo-tree-id2906 . -224) (undo-tree-id2907 . -56) (undo-tree-id2908 . -56) (undo-tree-id2909 . -224) (undo-tree-id2910 . -56) (undo-tree-id2911 . -56) (undo-tree-id2912 . -150) (undo-tree-id2913 . -56) (undo-tree-id2914 . -224) (undo-tree-id2915 . -150) (undo-tree-id2916 . -224) (undo-tree-id2917 . -224) 8268) nil (25301 31262 302504 585000) 0 nil])
([nil nil ((7859 . 7864) (#("f" 0 1 (fontified t)) . -7859) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (#("o" 0 1 (fontified t)) . -7860) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (#("u" 0 1 (fontified t)) . -7861) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (#("r" 0 1 (fontified t)) . -7862) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) 7863) nil (25301 31262 302475 877000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8681) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . 1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (#("h" 0 1 (fontified t)) . -8682) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (#("e" 0 1 (fontified t)) . -8683) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (#(" " 0 1 (fontified t)) . -8684) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (#("p" 0 1 (fontified t)) . -8685) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . 1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (#("y" 0 1 (fontified t)) . -8686) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (#("t" 0 1 (fontified t)) . -8687) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (#("h" 0 1 (fontified t)) . -8688) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (#("o" 0 1 (fontified t)) . -8689) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (#("n" 0 1 (fontified t)) . -8690) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (#(" " 0 1 (fontified t)) . -8691) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (#("p" 0 1 (fontified t)) . -8692) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . 1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (#("a" 0 1 (fontified t)) . -8693) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (#("r" 0 1 (fontified t)) . -8694) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (#("t" 0 1 (fontified t)) . -8695) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (#(" " 0 1 (fontified t)) . -8696) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (#("o" 0 1 (fontified t)) . -8697) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . 1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (#("f" 0 1 (fontified t)) . -8698) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (#(" " 0 1 (fontified t)) . -8699) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) 8700 (8265 . 8267) (7948 . 7956) (7981 . 7983)) nil (25301 31262 302442 229000) 0 nil])
([nil nil ((9498 . 9513) (#("d" 0 1 (fontified t)) . -9498) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (#("e" 0 1 (fontified t)) . -9499) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (#("t" 0 1 (fontified t)) . -9500) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (#("e" 0 1 (fontified t)) . -9501) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (#("r" 0 1 (fontified t)) . -9502) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (#("m" 0 1 (fontified t)) . -9503) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (#("i" 0 1 (fontified t)) . -9504) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) 9505 (#("n" 0 1 (fontified t)) . -9505) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (#("e" 0 1 (fontified t)) . -9506) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (#(" " 0 1 (fontified t)) . -9507) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) 9508 (9490 . 9508) (#("y" 0 1 (fontified t)) . -9490) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (#("a" 0 1 (fontified t)) . -9491) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) 9492 (9481 . 9492) (#("c" 0 1 (fontified t)) . -9481) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) 9482 (9479 . 9482) (#("r" 0 1 (fontified t)) . -9479) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (#("o" 0 1 (fontified t)) . -9480) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (#(" " 0 1 (fontified t)) . -9481) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) 9482 (9470 . 9482) (#("v" 0 1 (fontified t)) . -9470) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (#("o" 0 1 (fontified t)) . -9471) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) 9472 (9462 . 9472) (#("." 0 1 (fontified t)) . -9462) (undo-tree-id5462 . -1) (#(" " 0 1 (fontified t)) . -9463) (undo-tree-id5463 . -1) 9464 (9462 . 9464) (9441 . 9462) (9420 . 9441) (#("m" 0 1 (fontified t)) . -9420) (undo-tree-id5464 . -1) (#("o" 0 1 (fontified t)) . -9421) (undo-tree-id5465 . -1) (#("r" 0 1 (fontified t)) . -9422) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (#("e" 0 1 (fontified t)) . -9423) (undo-tree-id5468 . -1) (#(" " 0 1 (fontified t)) . -9424) (undo-tree-id5469 . -1) (#("s" 0 1 (fontified t)) . -9425) (undo-tree-id5470 . -1) (#("p" 0 1 (fontified t)) . -9426) (undo-tree-id5471 . -1) (#("e" 0 1 (fontified t)) . -9427) (undo-tree-id5472 . -1) (#("c" 0 1 (fontified t)) . -9428) (undo-tree-id5473 . -1) (#("i" 0 1 (fontified t)) . -9429) (undo-tree-id5474 . -1) (#("f" 0 1 (fontified t)) . -9430) (undo-tree-id5475 . -1) 9431 (9417 . 9431) (#("y" 0 1 (fontified t)) . -9417) (undo-tree-id5476 . -1) (#("s" 0 1 (fontified t)) . -9418) (undo-tree-id5477 . -1) (#("e" 0 1 (fontified t)) . -9419) (undo-tree-id5478 . -1) 9420 (9409 . 9420) (9389 . 9409) (9368 . 9389) (9361 . 9368) (9358 . 9361) (#("i" 0 1 (fontified t)) . -9358) (undo-tree-id5479 . -1) (#("n" 0 1 (fontified t)) . -9359) (undo-tree-id5480 . -1) 9360 (9347 . 9360) (#("v" 0 1 (fontified t)) . -9347) (undo-tree-id5481 . -1) (#("a" 0 1 (fontified t)) . -9348) (undo-tree-id5482 . -1) 9349 (9339 . 9349) (9319 . 9339) (#("  " 0 2 (fontified nil)) . 9319) (undo-tree-id5483 . -2) (9319 . 9322) (#("  " 0 2 (fontified nil)) . 9318) (undo-tree-id5484 . -2) (9320 . 9321) (9318 . 9320) (9318 . 9319) (t 25301 31262 341540 407000)) nil (25301 31438 855190 842000) 0 nil])
([nil nil ((9553 . 9562) (9537 . 9553) (9516 . 9537) (#("s" 0 1 (fontified t)) . -9516) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) 9517 (9513 . 9517) (t 25301 31438 900435 94000)) nil (25301 31466 784644 253000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9642) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) 9643 (9642 . 9643) (9621 . 9642) (#("o" 0 1 (fontified t)) . -9621) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (#("r" 0 1 (fontified t)) . -9622) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) 9623 (9609 . 9623) (9598 . 9609) (#("y" 0 1 (fontified t)) . -9598) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (#("j" 0 1 (fontified t)) . -9599) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (#("a" 0 1 (fontified t)) . -9600) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (#("y" 0 1 (fontified t)) . -9601) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (#(" " 0 1 (fontified t)) . -9602) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (#("w" 0 1 (fontified t)) . -9603) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (#("e" 0 1 (fontified t)) . -9604) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (#(" " 0 1 (fontified t)) . -9605) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) 9606 (9592 . 9606) (9591 . 9592) (#("p" 0 1 (fontified t)) . -9591) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (#("y" 0 1 (fontified t)) . -9592) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (#("t" 0 1 (fontified t)) . -9593) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (#("h" 0 1 (fontified t)) . -9594) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (#("o" 0 1 (fontified t)) . -9595) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (#("n" 0 1 (fontified t)) . -9596) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (#(" " 0 1 (fontified t)) . -9597) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (#("c" 0 1 (fontified t)) . -9598) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (#("o" 0 1 (fontified t)) . -9599) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (#("d" 0 1 (fontified t)) . -9600) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (#("e" 0 1 (fontified t)) . -9601) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (#(" " 0 1 (fontified t)) . -9602) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (#("t" 0 1 (fontified t)) . -9603) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (#("h" 0 1 (fontified t)) . -9604) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) 9605 (9591 . 9605) (9570 . 9591) (#("m" 0 1 (fontified t)) . -9570) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (#("o" 0 1 (fontified t)) . -9571) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (#("t" 0 1 (fontified t)) . -9572) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) 9573 (9571 . 9573) (9562 . 9571) (t 25301 31466 824892 745000)) nil (25301 31505 89686 102000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 9643) (t 25301 31505 133520 523000)) nil (25301 31509 440779 486000) 0 nil])
([nil nil ((9934 . 9938) (#("a" 0 1 (fontified t)) . -9934) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (#("l" 0 1 (fontified t)) . -9935) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (#("l" 0 1 (fontified t)) . -9936) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) 9937 (t 25301 31509 481591 775000)) nil (25301 31629 82584 487000) 0 nil])
([nil nil ((#(", so that they have seen all the python and pandas material" 0 59 (fontified t)) . 9996) (undo-tree-id6379 . 59)) nil (25301 31629 82577 462000) 0 nil])
([nil nil ((10153 . 10173) (10150 . 10153) (#("m" 0 1 (fontified t)) . -10150) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (#("o" 0 1 (fontified t)) . -10151) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (#("t" 0 1 (fontified t)) . -10152) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) 10153 (10147 . 10153) (10126 . 10147) (10105 . 10126) (10091 . 10105) (10070 . 10091) (10052 . 10070) (#("s" 0 1 (fontified t)) . -10052) (undo-tree-id6378 . -1) 10053 (10048 . 10053) (10027 . 10048) (10018 . 10027) (9997 . 10018)) nil (25301 31629 82572 396000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9938) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (#("t" 0 1 (fontified t)) . -9939) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (#("h" 0 1 (fontified t)) . -9940) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (#("e" 0 1 (fontified t)) . -9941) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) 9942 (t 25301 31629 127552 94000)) nil (25301 31651 291268 140000) 0 nil])
([nil nil ((#("We recommend that you finish the Intermediate course before October 10, 2021 and the Pandas course before November 12, 2021.
" 0 125 (fontified t)) . 10239) (t 25301 31651 335915 904000)) nil (25301 31843 543873 551000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10239)) nil (25301 31843 543872 859000) 0 nil])
([nil nil ((10306 . 10308) (10290 . 10306) (#("F" 0 1 (fontified t)) . -10290) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (#("r" 0 1 (fontified t)) . -10291) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (#("i" 0 1 (fontified t)) . -10292) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (#("d" 0 1 (fontified t)) . -10293) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (#("a" 0 1 (fontified t)) . -10294) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (#("y" 0 1 (fontified t)) . -10295) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (#(" " 0 1 (fontified t)) . -10296) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (#("J" 0 1 (fontified t)) . -10297) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (#("a" 0 1 (fontified t)) . -10298) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (#("n" 0 1 (fontified t)) . -10299) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (#("u" 0 1 (fontified t)) . -10300) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (#("a" 0 1 (fontified t)) . -10301) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (#("r" 0 1 (fontified t)) . -10302) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (#("y" 0 1 (fontified t)) . -10303) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (#(" " 0 1 (fontified t)) . -10304) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (#("2" 0 1 (fontified t)) . -10305) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (#("8" 0 1 (fontified t)) . -10306) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (#("t" 0 1 (fontified t)) . -10307) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (#("h" 0 1 (fontified t)) . -10308) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) 10309) nil (25301 31843 543867 721000) 0 nil])
([nil nil ((#("However, if you need your grade before the end of January, you need to submit your final assignment by Friday January 14th, 2022. Let us know by email that your assignment needs to be graded early.
" 0 198 (fontified t)) . 10316) (undo-tree-id6530 . -197) (undo-tree-id6531 . -197) (undo-tree-id6532 . 198) (undo-tree-id6533 . -197) (undo-tree-id6534 . -197) 10513) nil (25301 31843 543839 920000) 0 nil])
([nil nil ((10315 . 10316) (#(" " 0 1 (fontified nil)) . 10315) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (#("
" 0 1 (fontified t)) . -10316) (undo-tree-id6528 . 1) (undo-tree-id6529 . 1) 10315) nil (25301 31843 543836 69000) 0 nil])
([nil nil ((#("If you do the python track in this course, " 0 43 (fontified t)) . 10316) (undo-tree-id6518 . -42) (undo-tree-id6519 . -42) (undo-tree-id6520 . 43) (undo-tree-id6521 . -42) (undo-tree-id6522 . -42) 10358) nil (25301 31843 543830 739000) 0 nil])
([nil nil ((10316 . 10317) (#("y" 0 1 (fontified t)) . 10316) (undo-tree-id6516 . 1) (undo-tree-id6517 . 1)) nil (25301 31843 543826 662000) 0 nil])
([nil nil ((10346 . 10348) (#("e" 0 1 (fontified t)) . -10346) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) 10347) nil (25301 31843 543822 494000) 0 nil])
([nil nil ((10434 . 10437) (#("u" 0 1 (fontified t)) . -10434) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) 10435 (10424 . 10435) (#("F" 0 1 (fontified t)) . -10424) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . 1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (#("r" 0 1 (fontified t)) . -10425) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (#("i" 0 1 (fontified t)) . -10426) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (#("d" 0 1 (fontified t)) . -10427) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (#("a" 0 1 (fontified t)) . -10428) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (#("y" 0 1 (fontified t)) . -10429) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (#(" " 0 1 (fontified t)) . -10430) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (#("A" 0 1 (fontified t)) . -10431) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . 1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (#("u" 0 1 (fontified t)) . -10432) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (#("g" 0 1 (fontified t)) . -10433) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (#("u" 0 1 (fontified t)) . -10434) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (#("s" 0 1 (fontified t)) . -10435) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (#("t" 0 1 (fontified t)) . -10436) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (#(" " 0 1 (fontified t)) . -10437) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (#("2" 0 1 (fontified t)) . -10438) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (#("6" 0 1 (fontified t)) . -10439) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) 10440 (t 25301 31843 587064 697000)) nil (25301 32220 583508 584000) 0 nil])
([nil nil ((10444 . 10445) (#("2" 0 1 (fontified t)) . 10444)) nil (25301 32220 582056 621000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10527) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (#(" " 0 1 (fontified t)) . -10528) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) 10529 (10527 . 10641) (#("  " 0 2 (fontified nil)) . 10526) (undo-tree-id7468 . -2) (undo-tree-id7469 . -2) (undo-tree-id7470 . -2) (undo-tree-id7471 . -2) (10528 . 10529) (#("Further, follow the instructions below on how to submit an assignment on github and fill in the google form etc." 0 112 (fontified t)) . 10528) (10526 . 10640) (#(" " 0 1 (fontified nil)) . 10525) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (10526 . 10527) (#("Further, follow the instructions below on how to submit an assignment on github and fill in the google form etc." 0 112 (fontified t)) . 10526) (10376 . 10378) (#("
" 0 1 (fontified t)) . -10376) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) 10377 (10239 . 10241) (t 25301 32220 629237 900000)) nil (25301 32359 118544 740000) 0 nil])
([nil nil ((#("Further, " 0 1 (fontified t) 1 9 (fontified t)) . 10527) (undo-tree-id7415 . -8) (undo-tree-id7416 . -8) (undo-tree-id7417 . 9) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -9) (undo-tree-id7425 . -8) (undo-tree-id7426 . -8) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -2) (undo-tree-id7430 . -1) (undo-tree-id7431 . -2) (undo-tree-id7432 . -3) (undo-tree-id7433 . -2) (undo-tree-id7434 . -3) (undo-tree-id7435 . -4) (undo-tree-id7436 . -3) (undo-tree-id7437 . -4) (undo-tree-id7438 . -5) (undo-tree-id7439 . -4) (undo-tree-id7440 . -5) (undo-tree-id7441 . -6) (undo-tree-id7442 . -5) (undo-tree-id7443 . -6) (undo-tree-id7444 . -7) (undo-tree-id7445 . -6) (undo-tree-id7446 . -7) (undo-tree-id7447 . -8) (undo-tree-id7448 . -7) (undo-tree-id7449 . -8) (undo-tree-id7450 . -9) (undo-tree-id7451 . -8) (undo-tree-id7452 . -9) (undo-tree-id7453 . -8) (undo-tree-id7454 . -9) (undo-tree-id7455 . -8) (undo-tree-id7456 . -8) 10535) nil (25301 32359 118511 494000) 0 nil])
([nil nil ((10527 . 10528) (#("f" 0 1 (fontified t)) . 10527) (undo-tree-id7413 . 1) (undo-tree-id7414 . 1)) nil (25301 32359 118291 274000) 0 nil])
([nil nil ((10801 . 10802) (#(")" 0 1 (fontified nil)) . -10800) (10800 . 10801) (#(")" 0 1 (fontified nil)) . -10800) (10800 . 10801) (10785 . 10800) (#("t" 0 1 (fontified t)) . -10785) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (#("h" 0 1 (fontified t)) . -10786) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (#("e" 0 1 (fontified t)) . -10787) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) 10788 (10787 . 10788) (10766 . 10787) (10761 . 10766) (10745 . 10761) (10740 . 10746) (10720 . 10740) (10699 . 10720) (10698 . 10699) (10677 . 10698) (10655 . 10659) (10656 . 10673) (10654 . 10656) (#("r" 0 1 (fontified t)) . -10654) (undo-tree-id7401 . -1) (#(" " 0 1 (fontified t)) . -10655) (undo-tree-id7402 . -1) (#("s" 0 1 (fontified t)) . -10656) (undo-tree-id7403 . -1) (#("u" 0 1 (fontified t)) . -10657) (undo-tree-id7404 . -1) (#("b" 0 1 (fontified t)) . -10658) (undo-tree-id7405 . -1) (#("m" 0 1 (fontified t)) . -10659) (undo-tree-id7406 . -1) (#("i" 0 1 (fontified t)) . -10660) (undo-tree-id7407 . -1) (#("t" 0 1 (fontified t)) . -10661) (undo-tree-id7408 . -1) (#("t" 0 1 (fontified t)) . -10662) (undo-tree-id7409 . -1) (#("i" 0 1 (fontified t)) . -10663) (undo-tree-id7410 . -1) (#("n" 0 1 (fontified t)) . -10664) (undo-tree-id7411 . -1) (#("g" 0 1 (fontified t)) . -10665) (undo-tree-id7412 . -1) 10666 (10646 . 10666) (10641 . 10646) (10632 . 10641) (10630 . 10632)) nil (25301 32359 118283 573000) 0 nil])
([nil nil ((12316 . 12321) (t 25301 32359 159505 545000)) nil (25301 32536 777715 647000) 0 nil])
([nil nil ((15737 . 15749) (#("9" 0 1 (fontified t)) . -15737) (undo-tree-id7667 . -1) (#("f" 0 1 (fontified t)) . -15738) (undo-tree-id7668 . -1) 15739 (15732 . 15739) (15725 . 15732) (#("c" 0 1 (fontified t)) . -15725) (undo-tree-id7669 . -1) (#("h" 0 1 (fontified t)) . -15726) (undo-tree-id7670 . -1) (#("a" 0 1 (fontified t)) . -15727) (undo-tree-id7671 . -1) 15728 (15719 . 15728) (#("p" 0 1 (fontified t)) . -15719) (undo-tree-id7672 . -1) (#(" " 0 1 (fontified t)) . -15720) (undo-tree-id7673 . -1) (#("t" 0 1 (fontified t)) . -15721) (undo-tree-id7674 . -1) 15722 (15714 . 15722) (#("e" 0 1 (fontified t)) . -15714) (undo-tree-id7675 . -1) 15715 (15713 . 15715) (15707 . 15713) (15686 . 15707) (15665 . 15686) (15649 . 15665) (15628 . 15649) (15612 . 15628) (#("r" 0 1 (fontified t)) . -15612) (undo-tree-id7676 . -1) (#("t" 0 1 (fontified t)) . -15613) (undo-tree-id7677 . -1) 15614 (15612 . 15614) (15591 . 15612) (15587 . 15589) 15589 (15453 . 15589) (#("+ 
+ Extend the paper's model (a bit) using the fact that you will simulate the model and do not need to provide an analytical solution." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 30 (fontified nil) 30 36 (fontified nil) 36 136 (fontified nil)) . 15453) (undo-tree-id7678 . -136) (15453 . 15456) 15586 (15585 . 15586) (15575 . 15585) (#(";" 0 1 (fontified t)) . -15575) (undo-tree-id7679 . -1) (#("l" 0 1 (fontified t)) . -15576) (undo-tree-id7680 . -1) 15577 (15564 . 15577) (#(" " 0 1 (fontified t)) . -15564) (undo-tree-id7681 . -1) 15565 (15550 . 15565) (15529 . 15550) (15508 . 15529) (15501 . 15508) (15487 . 15501) (#(")" 0 1 (fontified nil)) . -15486) (15486 . 15487) (#(")" 0 1 (fontified nil)) . -15486) (15481 . 15487) (15480 . 15482) (15474 . 15480) (#("," 0 1 (fontified t)) . -15474) (undo-tree-id7682 . -1) (#("p" 0 1 (fontified t)) . -15475) (undo-tree-id7683 . -1) (#("d" 0 1 (fontified t)) . -15476) (undo-tree-id7684 . -1) 15477 (15472 . 15477) (15471 . 15472) (15455 . 15471) (15351 . 15455) (#("+ 
+ Then formulate a clear and transparent *question* that cannot be immediately answered by the paper." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 44 (fontified nil) 44 45 (invisible t org-emphasis t font-lock-multiline t fontified nil) 45 53 (org-emphasis t font-lock-multiline t face (bold) fontified nil) 53 54 (invisible t org-emphasis t font-lock-multiline t fontified nil) 54 104 (fontified nil)) . 15351) (undo-tree-id7685 . -5) (undo-tree-id7686 . -104) (15351 . 15354) 15452 (15451 . 15452) (15439 . 15451) (15418 . 15439) (15402 . 15418) (#("." 0 1 (fontified t)) . -15402) (undo-tree-id7687 . -1) 15403 (15357 . 15367) (15353 . 15357) (#("S" 0 1 (fontified t)) . -15353) (undo-tree-id7688 . -1) (#("t" 0 1 (fontified t)) . -15354) (undo-tree-id7689 . -1) (#("a" 0 1 (fontified t)) . -15355) (undo-tree-id7690 . -1) (#("r" 0 1 (fontified t)) . -15356) (undo-tree-id7691 . -1) (#("t" 0 1 (fontified t)) . -15357) (undo-tree-id7692 . -1) (#(" " 0 1 (fontified t)) . -15358) (undo-tree-id7693 . -1) (#("w" 0 1 (fontified t)) . -15359) (undo-tree-id7694 . -1) (#("i" 0 1 (fontified t)) . -15360) (undo-tree-id7695 . -1) (#("t" 0 1 (fontified t)) . -15361) (undo-tree-id7696 . -1) (#("h" 0 1 (fontified t)) . -15362) (undo-tree-id7697 . -1) 15363 (15349 . 15350) (#(" " 0 1 (fontified t)) . -15349) (undo-tree-id7698 . -1) 15350 (15349 . 15350) (15332 . 15349) (#("g" 0 1 (fontified t)) . -15332) (undo-tree-id7699 . -1) (#("o" 0 1 (fontified t)) . -15333) (undo-tree-id7700 . -1) 15334 (15317 . 15334) (#("t" 0 1 (fontified t)) . -15317) (undo-tree-id7701 . -1) 15318 (15309 . 15318) (15306 . 15309) (#(" " 0 1 (fontified t)) . -15306) (undo-tree-id7702 . -1) 15307 (15299 . 15307) (#("u" 0 1 (fontified t)) . -15299) (undo-tree-id7703 . -1) (#("y" 0 1 (fontified t)) . -15300) (undo-tree-id7704 . -1) 15301 (15297 . 15301) (15295 . 15297) (#("y" 0 1 (fontified t)) . -15295) (undo-tree-id7705 . -1) 15296 (15281 . 15296) (15279 . 15282) 15281 (t 25301 32536 826413 618000)) nil (25301 34121 554053 617000) 0 nil])
([nil nil ((#("There are a lot of interesting economic questions for which you do not need programming to find the answer. However, as an important part of this course is programming in python, we want to see some programming. So " 0 215 (fontified t)) . 15752) (undo-tree-id7662 . -214) (undo-tree-id7663 . -214) (undo-tree-id7664 . 215) (undo-tree-id7665 . -214) (undo-tree-id7666 . -214) 15966) nil (25301 34121 553734 158000) 0 nil])
([nil nil ((15407 . 15420) (15386 . 15407) (15384 . 15386) (#("e" 0 1 (fontified t)) . -15384) (undo-tree-id7652 . -1) (#(" " 0 1 (fontified t)) . -15385) (undo-tree-id7653 . -1) 15386 (15369 . 15386) (15364 . 15369) (#("x" 0 1 (fontified t)) . -15364) (undo-tree-id7654 . -1) (#("c" 0 1 (fontified t)) . -15365) (undo-tree-id7655 . -1) 15366 (15363 . 15366) (#("w" 0 1 (fontified t)) . -15363) (undo-tree-id7656 . -1) (#("s" 0 1 (fontified t)) . -15364) (undo-tree-id7657 . -1) (#("x" 0 1 (fontified t)) . -15365) (undo-tree-id7658 . -1) 15366 (15353 . 15366) (#("b" 0 1 (fontified t)) . -15353) (undo-tree-id7659 . -1) (#("r" 0 1 (fontified t)) . -15354) (undo-tree-id7660 . -1) 15355 (15353 . 15355) (15279 . 15353) (#("+ 
+ Start from a theory paper; e.g. one you have read for another course." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 74 (fontified nil)) . 15279) (undo-tree-id7661 . -74) (15279 . 15282) 15350 (15777 . 15787) (15754 . 15760) (15750 . 15752)) nil (25301 34121 553729 12000) 0 nil])
([nil nil ((#("+ Explain the *method* or data that you use to answer the question.
" 0 1 (display "◦" fontified t) 1 14 (fontified t) 14 15 (invisible t org-emphasis t font-lock-multiline t fontified t) 15 21 (org-emphasis t font-lock-multiline t face (bold) fontified t) 21 22 (invisible t org-emphasis t font-lock-multiline t fontified t) 22 68 (fontified t)) . 15961) (undo-tree-id7650 . 58) (undo-tree-id7651 . -9) 15970) nil (25301 34121 553719 959000) 0 nil])
([nil nil ((16106 . 16122) (16104 . 16107)) nil (25301 34121 553717 977000) 0 nil])
([nil nil ((16115 . 16124) (16113 . 16115)) nil (25301 34121 553717 176000) 0 nil])
([nil nil ((#("+ Include the data in your github respository so that we can replicate your analysis.
" 0 1 (display "◦" fontified t) 1 86 (fontified t)) . 16288) (undo-tree-id7649 . 86)) nil (25301 34121 553716 293000) 0 nil])
([nil nil ((16168 . 16179) (16169 . 16170) (#(")" 0 1 (fontified nil)) . -16168) (16168 . 16169) (#(")" 0 1 (fontified nil)) . -16168) (16168 . 16169) (16167 . 16169) (16344 . 16346) (16139 . 16147) (#("G" 0 1 (fontified t)) . -16139) (undo-tree-id7626 . -1) (#("i" 0 1 (fontified t)) . -16140) (undo-tree-id7627 . -1) (#("v" 0 1 (fontified t)) . -16141) (undo-tree-id7628 . -1) (#("e" 0 1 (fontified t)) . -16142) (undo-tree-id7629 . -1) 16143 (16163 . 16176) (16148 . 16153) (#("o" 0 1 (fontified t)) . -16158) (undo-tree-id7630 . -1) (#("f" 0 1 (fontified t)) . -16159) (undo-tree-id7631 . -1) (#(" " 0 1 (fontified t)) . -16160) (undo-tree-id7632 . -1) (#("t" 0 1 (fontified t)) . -16161) (undo-tree-id7633 . -1) (#("r" 0 1 (fontified t)) . -16162) (undo-tree-id7634 . -1) (#("h" 0 1 (fontified t)) . -16163) (undo-tree-id7635 . -1) (#("e" 0 1 (fontified t)) . -16164) (undo-tree-id7636 . -1) 16165 (16145 . 16165) (#("g" 0 1 (fontified t)) . -16145) (undo-tree-id7637 . -1) (#("h" 0 1 (fontified t)) . -16146) (undo-tree-id7638 . -1) (#("e" 0 1 (fontified t)) . -16147) (undo-tree-id7639 . -1) (#(" " 0 1 (fontified t)) . -16148) (undo-tree-id7640 . -1) 16149 (16137 . 16149) (16132 . 16137) (16111 . 16132) (#("k" 0 1 (fontified t)) . -16111) (undo-tree-id7641 . -1) (#("a" 0 1 (fontified t)) . -16112) (undo-tree-id7642 . -1) (#("i" 0 1 (fontified t)) . -16113) (undo-tree-id7643 . -1) (#("n" 0 1 (fontified t)) . -16114) (undo-tree-id7644 . -1) (#(" " 0 1 (fontified t)) . -16115) (undo-tree-id7645 . -1) 16116 (16112 . 16116) (16091 . 16112) (#(" " 0 1 (fontified t)) . -16091) (undo-tree-id7646 . -1) 16092 (16080 . 16092) (16011 . 16080) (#("+ 
+ Mention the main *assumptions* that you need to get this answer." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 22 (fontified nil) 22 23 (invisible t org-emphasis t font-lock-multiline t fontified nil) 23 34 (org-emphasis t font-lock-multiline t face (bold) fontified nil) 34 35 (invisible t org-emphasis t font-lock-multiline t fontified nil) 35 69 (fontified nil)) . 16011) (undo-tree-id7647 . -69) (undo-tree-id7648 . -69) (16011 . 16014) 16077) nil (25301 34121 553710 998000) 0 nil])
([nil nil ((#("+ If you use equations, use latex to make them easy to read.
" 0 1 (display "◦" fontified t) 1 61 (fontified t)) . 16407) (undo-tree-id7624 . 17) (undo-tree-id7625 . -43) 16450) nil (25301 34121 553691 576000) 0 nil])
([nil nil ((16636 . 16643) (16637 . 16647) (16625 . 16637) (16604 . 16625) (#("v" 0 1 (fontified t)) . -16604) (undo-tree-id7578 . -1) (#("a" 0 1 (fontified t)) . -16605) (undo-tree-id7579 . -1) (#("l" 0 1 (fontified t)) . -16606) (undo-tree-id7580 . -1) 16607 (16604 . 16607) (16595 . 16604) (#("a" 0 1 (fontified t)) . -16595) (undo-tree-id7581 . -1) 16596 (16590 . 16596) (#(" " 0 1 (fontified t)) . -16590) (undo-tree-id7582 . -1) 16591 (#("(" 0 1 (fontified nil)) . -16591) (undo-tree-id7583 . -1) (#(")" 0 1 (fontified t)) . 16592) (#("s" 0 1 (fontified t)) . -16592) (undo-tree-id7584 . -1) (#("a" 0 1 (fontified t)) . -16593) (undo-tree-id7585 . -1) (#("v" 0 1 (fontified t)) . -16594) (undo-tree-id7586 . -1) (#("e" 0 1 (fontified t)) . -16595) (undo-tree-id7587 . -1) (#(" " 0 1 (fontified t)) . -16596) (undo-tree-id7588 . -1) (#("t" 0 1 (fontified t)) . -16597) (undo-tree-id7589 . -1) (#("h" 0 1 (fontified t)) . -16598) (undo-tree-id7590 . -1) (#("e" 0 1 (fontified t)) . -16599) (undo-tree-id7591 . -1) (#(" " 0 1 (fontified t)) . -16600) (undo-tree-id7592 . -1) (#("o" 0 1 (fontified t)) . -16601) (undo-tree-id7593 . -1) (#("u" 0 1 (fontified t)) . -16602) (undo-tree-id7594 . -1) (#("t" 0 1 (fontified t)) . -16603) (undo-tree-id7595 . -1) 16604 (16592 . 16604) (#("e" 0 1 (fontified t)) . -16592) (undo-tree-id7596 . -1) (#("." 0 1 (fontified t)) . -16593) (undo-tree-id7597 . -1) (#("g" 0 1 (fontified t)) . -16594) (undo-tree-id7598 . -1) (#("." 0 1 (fontified t)) . -16595) (undo-tree-id7599 . -1) (#(" " 0 1 (fontified t)) . -16596) (undo-tree-id7600 . -1) (#("t" 0 1 (fontified t)) . -16597) (undo-tree-id7601 . -1) 16598 (16597 . 16598) (16592 . 16597) (16576 . 16593) (#("o" 0 1 (fontified t)) . -16576) (undo-tree-id7602 . -1) (#("f" 0 1 (fontified t)) . -16577) (undo-tree-id7603 . -1) (#("r" 0 1 (fontified t)) . -16578) (undo-tree-id7604 . -1) (#(" " 0 1 (fontified t)) . -16579) (undo-tree-id7605 . -1) 16580 (16578 . 16580) (16565 . 16578) (#("t" 0 1 (fontified t)) . -16565) (undo-tree-id7606 . -1) (#("e" 0 1 (fontified t)) . -16566) (undo-tree-id7607 . -1) (#("n" 0 1 (fontified t)) . -16567) (undo-tree-id7608 . -1) (#("t" 0 1 (fontified t)) . -16568) (undo-tree-id7609 . -1) (#(" " 0 1 (fontified t)) . -16569) (undo-tree-id7610 . -1) 16570 (16551 . 16570) (#("n" 0 1 (fontified t)) . -16551) (undo-tree-id7611 . -1) (#("y" 0 1 (fontified t)) . -16552) (undo-tree-id7612 . -1) 16553 (16546 . 16553) (16532 . 16546) (16488 . 16532) (#("+ 
+ Solve for the equilibrium using Python." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 44 (fontified nil)) . 16488) (undo-tree-id7613 . -44) (16488 . 16491) 16529 (16528 . 16529) (#(" " 0 1 (fontified t)) . -16528) (undo-tree-id7614 . -1) 16529 (16522 . 16529) (16511 . 16522) (16490 . 16511) (16406 . 16490) (#("+ 
+ Explain how you move from the analytical equations of the paper to Python code." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 84 (fontified nil)) . 16406) (undo-tree-id7615 . -84) (16406 . 16409) 16487 (16486 . 16487) (16464 . 16471) (16458 . 16464) (16400 . 16405) (#("," 0 1 (fontified t)) . -16400) (undo-tree-id7616 . -1) 16401 (16394 . 16401) (16381 . 16394) (#(")" 0 1 (fontified nil)) . -16380) (16380 . 16381) (#(")" 0 1 (fontified nil)) . -16380) (16380 . 16381) (#(" " 0 1 (fontified t)) . -16380) (undo-tree-id7617 . -1) 16381 (16375 . 16381) (16360 . 16376) (#("E" 0 1 (fontified t)) . -16360) (undo-tree-id7618 . -1) (#("x" 0 1 (fontified t)) . -16361) (undo-tree-id7619 . -1) 16362 (16360 . 16362) (16195 . 16360) (#("+ 
+ When you use information (e.g. a literature reference), create a link to this information. The reader then only needs to click to find the relevant information." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 30 (fontified nil) 30 59 (fontified nil) 59 165 (fontified nil)) . 16195) (undo-tree-id7620 . -165) (16195 . 16198) 16357 (16414 . 16425) (#("p" 0 1 (fontified t)) . -16414) (undo-tree-id7621 . -1) 16415 (16406 . 16415) (16385 . 16406) (16381 . 16385) (16360 . 16381) (16195 . 16360) (#("+ 
+ When you use information (e.g. a literature reference), create a link to this information. The reader then only needs to click to find the relevant information." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 30 (fontified nil) 30 59 (fontified nil) 59 165 (fontified nil)) . 16195) (undo-tree-id7622 . -165) (undo-tree-id7623 . -165) (16195 . 16198) 16357) nil (25301 34121 553681 578000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16655) (undo-tree-id7577 . 1)) nil (25301 34121 553639 210000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16655) (undo-tree-id7576 . 1)) nil (25301 34121 553636 246000) 0 nil])
([nil nil ((#("If you use data," 0 16 (fontified t)) . 16657) (undo-tree-id7573 . -15) (undo-tree-id7574 . -15) (undo-tree-id7575 . -15)) nil (25301 34121 553635 11000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16657) (undo-tree-id7572 . 1)) nil (25301 34121 553632 749000) 0 nil])
([nil nil ((16657 . 16658) (#("p" 0 1 (fontified t)) . 16657) (undo-tree-id7571 . 1)) nil (25301 34121 553631 278000) 0 nil])
([nil nil ((16695 . 16699) (#("k" 0 1 (fontified t)) . -16695) (undo-tree-id7550 . -1) (#("l" 0 1 (fontified t)) . -16696) (undo-tree-id7551 . -1) (#("t" 0 1 (fontified t)) . -16697) (undo-tree-id7552 . -1) 16698 (16693 . 16698) (16675 . 16693) (#("t" 0 1 (fontified t)) . -16675) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (#("h" 0 1 (fontified t)) . -16676) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (#("e" 0 1 (fontified t)) . -16677) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (#(" " 0 1 (fontified t)) . -16678) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (#("d" 0 1 (fontified t)) . -16679) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (#("a" 0 1 (fontified t)) . -16680) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (#("t" 0 1 (fontified t)) . -16681) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (#("a" 0 1 (fontified t)) . -16682) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (#("." 0 1 (fontified t)) . -16683) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) 16684) nil (25301 34121 553627 932000) 0 nil])
([nil nil ((#("+ Present graphs of your simulation results.
" 0 1 (display "◦" fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 45 (fontified t)) . 16655) (undo-tree-id7543 . -20) (undo-tree-id7544 . -2) (undo-tree-id7545 . -2) (undo-tree-id7546 . 1) (undo-tree-id7547 . -2) (undo-tree-id7548 . 42) (undo-tree-id7549 . -43) 16698) nil (25301 34121 553611 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16770 . 16771) (#("
" 0 1 (fontified nil)) . -16815) (16770 . 16816) 16655) nil (25301 34121 553605 788000) 0 nil])
([nil nil ((16954 . 16955) (#(")" 0 1 (fontified nil)) . -16953) (16953 . 16954) (#(")" 0 1 (font-lock-multiline t face (org-latex-and-related) fontified nil)) . -16953) (16953 . 16954) (16934 . 16953) (16932 . 16935) (#("." 0 1 (fontified t)) . -16932) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) 16933 (16926 . 16933) (16919 . 16926) (16898 . 16919) (#("x" 0 1 (fontified t)) . -16898) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (#("o" 0 1 (fontified t)) . -16899) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (#("n" 0 1 (fontified t)) . -16900) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) 16901 (16886 . 16901) (16882 . 16886) (#("m" 0 1 (fontified t)) . -16882) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (#("d" 0 1 (fontified t)) . -16883) (undo-tree-id7539 . -1) 16884 (16879 . 16884) (#(")" 0 1 (fontified nil)) . -16878) (16878 . 16879) (#(")" 0 1 (font-lock-multiline t face (org-latex-and-related) fontified nil)) . -16878) (16875 . 16879) (16854 . 16875) (16849 . 16854) (16839 . 16850) (16818 . 16839) (16771 . 16818) (#("+ 
+ Present graphs of your simulation results." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (display "◦" fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 47 (fontified nil)) . 16771) (undo-tree-id7540 . -47) (undo-tree-id7541 . -47) (undo-tree-id7542 . -47) (16771 . 16774) 16815) nil (25301 34121 553600 304000) 0 nil])
([nil nil ((#("+ Programming is great to do *sensitivity analysis*, just do the same you did before, but now with different parameter values.
" 0 1 (display "◦" fontified t) 1 29 (fontified t) 29 30 (invisible t org-emphasis t font-lock-multiline t fontified t) 30 35 (org-emphasis t font-lock-multiline t face (bold) fontified t) 35 50 (org-emphasis t font-lock-multiline t face (bold) fontified t) 50 51 (invisible t org-emphasis t font-lock-multiline t fontified t) 51 127 (fontified t)) . 17010) (undo-tree-id7706 . -3) (undo-tree-id7707 . -3) (undo-tree-id7708 . -3) (undo-tree-id7709 . -3) (undo-tree-id7710 . -3) (undo-tree-id7711 . -3) (undo-tree-id7712 . -3) (undo-tree-id7713 . -3) (undo-tree-id7714 . -3) (undo-tree-id7715 . -3) (undo-tree-id7716 . -3) (undo-tree-id7717 . -3) (undo-tree-id7718 . -3) (undo-tree-id7719 . -3) (undo-tree-id7720 . -3) (undo-tree-id7721 . -3) (undo-tree-id7722 . -3) (undo-tree-id7723 . -3) (undo-tree-id7724 . -3) 17013 (t 25301 34121 593340 297000)) nil (25301 34154 827496 519000) 0 nil])
([nil nil ((#(" and elements on which you need additional information" 0 54 (fontified t)) . 17054) (t 25301 34154 869894 473000)) nil (25301 34663 364601 859000) 0 nil])
([nil nil ((17048 . 17060) (#("w" 0 1 (fontified t)) . -17048) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (#("h" 0 1 (fontified t)) . -17049) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (#("a" 0 1 (fontified t)) . -17050) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (#("t" 0 1 (fontified t)) . -17051) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (#(" " 0 1 (fontified t)) . -17052) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (#("y" 0 1 (fontified t)) . -17053) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (#("o" 0 1 (fontified t)) . -17054) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (#("u" 0 1 (fontified t)) . -17055) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (#(" " 0 1 (fontified t)) . -17056) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (#("f" 0 1 (fontified t)) . -17057) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (#("i" 0 1 (fontified t)) . -17058) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (#("n" 0 1 (fontified t)) . -17059) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) 17060 (#("d" 0 1 (fontified t)) . -17060) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) 17061 (17012 . 17031) (#("I" 0 1 (fontified t)) . -17012) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) 17013 (#("n" 0 1 (fontified t)) . -17013) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (#("c" 0 1 (fontified t)) . -17014) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (#("l" 0 1 (fontified t)) . -17015) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (#("u" 0 1 (fontified t)) . -17016) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (#("d" 0 1 (fontified t)) . -17017) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (#("e" 0 1 (fontified t)) . -17018) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (#(" " 0 1 (fontified t)) . -17019) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (#("s" 0 1 (fontified t)) . -17020) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (#("o" 0 1 (fontified t)) . -17021) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (#("m" 0 1 (fontified t)) . -17022) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (#("e" 0 1 (fontified t)) . -17023) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) 17024) nil (25301 34663 364585 17000) 0 nil])
([nil nil ((#("+ use *common sense*: it is not always necessary to have a full blown economic model, but we do expect you to think!
  + in the past we had students looking at the effect of age on income in sports; \"theory\" suggests that this relation is hump-shaped: 5 year olds and 80 year olds tend not to earn a lot of money as elite athletes; the students presented a scatter plot with a clear hump-shape; then they wrote \"now we do a linear regression\". For each step that you program, ask yourself why this step makes sense and then explain this in your notebook.
" 0 1 (display "◦" fontified t) 1 6 (fontified t) 6 7 (invisible t org-emphasis t font-lock-multiline t fontified t) 7 19 (org-emphasis t font-lock-multiline t face (bold) fontified t) 19 20 (invisible t org-emphasis t font-lock-multiline t fontified t) 20 119 (fontified t) 119 120 (display "◦" fontified t) 120 555 (fontified t)) . 17286) (undo-tree-id8287 . -515) (undo-tree-id8288 . -515) (undo-tree-id8289 . -555) (undo-tree-id8290 . -515) (undo-tree-id8291 . -515) (undo-tree-id8292 . -117) (undo-tree-id8293 . -316) (undo-tree-id8294 . -117) (undo-tree-id8295 . -316) (undo-tree-id8296 . -515) (undo-tree-id8297 . -316) (undo-tree-id8298 . -515) (undo-tree-id8299 . -515) 17801 (t 25301 34663 406343 992000)) nil (25301 34707 689740 778000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -17063) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . 1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (#("w" 0 1 (fontified t)) . -17064) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (#("o" 0 1 (fontified t)) . -17065) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (#(" " 0 1 (fontified t)) . -17066) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) 17067) nil (25301 34707 689727 798000) 0 nil])
([nil nil ((17063 . 17064) (#("r" 0 1 (fontified t)) . 17063) (undo-tree-id8183 . 1)) nil (25301 34707 689657 246000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 17069)) nil (25301 34707 689655 465000) 0 nil])
([nil nil ((17279 . 17280) (#(";" 0 1 (fontified t)) . -17279) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) 17280) nil (25301 34707 689651 876000) 0 nil])
([nil nil ((17366 . 17378) (#("a" 0 1 (fontified t)) . -17366) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (#(" " 0 1 (fontified t)) . -17367) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) 17368 (17356 . 17368) (#("b" 0 1 (fontified t)) . -17356) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (#("e" 0 1 (fontified t)) . -17357) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (#(" " 0 1 (fontified t)) . -17358) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (#("a" 0 1 (fontified t)) . -17359) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (#(" " 0 1 (fontified t)) . -17360) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (#("n" 0 1 (fontified t)) . -17361) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (#("e" 0 1 (fontified t)) . -17362) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (#("w" 0 1 (fontified t)) . -17363) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (#(" " 0 1 (fontified t)) . -17364) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (#("p" 0 1 (fontified t)) . -17365) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (#("r" 0 1 (fontified t)) . -17366) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (#("o" 0 1 (fontified t)) . -17367) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (#("j" 0 1 (fontified t)) . -17368) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (#("e" 0 1 (fontified t)) . -17369) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (#("c" 0 1 (fontified t)) . -17370) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (#("t" 0 1 (fontified t)) . -17371) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) 17372 (t 25301 34707 735079 354000)) nil (25301 34765 588654 503000) 0 nil])
([nil nil ((#("The easiest way to achieve this is to choose a new research question; if you are using data, choose a new data set." 0 1 (fontified t) 1 115 (fontified t)) . 17421) (undo-tree-id9245 . -114) (undo-tree-id9246 . -114) (undo-tree-id9247 . -114) (undo-tree-id9248 . -114) 17535) nil (25301 34908 413483 279000) 0 nil] [nil nil ((#("al assignment needs to start from a new paper compared to the one you handed in before. T" 0 89 (fontified t)) . 17333) (undo-tree-id8300 . -88) (undo-tree-id8301 . -88) (undo-tree-id8302 . 44) (undo-tree-id8303 . -23) (undo-tree-id8304 . -23) (undo-tree-id8305 . -23) (undo-tree-id8306 . -23) (undo-tree-id8307 . -23) (undo-tree-id8308 . -23) (undo-tree-id8309 . -23) (undo-tree-id8310 . -23) (undo-tree-id8311 . -23) (undo-tree-id8312 . -23) (undo-tree-id8313 . -23) (undo-tree-id8314 . -23) (undo-tree-id8315 . -23) (undo-tree-id8316 . -23) (undo-tree-id8317 . -23) (undo-tree-id8318 . -23) (undo-tree-id8319 . -23) (undo-tree-id8320 . -23) (undo-tree-id8321 . -23) (undo-tree-id8322 . -23) (undo-tree-id8323 . -23) (undo-tree-id8324 . -23) (undo-tree-id8325 . -23) (undo-tree-id8326 . -23) (undo-tree-id8327 . -23) (undo-tree-id8328 . -23) (undo-tree-id8329 . -23) (undo-tree-id8330 . -23) (undo-tree-id8331 . -23) (undo-tree-id8332 . -23) (undo-tree-id8333 . -23) (undo-tree-id8334 . -23) (undo-tree-id8335 . -23) (undo-tree-id8336 . -23) (undo-tree-id8337 . -23) (undo-tree-id8338 . -23) (undo-tree-id8339 . -23) (undo-tree-id8340 . -23) (undo-tree-id8341 . -23) (undo-tree-id8342 . -23) (undo-tree-id8343 . -23) (undo-tree-id8344 . -23) (undo-tree-id8345 . -23) (undo-tree-id8346 . -23) (undo-tree-id8347 . -23) (undo-tree-id8348 . -23) (undo-tree-id8349 . -23) (undo-tree-id8350 . -23) (undo-tree-id8351 . -23) (undo-tree-id8352 . -23) (undo-tree-id8353 . -23) (undo-tree-id8354 . -23) (undo-tree-id8355 . -23) (undo-tree-id8356 . -23) (undo-tree-id8357 . -23) (undo-tree-id8358 . -23) (undo-tree-id8359 . -23) (undo-tree-id8360 . -23) (undo-tree-id8361 . -23) (undo-tree-id8362 . -23) (undo-tree-id8363 . -23) (undo-tree-id8364 . -23) (undo-tree-id8365 . -23) (undo-tree-id8366 . -23) (undo-tree-id8367 . -23) (undo-tree-id8368 . -23) (undo-tree-id8369 . -23) (undo-tree-id8370 . -23) (undo-tree-id8371 . -24) (undo-tree-id8372 . -23) (undo-tree-id8373 . -24) (undo-tree-id8374 . -25) (undo-tree-id8375 . -24) (undo-tree-id8376 . -25) (undo-tree-id8377 . -26) (undo-tree-id8378 . -25) (undo-tree-id8379 . -26) (undo-tree-id8380 . -27) (undo-tree-id8381 . -26) (undo-tree-id8382 . -27) (undo-tree-id8383 . -28) (undo-tree-id8384 . -27) (undo-tree-id8385 . -28) (undo-tree-id8386 . -29) (undo-tree-id8387 . -28) (undo-tree-id8388 . -29) (undo-tree-id8389 . -30) (undo-tree-id8390 . -29) (undo-tree-id8391 . -30) (undo-tree-id8392 . -31) (undo-tree-id8393 . -30) (undo-tree-id8394 . -31) (undo-tree-id8395 . -32) (undo-tree-id8396 . -31) (undo-tree-id8397 . -32) (undo-tree-id8398 . -33) (undo-tree-id8399 . -32) (undo-tree-id8400 . -33) (undo-tree-id8401 . -33) (undo-tree-id8402 . -33) (undo-tree-id8403 . -33) (undo-tree-id8404 . -33) (undo-tree-id8405 . -33) (undo-tree-id8406 . -33) (undo-tree-id8407 . -33) (undo-tree-id8408 . -33) (undo-tree-id8409 . -33) (undo-tree-id8410 . -33) (undo-tree-id8411 . -33) (undo-tree-id8412 . -33) (undo-tree-id8413 . -34) (undo-tree-id8414 . -33) (undo-tree-id8415 . -34) (undo-tree-id8416 . -35) (undo-tree-id8417 . -34) (undo-tree-id8418 . -35) (undo-tree-id8419 . -36) (undo-tree-id8420 . -35) (undo-tree-id8421 . -36) (undo-tree-id8422 . -37) (undo-tree-id8423 . -36) (undo-tree-id8424 . -37) (undo-tree-id8425 . -38) (undo-tree-id8426 . -37) (undo-tree-id8427 . -38) (undo-tree-id8428 . -39) (undo-tree-id8429 . -38) (undo-tree-id8430 . -39) (undo-tree-id8431 . -40) (undo-tree-id8432 . -39) (undo-tree-id8433 . -40) (undo-tree-id8434 . -41) (undo-tree-id8435 . -40) (undo-tree-id8436 . -41) (undo-tree-id8437 . -42) (undo-tree-id8438 . -41) (undo-tree-id8439 . -42) (undo-tree-id8440 . -43) (undo-tree-id8441 . -42) (undo-tree-id8442 . -43) (undo-tree-id8443 . -44) (undo-tree-id8444 . -43) (undo-tree-id8445 . -44) (undo-tree-id8446 . -45) (undo-tree-id8447 . -44) (undo-tree-id8448 . -45) (undo-tree-id8449 . -44) (undo-tree-id8450 . -44) (undo-tree-id8451 . -44) (undo-tree-id8452 . -44) (undo-tree-id8453 . -44) (undo-tree-id8454 . -44) (undo-tree-id8455 . -44) (undo-tree-id8456 . -44) (undo-tree-id8457 . -44) (undo-tree-id8458 . -44) (undo-tree-id8459 . -89) (undo-tree-id8460 . -89) (undo-tree-id8461 . -89) (undo-tree-id8462 . -89) (undo-tree-id8463 . -89) (undo-tree-id8464 . -89) (undo-tree-id8465 . -89) (undo-tree-id8466 . -89) (undo-tree-id8467 . -89) (undo-tree-id8468 . -89) (undo-tree-id8469 . -89) (undo-tree-id8470 . -89) (undo-tree-id8471 . -88) (undo-tree-id8472 . -89) (undo-tree-id8473 . -88) (undo-tree-id8474 . -89) (undo-tree-id8475 . -88) (undo-tree-id8476 . -88) (undo-tree-id8477 . -88) (undo-tree-id8478 . -88) (undo-tree-id8479 . -88) (undo-tree-id8480 . -88) (undo-tree-id8481 . -88) (undo-tree-id8482 . -88) (undo-tree-id8483 . -88) (undo-tree-id8484 . -88)) ((17333 . 17422)) (25301 34765 587183 257000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17421) (undo-tree-id9244 . 1)) nil (25301 34908 413479 572000) 0 nil])
nil
([nil nil ((#("Simply adjusting your first submission based on our feedback will be not be enough. 
" 0 85 (fontified t)) . 17506) (undo-tree-id9242 . -84) (undo-tree-id9243 . -83) 17589) nil (25301 34908 413477 938000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17506)) nil (25301 34908 413474 361000) 0 nil])
([nil nil ((17806 . 17810) (#("m" 0 1 (fontified t)) . -17806) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (#("y" 0 1 (fontified t)) . -17807) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (#(" " 0 1 (fontified t)) . -17808) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (#("o" 0 1 (fontified t)) . -17809) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (#("w" 0 1 (fontified t)) . -17810) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (#("n" 0 1 (fontified t)) . -17811) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) 17812) nil (25301 34908 413472 934000) 0 nil])
([nil nil ((17648 . 17649) (#("p" 0 1 (fontified t)) . 17648)) nil (25301 34908 413457 201000) 0 nil])
([nil nil ((17704 . 17705) (#("p" 0 1 (fontified t)) . 17704)) nil (25301 34908 413456 715000) 0 nil])
([nil nil ((18032 . 18033) (#("p" 0 1 (fontified t)) . 18032)) nil (25301 34908 413456 135000) 0 nil])
([nil nil ((18201 . 18202) (#("p" 0 1 (fontified t)) . 18201)) nil (25301 34908 413455 230000) 0 nil])
([nil nil ((18357 . 18362) (18338 . 18357) (18336 . 18339)) nil (25301 34908 413451 295000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -18378) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (#("e" 0 1 (fontified t)) . -18379) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (#("e" 0 1 (fontified t)) . -18380) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (#(" " 0 1 (fontified t)) . -18381) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) 18382 (t 25301 34908 462616 882000)) nil (25301 35095 505866 473000) 0 nil])
([nil nil ((18483 . 18485)) nil (25301 35095 505856 714000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18523 . 18524) (nil fontified nil 18485 . 18524) (18485 . 18524) 18484) nil (25301 35095 505855 855000) 0 nil])
([nil nil ((#("[[https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks]]
" 0 1 (face org-link font-lock-multiline t htmlize-link (:uri "https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks") help-echo "LINK: https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 1 2 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks") help-echo "LINK: https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 2 83 (face org-link font-lock-multiline t htmlize-link (:uri "https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks") help-echo "LINK: https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 83 84 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks") help-echo "LINK: https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 84 85 (face org-link font-lock-multiline t htmlize-link (:uri "https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks") help-echo "LINK: https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t) 85 86 (face org-link font-lock-multiline t htmlize-link (:uri "https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks") help-echo "LINK: https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 86 87 (fontified t)) . 18525) (undo-tree-id9249 . -42) 18567) nil (25301 35095 505852 415000) 0 nil])
([nil nil ((15523 . 15525) (t 25301 35095 553968 694000)) nil (25301 36153 624370 288000) 0 nil])
([nil nil ((15660 . 15662)) nil (25301 36153 624369 427000) 0 nil])
([nil nil ((15826 . 15828)) nil (25301 36153 624365 937000) 0 nil])
([nil nil ((#("9) " 0 3 (face org-table fontified t)) . 5360) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . 2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (t 25302 49128 193265 614000)) nil (25306 32307 882488 401000) 0 nil])
([nil nil ((#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.      | CZ 114 | Intro python, markdown, github, jupyterlab     |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 59 (face org-table fontified nil) 59 60 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 60 108 (face org-table fontified nil) 108 109 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 109 131 (face org-table fontified nil) 131 132 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 132 133 (fontified nil)) . 5438) (undo-tree-id87 . -59) (undo-tree-id88 . -59) (undo-tree-id89 . 74) (undo-tree-id90 . -59) (undo-tree-id91 . -59) (5299 . 5438) 5358 (#("(" 0 1 (face org-table fontified t)) . -5358) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 5359 (#("9" 0 1 (face org-table fontified t)) . -5359) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (face org-table fontified t)) . -5360) (undo-tree-id104 . 1) (undo-tree-id105 . -1) (#(")" 0 1 (face org-table fontified t)) . -5361) (undo-tree-id106 . 1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 5362 (5361 . 5362) (#(")" 0 1 (face org-table fontified nil)) . -5361) (5361 . 5362)) nil (25306 32307 882477 929000) 0 nil])
([nil nil ((#("| Thu | 2022-09-01 | 14:45-16:30 | VERVALT        | AZ 201 (97)  |                                                | Intro (1,2)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 1 6 (face org-table fontified t) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 7 19 (face org-table fontified t) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 20 33 (face org-table fontified t) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 34 50 (face org-table fontified t) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 51 65 (face org-table fontified t) 65 66 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 66 114 (face org-table fontified t) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 115 137 (face org-table fontified t) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified t) 138 139 (fontified t)) . 5438) (undo-tree-id82 . 139) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . 137) (undo-tree-id86 . -1) 5439) nil (25306 32307 882402 448000) 0 nil])
([nil nil ((#("(96)" 0 4 (face org-table fontified t)) . 5495) (undo-tree-id73 . -2) (undo-tree-id74 . 1) (undo-tree-id75 . -4) (undo-tree-id76 . 4) (undo-tree-id77 . -1) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) 5497) nil (25306 32307 882395 909000) 0 nil])
([nil nil ((#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J  | CZ 7     | Plenary Career Session: see Canvas for details | Intro (3,4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 5577) (undo-tree-id66 . -57) (undo-tree-id67 . 135) (undo-tree-id68 . 135) (undo-tree-id69 . -57) (undo-tree-id70 . -57) (undo-tree-id71 . -57) (undo-tree-id72 . -57) (5438 . 5577) 5495) nil (25306 32307 882386 813000) 0 nil])
([nil nil ((#("(32)" 0 4 (face org-table fontified t)) . 6042) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . 1) (undo-tree-id62 . -4) (undo-tree-id63 . 4) (undo-tree-id64 . -1) (undo-tree-id65 . -3) (#("(32)" 0 4 (face org-table fontified t)) . 5907) (#("(32)" 0 4 (face org-table fontified t)) . 5772) (#("(32)" 0 4 (face org-table fontified t)) . 5637) 6057) nil (25306 32307 882377 974000) 0 nil])
([nil nil ((#("(97)" 0 4 (face org-table fontified t)) . 6579) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . 1) (undo-tree-id55 . -4) (undo-tree-id56 . 4) (undo-tree-id57 . -1) (undo-tree-id58 . -3) (#("(97)" 0 4 (face org-table fontified t)) . 6444) (#("(96)" 0 4 (face org-table fontified t)) . 6309) (#("(96)" 0 4 (face org-table fontified t)) . 6174) 6594) nil (25306 32307 882366 786000) 0 nil])
([nil nil ((#("6)  " 0 4 (face org-table fontified t)) . 7391) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . 3) (undo-tree-id50 . -2) (undo-tree-id51 . -3) (#("6)  " 0 4 (face org-table fontified t)) . 7256) (#("(97)" 0 4 (face org-table fontified t)) . 7121) (#("6)  " 0 4 (face org-table fontified t)) . 6986) (#("(97)" 0 4 (face org-table fontified t)) . 6851) (#("(97)" 0 4 (face org-table fontified t)) . 6716) 7414) nil (25306 32307 882355 730000) 0 nil])
([nil nil ((#("| Wed | 2022-12-07 | 12:45-14:30 | Boone, J.      | CZ 7 (9  | Q&A                                            |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 7433) (undo-tree-id13 . -59) (undo-tree-id14 . 76) (undo-tree-id15 . -59) (undo-tree-id16 . -61) (undo-tree-id17 . -135) (undo-tree-id18 . 135) (7299 . 7433) (#("| Fri | 2022-12-02 | 12:45-14:30 | Boone, J.      | CZ 7 (9  | notebook gender economics                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 113 (face org-table fontified nil) 113 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 7299) (undo-tree-id19 . 135) (7165 . 7299) (#("| Mon | 2022-11-28 | 10:45-12:30 | Ferrando, M.   | AZ 201   | Lecture gender economics                       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 7165) (undo-tree-id20 . 135) (7031 . 7165) (#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.      | CZ 7 (9  | notebook gender economics                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 7031) (undo-tree-id21 . 135) (6897 . 7031) (#("| Mon | 2022-11-21 | 10:45-12:30 | Ferrando, M.   | AZ 201   | Lecture gender economics                       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6897) (undo-tree-id22 . 135) (6763 . 6897) (#("| Wed | 2022-11-16 | 10:45-12:30 | Boone, J.      | AZ 201   | Healthcare and regulation                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6763) (undo-tree-id23 . -59) (undo-tree-id24 . -59) (undo-tree-id25 . 135) (6629 . 6763) (#("| Tue | 2022-11-08 | 10:45-12:30 | Boone, J.      | CZ 9     | Empirical research                             |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6629) (undo-tree-id26 . 135) (6495 . 6629) (#("| Tue | 2022-10-11 | 10:45-12:30 | Boone, J.      | CZ 9     | Financial crisis                               |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6495) (undo-tree-id27 . 135) (6361 . 6495) (#("| Thu | 2022-09-29 | 12:45-14:30 | Boone, J.      | CZ 7     | Asymmetric information                         | Pandas (3,4)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6361) (undo-tree-id28 . 135) (6227 . 6361) (#("| Wed | 2022-09-21 | 12:45-14:30 | Boone, J.      | CZ 7     | The market                                     | Pandas (1,2)         |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6227) (undo-tree-id29 . 135) (6093 . 6227) (#("| Tue | 2022-09-13 | 12:45-16:30 | Boomaars, J.   | RTZ 501  | Career workshops: see Canvas for details       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 6093) (undo-tree-id30 . 135) (5959 . 6093) (#("| Tue | 2022-09-13 | 12:45-16:30 | Ladenstein, J. | RTZ 103  | Career workshops: see Canvas for details       | Intermediate (3,4,5) |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 5959) (undo-tree-id31 . 135) (5825 . 5959) (#("| Mon | 2022-09-12 | 14:45-18:30 | Boomaars, J.   | RTZ 203  | Career workshops: see Canvas for details       |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 5825) (undo-tree-id32 . 135) (5691 . 5825) (#("| Mon | 2022-09-12 | 14:45-18:30 | Ladenstein, J. | RTZ 202  | Career workshops: see Canvas for details       | Intermediate (1,2)   |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 61 (face org-table fontified nil) 61 62 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 62 110 (face org-table fontified nil) 110 111 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 111 133 (face org-table fontified nil) 133 134 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 134 135 (fontified nil)) . 5691) (undo-tree-id33 . 135) (5557 . 5691) (#("| Wed | 2022-09-07 | 16:45-18:30 | Ladenstein, J  | CZ 7         | Plenary Career Session: see Canvas for details | Intro (3,4)          |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 48 (face org-table fontified nil) 48 49 (face org-table fontified nil) 49 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 52 (face org-table fontified nil) 52 56 (face org-table fontified nil) 56 64 (face org-table fontified nil) 64 65 (face org-table fontified nil) 65 66 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 66 67 (face org-table fontified nil) 67 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 127 (face org-table fontified nil) 127 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 5557) (undo-tree-id34 . -139) (undo-tree-id35 . -139) (undo-tree-id36 . -139) (undo-tree-id37 . -139) (5423 . 5557) (#("| Tue | 2022-08-30 | 14:45-16:30 | Boone, J.      | CZ 114       | Intro python, markdown, github, jupyterlab     |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 49 (face org-table fontified nil) 49 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 52 (face org-table fontified nil) 52 58 (face org-table fontified nil) 58 64 (face org-table fontified nil) 64 65 (face org-table fontified nil) 65 66 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 66 67 (face org-table fontified nil) 67 109 (face org-table fontified nil) 109 113 (face org-table fontified nil) 113 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 116 (face org-table fontified nil) 116 136 (face org-table fontified nil) 136 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 5423) (undo-tree-id38 . -139) (undo-tree-id39 . -139) (5289 . 5423) (#("|-----+------------+-------------+----------------+--------------+------------------------------------------------+----------------------|
" 0 1 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 1 2 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 2 3 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 3 4 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 4 5 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 5 6 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 6 7 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 7 8 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 8 9 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 9 10 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 10 11 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 11 12 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 12 13 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 13 14 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 14 15 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 15 16 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 16 17 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 17 18 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 18 19 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 19 20 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 20 21 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 21 22 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 22 23 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 23 24 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 24 25 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 25 26 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 26 27 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 27 28 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 28 29 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 29 30 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 30 31 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 31 32 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 32 33 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 33 34 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 34 35 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 35 36 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 36 37 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 37 38 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 38 39 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 39 40 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 40 41 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 41 42 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 42 43 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 43 44 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 44 45 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 45 46 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 46 47 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 47 48 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 48 49 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 49 50 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 50 51 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 51 52 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 52 53 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 53 54 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 54 55 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 55 56 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 56 57 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 57 58 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 58 59 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 59 60 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 60 61 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 61 62 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 62 63 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 63 64 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 64 65 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 65 66 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 66 67 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 67 68 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 68 69 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 69 70 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 70 71 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 71 72 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 72 73 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 73 74 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 74 75 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 75 76 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 76 77 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 77 78 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 78 79 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 79 80 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 80 81 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 81 82 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 82 83 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 83 84 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 84 85 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 85 86 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 86 87 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 87 88 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 88 89 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 89 90 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 90 91 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 91 92 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 92 93 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 93 94 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 94 95 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 95 96 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 96 97 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 97 98 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 98 99 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 99 100 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 100 101 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 101 102 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 102 103 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 103 104 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 104 105 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 105 106 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 106 107 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 107 108 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 108 109 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 109 110 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 110 111 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 111 112 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 112 113 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 113 114 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 114 115 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 115 116 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 116 117 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 117 118 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 118 119 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 119 120 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 120 121 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 121 122 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 122 123 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 123 124 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 124 125 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 125 126 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 126 127 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 127 128 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 128 129 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 129 130 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 130 131 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 131 132 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 132 133 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 133 134 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 134 135 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 135 136 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 136 137 (display (space :width 1) face (org-table (:overline "#bb80b3") (:height 0.1)) fontified nil) 137 138 (display (space :width (3)) face ((:inherit org-table :inverse-video t) (:overline "#bb80b3") (:height 0.1)) fontified nil) 138 139 (face (:height 0.1) fontified nil)) . 5289) (undo-tree-id40 . -139) (undo-tree-id41 . -139) (undo-tree-id42 . -139) (undo-tree-id43 . -139) (undo-tree-id44 . -139) (undo-tree-id45 . -139) (undo-tree-id46 . -139) (5155 . 5289) (#("| day |       date |        time | staff          | room         | Topic                                          | Datacamp             |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 65 (face org-table fontified nil) 65 66 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 66 114 (face org-table fontified nil) 114 115 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 115 137 (face org-table fontified nil) 137 138 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 138 139 (fontified nil)) . 5155) (5021 . 5155) 6716) nil (25306 32307 882342 34000) 0 nil])
([nil nil ((#("(" 0 1 (face org-table fontified t)) . 6954) (undo-tree-id11 . 1) (undo-tree-id12 . -1)) nil (25306 32307 882302 687000) 0 nil])
([nil nil ((6955 . 6956) (#("9" 0 1 (face org-table fontified t)) . 6954) (undo-tree-id9 . 1) (undo-tree-id10 . 1)) nil (25306 32307 882299 621000) 0 nil])
([nil nil ((7223 . 7224) (#("9" 0 1 (face org-table fontified t)) . 7221) (undo-tree-id6 . 1) (7223 . 7224) (#("(" 0 1 (face org-table fontified t)) . 7221) (undo-tree-id7 . 1) (undo-tree-id8 . -1)) nil (25306 32307 882295 955000) 0 nil])
([nil nil ((7357 . 7358) (#("9" 0 1 (face org-table fontified t)) . 7355) (7357 . 7358) (#("(" 0 1 (face org-table fontified t)) . 7355) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) nil (25306 32307 882289 972000) 0 nil])
([nil current ((#("| Fri | 2022-11-25 | 12:45-14:30 | Boone, J.      | CZ 7   | notebook gender economics                      |                      |
" 0 1 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 1 2 (face org-table fontified nil) 2 5 (face org-table fontified nil) 5 6 (face org-table fontified nil) 6 7 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 7 8 (face org-table fontified nil) 8 18 (face org-table fontified nil) 18 19 (face org-table fontified nil) 19 20 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 20 21 (face org-table fontified nil) 21 32 (face org-table fontified nil) 32 33 (face org-table fontified nil) 33 34 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 34 35 (face org-table fontified nil) 35 44 (face org-table fontified nil) 44 49 (face org-table fontified nil) 49 50 (face org-table fontified nil) 50 51 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 51 52 (face org-table fontified nil) 52 57 (face org-table fontified nil) 57 58 (face org-table fontified nil) 58 59 (face org-table fontified nil) 59 60 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 60 61 (face org-table fontified nil) 61 86 (face org-table fontified nil) 86 107 (face org-table fontified nil) 107 108 (face org-table fontified nil) 108 109 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 109 110 (face org-table fontified nil) 110 130 (face org-table fontified nil) 130 131 (face org-table fontified nil) 131 132 (display (space :width (3)) face (:inherit org-table :inverse-video t) fontified nil) 132 133 (fontified nil)) . 7031) (undo-tree-id0 . -57) (undo-tree-id1 . 76) (undo-tree-id2 . -57) (undo-tree-id3 . -57) (6897 . 7031) 7355) nil (25306 32307 882282 726000) 0 nil])
nil
